#include <math.h>
#include <ap_fixed.h>




ap_fixed<32,18> rand_func(ap_fixed<32,2> qcos_0, ap_fixed<32,2> qcos_1, ap_fixed<32,2> qcos_2, ap_fixed<32,2> qcos_3, ap_fixed<32,2> qcos_4, ap_fixed<32,2> qcos_5, ap_fixed<32,2> qsin_0, ap_fixed<32,2> qsin_1, ap_fixed<32,2> qsin_2, ap_fixed<32,2> qsin_3, ap_fixed<32,2> qsin_4, ap_fixed<32,2> qsin_5, ap_fixed<32,4> v_0, ap_fixed<32,4> v_1, ap_fixed<32,4> v_2, ap_fixed<32,4> v_3, ap_fixed<32,4> v_4, ap_fixed<32,4> v_5, ap_fixed<32,4> a_0, ap_fixed<32,4> a_1, ap_fixed<32,4> a_2, ap_fixed<32,4> a_3, ap_fixed<32,4> a_4, ap_fixed<32,4> a_5) {
  ap_fixed<32,1> limi_translation_0_2 = 0.333;
  ap_fixed<32,1> limi_translation_0_1 = 0.0;
  ap_fixed<32,1> limi_translation_0_0 = 0.0;
  ap_fixed<32,1> limi_translation_1_2 = 0.0;
  ap_fixed<32,1> limi_translation_1_1 = 0.0;
  ap_fixed<32,1> limi_translation_1_0 = 0.0;
  ap_fixed<32,1> limi_translation_2_2 = 0.0;
  ap_fixed<32,1> limi_translation_2_1 = -0.316;
  ap_fixed<32,1> limi_translation_2_0 = 0.0;
  ap_fixed<32,1> limi_translation_3_2 = 0.0;
  ap_fixed<32,1> limi_translation_3_1 = 0.0;
  ap_fixed<32,1> limi_translation_3_0 = 0.0825;
  ap_fixed<32,1> limi_translation_4_2 = 0.0;
  ap_fixed<32,1> limi_translation_4_1 = 0.384;
  ap_fixed<32,1> limi_translation_4_0 = -0.0825;
  ap_fixed<32,1> limi_translation_5_2 = 0.0;
  ap_fixed<32,1> limi_translation_5_1 = 0.0;
  ap_fixed<32,1> limi_translation_5_0 = 0.0;
  ap_fixed<32,1> data_v_0_5 = 0.0;
  ap_fixed<32,1> data_v_0_4 = 0.0;
  ap_fixed<32,1> data_v_0_3 = 0.0;
  ap_fixed<32,1> data_v_0_2 = 0.0;
  ap_fixed<32,1> data_v_0_1 = 0.0;
  ap_fixed<32,1> data_v_0_0 = 0.0;
  ap_fixed<32,1> data_v_1_5 = 0.0;
  ap_fixed<32,1> data_v_1_4 = 0.0;
  ap_fixed<32,1> data_v_1_3 = 0.0;
  ap_fixed<32,1> data_v_1_2 = 0.0;
  ap_fixed<32,1> data_v_1_1 = 0.0;
  ap_fixed<32,1> data_v_1_0 = 0.0;
  ap_fixed<32,1> data_v_2_5 = 0.0;
  ap_fixed<32,1> data_v_2_4 = 0.0;
  ap_fixed<32,1> data_v_2_3 = 0.0;
  ap_fixed<32,1> data_v_2_2 = 0.0;
  ap_fixed<32,1> data_v_2_1 = 0.0;
  ap_fixed<32,1> data_v_2_0 = 0.0;
  ap_fixed<32,1> data_v_3_5 = 0.0;
  ap_fixed<32,1> data_v_3_4 = 0.0;
  ap_fixed<32,1> data_v_3_3 = 0.0;
  ap_fixed<32,1> data_v_3_2 = 0.0;
  ap_fixed<32,1> data_v_3_1 = 0.0;
  ap_fixed<32,1> data_v_3_0 = 0.0;
  ap_fixed<32,1> data_v_4_5 = 0.0;
  ap_fixed<32,1> data_v_4_4 = 0.0;
  ap_fixed<32,1> data_v_4_3 = 0.0;
  ap_fixed<32,1> data_v_4_2 = 0.0;
  ap_fixed<32,1> data_v_4_1 = 0.0;
  ap_fixed<32,1> data_v_4_0 = 0.0;
  ap_fixed<32,1> data_v_5_5 = 0.0;
  ap_fixed<32,1> data_v_5_4 = 0.0;
  ap_fixed<32,1> data_v_5_3 = 0.0;
  ap_fixed<32,1> data_v_5_2 = 0.0;
  ap_fixed<32,1> data_v_5_1 = 0.0;
  ap_fixed<32,1> data_v_5_0 = 0.0;
  ap_fixed<32,1> lever_0_2 = -0.04762;
  ap_fixed<32,1> lever_0_1 = 0.002081;
  ap_fixed<32,1> lever_0_0 = 0.003875;
  ap_fixed<32,1> lever_1_2 = 0.003495;
  ap_fixed<32,1> lever_1_1 = -0.02872;
  ap_fixed<32,1> lever_1_0 = -0.003141;
  ap_fixed<32,1> lever_2_2 = -0.066502;
  ap_fixed<32,1> lever_2_1 = 0.039252;
  ap_fixed<32,1> lever_2_0 = 0.027518;
  ap_fixed<32,1> lever_3_2 = 0.027454;
  ap_fixed<32,1> lever_3_1 = 0.104419;
  ap_fixed<32,1> lever_3_0 = -0.05317;
  ap_fixed<32,1> lever_4_2 = -0.038437;
  ap_fixed<32,1> lever_4_1 = 0.041065;
  ap_fixed<32,1> lever_4_0 = -0.011953;
  ap_fixed<32,1> lever_5_2 = -0.010517;
  ap_fixed<32,1> lever_5_1 = -0.014117;
  ap_fixed<32,1> lever_5_0 = 0.060149;
  ap_fixed<32,2> masses_5 = 1.66656;
  ap_fixed<32,2> masses_4 = 1.225946;
  ap_fixed<32,3> masses_3 = 3.587895;
  ap_fixed<32,3> masses_2 = 3.228604;
  ap_fixed<32,1> masses_1 = 0.646926;
  ap_fixed<32,4> masses_0 = 4.970684;
  ap_fixed<32,1> inertia_0_2_2 = 0.009117;
  ap_fixed<32,1> inertia_0_2_1 = 0.019169;
  ap_fixed<32,1> inertia_0_2_0 = 0.006772;
  ap_fixed<32,1> inertia_0_1_2 = 0.019169;
  ap_fixed<32,1> inertia_0_1_1 = 0.70661;
  ap_fixed<32,1> inertia_0_1_0 = -0.000139;
  ap_fixed<32,1> inertia_0_0_2 = 0.006772;
  ap_fixed<32,1> inertia_0_0_1 = -0.000139;
  ap_fixed<32,1> inertia_0_0_0 = 0.70337;
  ap_fixed<32,1> inertia_1_2_2 = 0.025995;
  ap_fixed<32,1> inertia_1_2_1 = 0.000704;
  ap_fixed<32,1> inertia_1_2_0 = 0.010254;
  ap_fixed<32,1> inertia_1_1_2 = 0.000704;
  ap_fixed<32,1> inertia_1_1_1 = 0.02811;
  ap_fixed<32,1> inertia_1_1_0 = -0.003925;
  ap_fixed<32,1> inertia_1_0_2 = 0.010254;
  ap_fixed<32,1> inertia_1_0_1 = -0.003925;
  ap_fixed<32,1> inertia_1_0_0 = 0.007962;
  ap_fixed<32,1> inertia_2_2_2 = 0.01083;
  ap_fixed<32,1> inertia_2_2_1 = -0.012805;
  ap_fixed<32,1> inertia_2_2_0 = -0.011396;
  ap_fixed<32,1> inertia_2_1_2 = -0.012805;
  ap_fixed<32,1> inertia_2_1_1 = 0.036155;
  ap_fixed<32,1> inertia_2_1_0 = -0.004761;
  ap_fixed<32,1> inertia_2_0_2 = -0.011396;
  ap_fixed<32,1> inertia_2_0_1 = -0.004761;
  ap_fixed<32,1> inertia_2_0_0 = 0.037242;
  ap_fixed<32,1> inertia_3_2_2 = 0.028323;
  ap_fixed<32,1> inertia_3_2_1 = 0.008641;
  ap_fixed<32,1> inertia_3_2_0 = -0.001332;
  ap_fixed<32,1> inertia_3_1_2 = 0.008641;
  ap_fixed<32,1> inertia_3_1_1 = 0.019552;
  ap_fixed<32,1> inertia_3_1_0 = 0.007796;
  ap_fixed<32,1> inertia_3_0_2 = -0.001332;
  ap_fixed<32,1> inertia_3_0_1 = 0.007796;
  ap_fixed<32,1> inertia_3_0_0 = 0.025853;
  ap_fixed<32,1> inertia_4_2_2 = 0.008627;
  ap_fixed<32,1> inertia_4_2_1 = 0.000229;
  ap_fixed<32,1> inertia_4_2_0 = -0.004037;
  ap_fixed<32,1> inertia_4_1_2 = 0.000229;
  ap_fixed<32,1> inertia_4_1_1 = 0.029474;
  ap_fixed<32,1> inertia_4_1_0 = -0.002117;
  ap_fixed<32,1> inertia_4_0_2 = -0.004037;
  ap_fixed<32,1> inertia_4_0_1 = -0.002117;
  ap_fixed<32,1> inertia_4_0_0 = 0.035549;
  ap_fixed<32,1> inertia_5_2_2 = 0.005433;
  ap_fixed<32,1> inertia_5_2_1 = 0.000341;
  ap_fixed<32,1> inertia_5_2_0 = -0.001158;
  ap_fixed<32,1> inertia_5_1_2 = 0.000341;
  ap_fixed<32,1> inertia_5_1_1 = 0.004354;
  ap_fixed<32,1> inertia_5_1_0 = 0.000109;
  ap_fixed<32,1> inertia_5_0_2 = -0.001158;
  ap_fixed<32,1> inertia_5_0_1 = 0.000109;
  ap_fixed<32,1> inertia_5_0_0 = 0.001964;
  ap_fixed<32,1> parent_v_5 = 0.0;
  ap_fixed<32,1> parent_v_4 = 0.0;
  ap_fixed<32,1> parent_v_3 = 0.0;
  ap_fixed<32,1> parent_v_2 = 0.0;
  ap_fixed<32,1> parent_v_1 = 0.0;
  ap_fixed<32,1> parent_v_0 = 0.0;
  ap_fixed<32,1> parent_a_gf_5 = 0.0;
  ap_fixed<32,1> parent_a_gf_4 = 0.0;
  ap_fixed<32,1> parent_a_gf_3 = 0.0;
  ap_fixed<32,5> parent_a_gf_2 = 9.81;
  ap_fixed<32,1> parent_a_gf_1 = 0.0;
  ap_fixed<32,1> parent_a_gf_0 = 0.0;
  ap_fixed<32,1> new_v_5 = 0.0;
  ap_fixed<32,1> new_v_4 = 0.0;
  ap_fixed<32,1> new_v_3 = 0.0;
  ap_fixed<32,1> new_v_2 = 0.0;
  ap_fixed<32,1> new_v_1 = 0.0;
  ap_fixed<32,1> new_v_0 = 0.0;
  ap_fixed<32,1> new_a_gf_5 = 0.0;
  ap_fixed<32,1> new_a_gf_4 = 0.0;
  ap_fixed<32,1> new_a_gf_3 = 0.0;
  ap_fixed<32,1> new_a_gf_2 = 0.0;
  ap_fixed<32,1> new_a_gf_1 = 0.0;
  ap_fixed<32,1> new_a_gf_0 = 0.0;
  ap_fixed<32,1> new_h_5 = 0.0;
  ap_fixed<32,1> new_h_4 = 0.0;
  ap_fixed<32,1> new_h_3 = 0.0;
  ap_fixed<32,1> new_h_2 = 0.0;
  ap_fixed<32,1> new_h_1 = 0.0;
  ap_fixed<32,1> new_h_0 = 0.0;
  ap_fixed<32,1> new_f_5 = 0.0;
  ap_fixed<32,1> new_f_4 = 0.0;
  ap_fixed<32,1> new_f_3 = 0.0;
  ap_fixed<32,1> new_f_2 = 0.0;
  ap_fixed<32,1> new_f_1 = 0.0;
  ap_fixed<32,1> new_f_0 = 0.0;
  ap_fixed<32,2> rotation_matrix_0_2_2 = 1.0;
  ap_fixed<32,1> rotation_matrix_0_2_1 = 0.0;
  ap_fixed<32,1> rotation_matrix_0_2_0 = 0.0;
  ap_fixed<32,1> rotation_matrix_0_1_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_0_1_1 = qcos_0;
  ap_fixed<32,2> rotation_matrix_0_1_0 = qsin_0;
  ap_fixed<32,1> rotation_matrix_0_0_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_0_0_1 = -(qsin_0);
  ap_fixed<32,2> rotation_matrix_0_0_0 = qcos_0;
  ap_fixed<32,2> limi_rotation_0_2_2 = 1.0;
  ap_fixed<32,1> limi_rotation_0_2_1 = 0.0;
  ap_fixed<32,1> limi_rotation_0_2_0 = 0.0;
  ap_fixed<32,1> limi_rotation_0_1_2 = 0.0;
  ap_fixed<32,2> limi_rotation_0_1_1 = rotation_matrix_0_1_1;
  ap_fixed<32,2> limi_rotation_0_1_0 = rotation_matrix_0_1_0;
  ap_fixed<32,1> limi_rotation_0_0_2 = 0.0;
  ap_fixed<32,2> limi_rotation_0_0_1 = rotation_matrix_0_0_1;
  ap_fixed<32,2> limi_rotation_0_0_0 = rotation_matrix_0_0_0;
  ap_fixed<32,1> v_linear_0_2 = data_v_0_2;
  ap_fixed<32,1> v_linear_0_1 = data_v_0_1;
  ap_fixed<32,1> v_linear_0_0 = data_v_0_0;
  ap_fixed<32,4> v_angular_0_2 = v_0;
  ap_fixed<32,1> v_angular_0_1 = data_v_0_4;
  ap_fixed<32,1> v_angular_0_0 = data_v_0_3;
  ap_fixed<32,1> parent_v_linear_0_2 = parent_v_2;
  ap_fixed<32,1> parent_v_linear_0_1 = parent_v_1;
  ap_fixed<32,1> parent_v_linear_0_0 = parent_v_0;
  ap_fixed<32,1> parent_v_angular_0_2 = parent_v_5;
  ap_fixed<32,1> parent_v_angular_0_1 = parent_v_4;
  ap_fixed<32,1> parent_v_angular_0_0 = parent_v_3;
  ap_fixed<32,5> parent_a_gf_linear_0_2 = parent_a_gf_2;
  ap_fixed<32,1> parent_a_gf_linear_0_1 = parent_a_gf_1;
  ap_fixed<32,1> parent_a_gf_linear_0_0 = parent_a_gf_0;
  ap_fixed<32,1> parent_a_gf_angular_0_2 = parent_a_gf_5;
  ap_fixed<32,1> parent_a_gf_angular_0_1 = parent_a_gf_4;
  ap_fixed<32,1> parent_a_gf_angular_0_0 = parent_a_gf_3;
  ap_fixed<32,4> minus_m_w_0 = v_0;
  ap_fixed<32,4> temp2 = -(minus_m_w_0);
  ap_fixed<32,4> temp1 = -(temp2);
  ap_fixed<32,1> alpha_cross1_linear_0 = (temp1 * v_linear_0_1);
  ap_fixed<32,4> temp3 = -(minus_m_w_0);
  ap_fixed<32,1> alpha_cross2_linear_0 = (temp3 * v_linear_0_0);
  ap_fixed<32,1> alpha_cross_linear_0_2 = 0.0;
  ap_fixed<32,1> alpha_cross_linear_0_1 = alpha_cross2_linear_0;
  ap_fixed<32,1> alpha_cross_linear_0_0 = alpha_cross1_linear_0;
  ap_fixed<32,4> temp5 = -(minus_m_w_0);
  ap_fixed<32,4> temp4 = -(temp5);
  ap_fixed<32,1> alpha_cross1_angular_0 = (temp4 * v_angular_0_1);
  ap_fixed<32,4> temp6 = -(minus_m_w_0);
  ap_fixed<32,1> alpha_cross2_angular_0 = (temp6 * v_angular_0_0);
  ap_fixed<32,1> alpha_cross_angular_0_2 = 0.0;
  ap_fixed<32,1> alpha_cross_angular_0_1 = alpha_cross2_angular_0;
  ap_fixed<32,1> alpha_cross_angular_0_0 = alpha_cross1_angular_0;
  ap_fixed<32,1> new_a_gf_0_5 = alpha_cross_angular_0_2;
  ap_fixed<32,1> new_a_gf_0_4 = alpha_cross_angular_0_1;
  ap_fixed<32,1> new_a_gf_0_3 = alpha_cross_angular_0_0;
  ap_fixed<32,1> new_a_gf_0_2 = alpha_cross_linear_0_2;
  ap_fixed<32,1> new_a_gf_0_1 = alpha_cross_linear_0_1;
  ap_fixed<32,1> new_a_gf_0_0 = alpha_cross_linear_0_0;
  ap_fixed<32,4> new_a_gf_up1_0 = (a_0 + new_a_gf_0_5);
  ap_fixed<32,1> new_a_gf2_linear_0_2 = new_a_gf_0_2;
  ap_fixed<32,1> new_a_gf2_linear_0_1 = new_a_gf_0_1;
  ap_fixed<32,1> new_a_gf2_linear_0_0 = new_a_gf_0_0;
  ap_fixed<32,4> new_a_gf2_angular_0_2 = new_a_gf_up1_0;
  ap_fixed<32,1> new_a_gf2_angular_0_1 = new_a_gf_0_4;
  ap_fixed<32,1> new_a_gf2_angular_0_0 = new_a_gf_0_3;
  ap_fixed<32,1> actInv1_0_xTimes1 = (limi_translation_0_1 * parent_a_gf_angular_0_2);
  ap_fixed<32,1> actInv1_0_xTimes2 = (limi_translation_0_2 * parent_a_gf_angular_0_1);
  ap_fixed<32,1> actInv1_0_xMinus = (actInv1_0_xTimes1 - actInv1_0_xTimes2);
  ap_fixed<32,1> actInv1_0_yTimes1 = (limi_translation_0_2 * parent_a_gf_angular_0_0);
  ap_fixed<32,1> actInv1_0_yTimes2 = (limi_translation_0_0 * parent_a_gf_angular_0_2);
  ap_fixed<32,1> actInv1_0_yMinus = (actInv1_0_yTimes1 - actInv1_0_yTimes2);
  ap_fixed<32,1> actInv1_0_zTimes1 = (limi_translation_0_0 * parent_a_gf_angular_0_1);
  ap_fixed<32,1> actInv1_0_zTimes2 = (limi_translation_0_1 * parent_a_gf_angular_0_0);
  ap_fixed<32,1> actInv1_0_zMinus = (actInv1_0_zTimes1 - actInv1_0_zTimes2);
  ap_fixed<32,1> actInv1_0_0 = actInv1_0_xMinus;
  ap_fixed<32,1> actInv1_0_1 = actInv1_0_yMinus;
  ap_fixed<32,1> actInv1_0_2 = actInv1_0_zMinus;
  ap_fixed<32,5> actInv2_0_2 = (parent_a_gf_linear_0_2 - actInv1_0_2);
  ap_fixed<32,1> actInv2_0_1 = (parent_a_gf_linear_0_1 - actInv1_0_1);
  ap_fixed<32,1> actInv2_0_0 = (parent_a_gf_linear_0_0 - actInv1_0_0);
  ap_fixed<32,2> actInv3_0_2_2 = limi_rotation_0_2_2;
  ap_fixed<32,1> actInv3_0_1_2 = limi_rotation_0_2_1;
  ap_fixed<32,1> actInv3_0_0_2 = limi_rotation_0_2_0;
  ap_fixed<32,1> actInv3_0_2_1 = limi_rotation_0_1_2;
  ap_fixed<32,2> actInv3_0_1_1 = limi_rotation_0_1_1;
  ap_fixed<32,2> actInv3_0_0_1 = limi_rotation_0_1_0;
  ap_fixed<32,1> actInv3_0_2_0 = limi_rotation_0_0_2;
  ap_fixed<32,2> actInv3_0_1_0 = limi_rotation_0_0_1;
  ap_fixed<32,2> actInv3_0_0_0 = limi_rotation_0_0_0;
  ap_fixed<32,1> actInv4_0_0_times_0 = (actInv3_0_0_0 * actInv2_0_0);
  ap_fixed<32,1> actInv4_0_0_times_1 = (actInv3_0_0_1 * actInv2_0_1);
  ap_fixed<32,1> actInv4_0_0_times_2 = (actInv3_0_0_2 * actInv2_0_2);
  ap_fixed<32,1> actInv4_0_0_sum_0 = actInv4_0_0_times_0;
  ap_fixed<32,1> actInv4_0_0_sum_1 = (actInv4_0_0_sum_0 + actInv4_0_0_times_1);
  ap_fixed<32,1> actInv4_0_0_sum_2 = (actInv4_0_0_sum_1 + actInv4_0_0_times_2);
  ap_fixed<32,1> actInv4_0_0 = actInv4_0_0_sum_2;
  ap_fixed<32,1> actInv4_0_1_times_0 = (actInv3_0_1_0 * actInv2_0_0);
  ap_fixed<32,1> actInv4_0_1_times_1 = (actInv3_0_1_1 * actInv2_0_1);
  ap_fixed<32,1> actInv4_0_1_times_2 = (actInv3_0_1_2 * actInv2_0_2);
  ap_fixed<32,1> actInv4_0_1_sum_0 = actInv4_0_1_times_0;
  ap_fixed<32,1> actInv4_0_1_sum_1 = (actInv4_0_1_sum_0 + actInv4_0_1_times_1);
  ap_fixed<32,1> actInv4_0_1_sum_2 = (actInv4_0_1_sum_1 + actInv4_0_1_times_2);
  ap_fixed<32,1> actInv4_0_1 = actInv4_0_1_sum_2;
  ap_fixed<32,1> actInv4_0_2_times_0 = (actInv3_0_2_0 * actInv2_0_0);
  ap_fixed<32,1> actInv4_0_2_times_1 = (actInv3_0_2_1 * actInv2_0_1);
  ap_fixed<32,5> actInv4_0_2_times_2 = (actInv3_0_2_2 * actInv2_0_2);
  ap_fixed<32,1> actInv4_0_2_sum_0 = actInv4_0_2_times_0;
  ap_fixed<32,1> actInv4_0_2_sum_1 = (actInv4_0_2_sum_0 + actInv4_0_2_times_1);
  ap_fixed<32,5> actInv4_0_2_sum_2 = (actInv4_0_2_sum_1 + actInv4_0_2_times_2);
  ap_fixed<32,5> actInv4_0_2 = actInv4_0_2_sum_2;
  ap_fixed<32,5> act_inv_linear_0_2 = (new_a_gf2_linear_0_2 + actInv4_0_2);
  ap_fixed<32,1> act_inv_linear_0_1 = (new_a_gf2_linear_0_1 + actInv4_0_1);
  ap_fixed<32,1> act_inv_linear_0_0 = (new_a_gf2_linear_0_0 + actInv4_0_0);
  ap_fixed<32,1> actInv5_0_0_times_0 = (actInv3_0_0_0 * parent_a_gf_angular_0_0);
  ap_fixed<32,1> actInv5_0_0_times_1 = (actInv3_0_0_1 * parent_a_gf_angular_0_1);
  ap_fixed<32,1> actInv5_0_0_times_2 = (actInv3_0_0_2 * parent_a_gf_angular_0_2);
  ap_fixed<32,1> actInv5_0_0_sum_0 = actInv5_0_0_times_0;
  ap_fixed<32,1> actInv5_0_0_sum_1 = (actInv5_0_0_sum_0 + actInv5_0_0_times_1);
  ap_fixed<32,1> actInv5_0_0_sum_2 = (actInv5_0_0_sum_1 + actInv5_0_0_times_2);
  ap_fixed<32,1> actInv5_0_0 = actInv5_0_0_sum_2;
  ap_fixed<32,1> actInv5_0_1_times_0 = (actInv3_0_1_0 * parent_a_gf_angular_0_0);
  ap_fixed<32,1> actInv5_0_1_times_1 = (actInv3_0_1_1 * parent_a_gf_angular_0_1);
  ap_fixed<32,1> actInv5_0_1_times_2 = (actInv3_0_1_2 * parent_a_gf_angular_0_2);
  ap_fixed<32,1> actInv5_0_1_sum_0 = actInv5_0_1_times_0;
  ap_fixed<32,1> actInv5_0_1_sum_1 = (actInv5_0_1_sum_0 + actInv5_0_1_times_1);
  ap_fixed<32,1> actInv5_0_1_sum_2 = (actInv5_0_1_sum_1 + actInv5_0_1_times_2);
  ap_fixed<32,1> actInv5_0_1 = actInv5_0_1_sum_2;
  ap_fixed<32,1> actInv5_0_2_times_0 = (actInv3_0_2_0 * parent_a_gf_angular_0_0);
  ap_fixed<32,1> actInv5_0_2_times_1 = (actInv3_0_2_1 * parent_a_gf_angular_0_1);
  ap_fixed<32,1> actInv5_0_2_times_2 = (actInv3_0_2_2 * parent_a_gf_angular_0_2);
  ap_fixed<32,1> actInv5_0_2_sum_0 = actInv5_0_2_times_0;
  ap_fixed<32,1> actInv5_0_2_sum_1 = (actInv5_0_2_sum_0 + actInv5_0_2_times_1);
  ap_fixed<32,1> actInv5_0_2_sum_2 = (actInv5_0_2_sum_1 + actInv5_0_2_times_2);
  ap_fixed<32,1> actInv5_0_2 = actInv5_0_2_sum_2;
  ap_fixed<32,4> act_inv_angular_0_2 = (new_a_gf2_angular_0_2 + actInv5_0_2);
  ap_fixed<32,1> act_inv_angular_0_1 = (new_a_gf2_angular_0_1 + actInv5_0_1);
  ap_fixed<32,1> act_inv_angular_0_0 = (new_a_gf2_angular_0_0 + actInv5_0_0);
  ap_fixed<32,4> new_a_gf_up3_0_5 = act_inv_angular_0_2;
  ap_fixed<32,1> new_a_gf_up3_0_4 = act_inv_angular_0_1;
  ap_fixed<32,1> new_a_gf_up3_0_3 = act_inv_angular_0_0;
  ap_fixed<32,5> new_a_gf_up3_0_2 = act_inv_linear_0_2;
  ap_fixed<32,1> new_a_gf_up3_0_1 = act_inv_linear_0_1;
  ap_fixed<32,1> new_a_gf_up3_0_0 = act_inv_linear_0_0;
  ap_fixed<32,1> h_linear_1_0_xTimes1 = (lever_0_1 * v_angular_0_2);
  ap_fixed<32,1> h_linear_1_0_xTimes2 = (lever_0_2 * v_angular_0_1);
  ap_fixed<32,1> h_linear_1_0_xMinus = (h_linear_1_0_xTimes1 - h_linear_1_0_xTimes2);
  ap_fixed<32,1> h_linear_1_0_yTimes1 = (lever_0_2 * v_angular_0_0);
  ap_fixed<32,1> h_linear_1_0_yTimes2 = (lever_0_0 * v_angular_0_2);
  ap_fixed<32,1> h_linear_1_0_yMinus = (h_linear_1_0_yTimes1 - h_linear_1_0_yTimes2);
  ap_fixed<32,1> h_linear_1_0_zTimes1 = (lever_0_0 * v_angular_0_1);
  ap_fixed<32,1> h_linear_1_0_zTimes2 = (lever_0_1 * v_angular_0_0);
  ap_fixed<32,1> h_linear_1_0_zMinus = (h_linear_1_0_zTimes1 - h_linear_1_0_zTimes2);
  ap_fixed<32,1> h_linear_1_0_0 = h_linear_1_0_xMinus;
  ap_fixed<32,1> h_linear_1_0_1 = h_linear_1_0_yMinus;
  ap_fixed<32,1> h_linear_1_0_2 = h_linear_1_0_zMinus;
  ap_fixed<32,1> h_linear_2_0_2 = (v_linear_0_2 - h_linear_1_0_2);
  ap_fixed<32,1> h_linear_2_0_1 = (v_linear_0_1 - h_linear_1_0_1);
  ap_fixed<32,1> h_linear_2_0_0 = (v_linear_0_0 - h_linear_1_0_0);
  ap_fixed<32,1> h_linear_0_2 = (h_linear_2_0_2 * masses_0);
  ap_fixed<32,1> h_linear_0_1 = (h_linear_2_0_1 * masses_0);
  ap_fixed<32,1> h_linear_0_0 = (h_linear_2_0_0 * masses_0);
  ap_fixed<32,1> temp7 = (v_angular_0_0 * inertia_0_0_0);
  ap_fixed<32,1> temp8 = (v_angular_0_1 * inertia_0_0_1);
  ap_fixed<32,1> rhsMult1_temp_0 = (temp7 + temp8);
  ap_fixed<32,1> temp9 = (v_angular_0_2 * inertia_0_0_2);
  ap_fixed<32,1> rhsMult1_0 = (rhsMult1_temp_0 + temp9);
  ap_fixed<32,1> temp10 = (v_angular_0_0 * inertia_0_0_1);
  ap_fixed<32,1> temp11 = (v_angular_0_1 * inertia_0_1_1);
  ap_fixed<32,1> rhsMult2_temp_0 = (temp10 + temp11);
  ap_fixed<32,1> temp12 = (v_angular_0_2 * inertia_0_1_2);
  ap_fixed<32,1> rhsMult2_0 = (rhsMult2_temp_0 + temp12);
  ap_fixed<32,1> temp13 = (v_angular_0_0 * inertia_0_0_2);
  ap_fixed<32,1> temp14 = (v_angular_0_1 * inertia_0_1_2);
  ap_fixed<32,1> rhsMult3_temp_0 = (temp13 + temp14);
  ap_fixed<32,1> temp15 = (v_angular_0_2 * inertia_0_2_2);
  ap_fixed<32,1> rhsMult3_0 = (rhsMult3_temp_0 + temp15);
  ap_fixed<32,1> rhsMult_0_2 = rhsMult3_0;
  ap_fixed<32,1> rhsMult_0_1 = rhsMult2_0;
  ap_fixed<32,1> rhsMult_0_0 = rhsMult1_0;
  ap_fixed<32,1> h_angular_first_0_2 = rhsMult_0_2;
  ap_fixed<32,1> h_angular_first_0_1 = rhsMult_0_1;
  ap_fixed<32,1> h_angular_first_0_0 = rhsMult_0_0;
  ap_fixed<32,1> h_angular_1_0_xTimes1 = (lever_0_1 * h_linear_0_2);
  ap_fixed<32,1> h_angular_1_0_xTimes2 = (lever_0_2 * h_linear_0_1);
  ap_fixed<32,1> h_angular_1_0_xMinus = (h_angular_1_0_xTimes1 - h_angular_1_0_xTimes2);
  ap_fixed<32,1> h_angular_1_0_yTimes1 = (lever_0_2 * h_linear_0_0);
  ap_fixed<32,1> h_angular_1_0_yTimes2 = (lever_0_0 * h_linear_0_2);
  ap_fixed<32,1> h_angular_1_0_yMinus = (h_angular_1_0_yTimes1 - h_angular_1_0_yTimes2);
  ap_fixed<32,1> h_angular_1_0_zTimes1 = (lever_0_0 * h_linear_0_1);
  ap_fixed<32,1> h_angular_1_0_zTimes2 = (lever_0_1 * h_linear_0_0);
  ap_fixed<32,1> h_angular_1_0_zMinus = (h_angular_1_0_zTimes1 - h_angular_1_0_zTimes2);
  ap_fixed<32,1> h_angular_1_0_0 = h_angular_1_0_xMinus;
  ap_fixed<32,1> h_angular_1_0_1 = h_angular_1_0_yMinus;
  ap_fixed<32,1> h_angular_1_0_2 = h_angular_1_0_zMinus;
  ap_fixed<32,1> h_angular_0_2 = (h_angular_first_0_2 + h_angular_1_0_2);
  ap_fixed<32,1> h_angular_0_1 = (h_angular_first_0_1 + h_angular_1_0_1);
  ap_fixed<32,1> h_angular_0_0 = (h_angular_first_0_0 + h_angular_1_0_0);
  ap_fixed<32,1> f_linear_1_0_xTimes1 = (lever_0_1 * act_inv_angular_0_2);
  ap_fixed<32,1> f_linear_1_0_xTimes2 = (lever_0_2 * act_inv_angular_0_1);
  ap_fixed<32,1> f_linear_1_0_xMinus = (f_linear_1_0_xTimes1 - f_linear_1_0_xTimes2);
  ap_fixed<32,1> f_linear_1_0_yTimes1 = (lever_0_2 * act_inv_angular_0_0);
  ap_fixed<32,1> f_linear_1_0_yTimes2 = (lever_0_0 * act_inv_angular_0_2);
  ap_fixed<32,1> f_linear_1_0_yMinus = (f_linear_1_0_yTimes1 - f_linear_1_0_yTimes2);
  ap_fixed<32,1> f_linear_1_0_zTimes1 = (lever_0_0 * act_inv_angular_0_1);
  ap_fixed<32,1> f_linear_1_0_zTimes2 = (lever_0_1 * act_inv_angular_0_0);
  ap_fixed<32,1> f_linear_1_0_zMinus = (f_linear_1_0_zTimes1 - f_linear_1_0_zTimes2);
  ap_fixed<32,1> f_linear_1_0_0 = f_linear_1_0_xMinus;
  ap_fixed<32,1> f_linear_1_0_1 = f_linear_1_0_yMinus;
  ap_fixed<32,1> f_linear_1_0_2 = f_linear_1_0_zMinus;
  ap_fixed<32,5> f_linear_2_0_2 = (act_inv_linear_0_2 - f_linear_1_0_2);
  ap_fixed<32,1> f_linear_2_0_1 = (act_inv_linear_0_1 - f_linear_1_0_1);
  ap_fixed<32,1> f_linear_2_0_0 = (act_inv_linear_0_0 - f_linear_1_0_0);
  ap_fixed<32,7> f_linear_3_0_2 = (f_linear_2_0_2 * masses_0);
  ap_fixed<32,1> f_linear_3_0_1 = (f_linear_2_0_1 * masses_0);
  ap_fixed<32,1> f_linear_3_0_0 = (f_linear_2_0_0 * masses_0);
  ap_fixed<32,1> temp16 = (act_inv_angular_0_0 * inertia_0_0_0);
  ap_fixed<32,1> temp17 = (act_inv_angular_0_1 * inertia_0_0_1);
  ap_fixed<32,1> r_1_rhsMult1_temp_0 = (temp16 + temp17);
  ap_fixed<32,1> temp18 = (act_inv_angular_0_2 * inertia_0_0_2);
  ap_fixed<32,1> r_2_rhsMult1_0 = (r_1_rhsMult1_temp_0 + temp18);
  ap_fixed<32,1> temp19 = (act_inv_angular_0_0 * inertia_0_0_1);
  ap_fixed<32,1> temp20 = (act_inv_angular_0_1 * inertia_0_1_1);
  ap_fixed<32,1> r_3_rhsMult2_temp_0 = (temp19 + temp20);
  ap_fixed<32,1> temp21 = (act_inv_angular_0_2 * inertia_0_1_2);
  ap_fixed<32,1> r_4_rhsMult2_0 = (r_3_rhsMult2_temp_0 + temp21);
  ap_fixed<32,1> temp22 = (act_inv_angular_0_0 * inertia_0_0_2);
  ap_fixed<32,1> temp23 = (act_inv_angular_0_1 * inertia_0_1_2);
  ap_fixed<32,1> r_5_rhsMult3_temp_0 = (temp22 + temp23);
  ap_fixed<32,1> temp24 = (act_inv_angular_0_2 * inertia_0_2_2);
  ap_fixed<32,1> r_6_rhsMult3_0 = (r_5_rhsMult3_temp_0 + temp24);
  ap_fixed<32,1> r_7_rhsMult_0_2 = r_6_rhsMult3_0;
  ap_fixed<32,1> r_7_rhsMult_0_1 = r_4_rhsMult2_0;
  ap_fixed<32,1> r_7_rhsMult_0_0 = r_2_rhsMult1_0;
  ap_fixed<32,1> f_angular_first_0_2 = r_7_rhsMult_0_2;
  ap_fixed<32,1> f_angular_first_0_1 = r_7_rhsMult_0_1;
  ap_fixed<32,1> f_angular_first_0_0 = r_7_rhsMult_0_0;
  ap_fixed<32,1> f_angular_1_0_xTimes1 = (lever_0_1 * f_linear_3_0_2);
  ap_fixed<32,1> f_angular_1_0_xTimes2 = (lever_0_2 * f_linear_3_0_1);
  ap_fixed<32,1> f_angular_1_0_xMinus = (f_angular_1_0_xTimes1 - f_angular_1_0_xTimes2);
  ap_fixed<32,1> f_angular_1_0_yTimes1 = (lever_0_2 * f_linear_3_0_0);
  ap_fixed<32,1> f_angular_1_0_yTimes2 = (lever_0_0 * f_linear_3_0_2);
  ap_fixed<32,1> f_angular_1_0_yMinus = (f_angular_1_0_yTimes1 - f_angular_1_0_yTimes2);
  ap_fixed<32,1> f_angular_1_0_zTimes1 = (lever_0_0 * f_linear_3_0_1);
  ap_fixed<32,1> f_angular_1_0_zTimes2 = (lever_0_1 * f_linear_3_0_0);
  ap_fixed<32,1> f_angular_1_0_zMinus = (f_angular_1_0_zTimes1 - f_angular_1_0_zTimes2);
  ap_fixed<32,1> f_angular_1_0_0 = f_angular_1_0_xMinus;
  ap_fixed<32,1> f_angular_1_0_1 = f_angular_1_0_yMinus;
  ap_fixed<32,1> f_angular_1_0_2 = f_angular_1_0_zMinus;
  ap_fixed<32,1> f_angular_2_0_2 = (f_angular_first_0_2 + f_angular_1_0_2);
  ap_fixed<32,1> f_angular_2_0_1 = (f_angular_first_0_1 + f_angular_1_0_1);
  ap_fixed<32,1> f_angular_2_0_0 = (f_angular_first_0_0 + f_angular_1_0_0);
  ap_fixed<32,1> f_linear_4_temp_0_xTimes1 = (v_angular_0_1 * h_linear_0_2);
  ap_fixed<32,1> f_linear_4_temp_0_xTimes2 = (v_angular_0_2 * h_linear_0_1);
  ap_fixed<32,1> f_linear_4_temp_0_xMinus = (f_linear_4_temp_0_xTimes1 - f_linear_4_temp_0_xTimes2);
  ap_fixed<32,1> f_linear_4_temp_0_yTimes1 = (v_angular_0_2 * h_linear_0_0);
  ap_fixed<32,1> f_linear_4_temp_0_yTimes2 = (v_angular_0_0 * h_linear_0_2);
  ap_fixed<32,1> f_linear_4_temp_0_yMinus = (f_linear_4_temp_0_yTimes1 - f_linear_4_temp_0_yTimes2);
  ap_fixed<32,1> f_linear_4_temp_0_zTimes1 = (v_angular_0_0 * h_linear_0_1);
  ap_fixed<32,1> f_linear_4_temp_0_zTimes2 = (v_angular_0_1 * h_linear_0_0);
  ap_fixed<32,1> f_linear_4_temp_0_zMinus = (f_linear_4_temp_0_zTimes1 - f_linear_4_temp_0_zTimes2);
  ap_fixed<32,1> f_linear_4_temp_0_0 = f_linear_4_temp_0_xMinus;
  ap_fixed<32,1> f_linear_4_temp_0_1 = f_linear_4_temp_0_yMinus;
  ap_fixed<32,1> f_linear_4_temp_0_2 = f_linear_4_temp_0_zMinus;
  ap_fixed<32,7> f_linear_4_0_2 = (f_linear_3_0_2 + f_linear_4_temp_0_2);
  ap_fixed<32,1> f_linear_4_0_1 = (f_linear_3_0_1 + f_linear_4_temp_0_1);
  ap_fixed<32,1> f_linear_4_0_0 = (f_linear_3_0_0 + f_linear_4_temp_0_0);
  ap_fixed<32,1> f_angular_3_temp_0_xTimes1 = (v_angular_0_1 * h_angular_first_0_2);
  ap_fixed<32,1> f_angular_3_temp_0_xTimes2 = (v_angular_0_2 * h_angular_first_0_1);
  ap_fixed<32,1> f_angular_3_temp_0_xMinus = (f_angular_3_temp_0_xTimes1 - f_angular_3_temp_0_xTimes2);
  ap_fixed<32,1> f_angular_3_temp_0_yTimes1 = (v_angular_0_2 * h_angular_first_0_0);
  ap_fixed<32,1> f_angular_3_temp_0_yTimes2 = (v_angular_0_0 * h_angular_first_0_2);
  ap_fixed<32,1> f_angular_3_temp_0_yMinus = (f_angular_3_temp_0_yTimes1 - f_angular_3_temp_0_yTimes2);
  ap_fixed<32,1> f_angular_3_temp_0_zTimes1 = (v_angular_0_0 * h_angular_first_0_1);
  ap_fixed<32,1> f_angular_3_temp_0_zTimes2 = (v_angular_0_1 * h_angular_first_0_0);
  ap_fixed<32,1> f_angular_3_temp_0_zMinus = (f_angular_3_temp_0_zTimes1 - f_angular_3_temp_0_zTimes2);
  ap_fixed<32,1> f_angular_3_temp_0_0 = f_angular_3_temp_0_xMinus;
  ap_fixed<32,1> f_angular_3_temp_0_1 = f_angular_3_temp_0_yMinus;
  ap_fixed<32,1> f_angular_3_temp_0_2 = f_angular_3_temp_0_zMinus;
  ap_fixed<32,1> f_angular_3_0_2 = (f_angular_2_0_2 + f_angular_3_temp_0_2);
  ap_fixed<32,1> f_angular_3_0_1 = (f_angular_2_0_1 + f_angular_3_temp_0_1);
  ap_fixed<32,1> f_angular_3_0_0 = (f_angular_2_0_0 + f_angular_3_temp_0_0);
  ap_fixed<32,1> f_angular_4_temp_0_xTimes1 = (v_linear_0_1 * h_linear_0_2);
  ap_fixed<32,1> f_angular_4_temp_0_xTimes2 = (v_linear_0_2 * h_linear_0_1);
  ap_fixed<32,1> f_angular_4_temp_0_xMinus = (f_angular_4_temp_0_xTimes1 - f_angular_4_temp_0_xTimes2);
  ap_fixed<32,1> f_angular_4_temp_0_yTimes1 = (v_linear_0_2 * h_linear_0_0);
  ap_fixed<32,1> f_angular_4_temp_0_yTimes2 = (v_linear_0_0 * h_linear_0_2);
  ap_fixed<32,1> f_angular_4_temp_0_yMinus = (f_angular_4_temp_0_yTimes1 - f_angular_4_temp_0_yTimes2);
  ap_fixed<32,1> f_angular_4_temp_0_zTimes1 = (v_linear_0_0 * h_linear_0_1);
  ap_fixed<32,1> f_angular_4_temp_0_zTimes2 = (v_linear_0_1 * h_linear_0_0);
  ap_fixed<32,1> f_angular_4_temp_0_zMinus = (f_angular_4_temp_0_zTimes1 - f_angular_4_temp_0_zTimes2);
  ap_fixed<32,1> f_angular_4_temp_0_0 = f_angular_4_temp_0_xMinus;
  ap_fixed<32,1> f_angular_4_temp_0_1 = f_angular_4_temp_0_yMinus;
  ap_fixed<32,1> f_angular_4_temp_0_2 = f_angular_4_temp_0_zMinus;
  ap_fixed<32,1> f_angular_4_0_2 = (f_angular_3_0_2 + f_angular_4_temp_0_2);
  ap_fixed<32,1> f_angular_4_0_1 = (f_angular_3_0_1 + f_angular_4_temp_0_1);
  ap_fixed<32,1> f_angular_4_0_0 = (f_angular_3_0_0 + f_angular_4_temp_0_0);
  ap_fixed<32,1> h_rnea_firstpass0_5 = h_angular_0_2;
  ap_fixed<32,1> h_rnea_firstpass0_4 = h_angular_0_1;
  ap_fixed<32,1> h_rnea_firstpass0_3 = h_angular_0_0;
  ap_fixed<32,1> h_rnea_firstpass0_2 = h_linear_0_2;
  ap_fixed<32,1> h_rnea_firstpass0_1 = h_linear_0_1;
  ap_fixed<32,1> h_rnea_firstpass0_0 = h_linear_0_0;
  ap_fixed<32,1> f_rnea_firstpass0_5 = f_angular_4_0_2;
  ap_fixed<32,1> f_rnea_firstpass0_4 = f_angular_4_0_1;
  ap_fixed<32,1> f_rnea_firstpass0_3 = f_angular_4_0_0;
  ap_fixed<32,7> f_rnea_firstpass0_2 = f_linear_4_0_2;
  ap_fixed<32,1> f_rnea_firstpass0_1 = f_linear_4_0_1;
  ap_fixed<32,1> f_rnea_firstpass0_0 = f_linear_4_0_0;
  ap_fixed<32,4> new_v_0_5 = v_angular_0_2;
  ap_fixed<32,1> new_v_0_4 = v_angular_0_1;
  ap_fixed<32,1> new_v_0_3 = v_angular_0_0;
  ap_fixed<32,1> new_v_0_2 = v_linear_0_2;
  ap_fixed<32,1> new_v_0_1 = v_linear_0_1;
  ap_fixed<32,1> new_v_0_0 = v_linear_0_0;
  ap_fixed<32,2> rotation_matrix_1_2_2 = 1.0;
  ap_fixed<32,1> rotation_matrix_1_2_1 = 0.0;
  ap_fixed<32,1> rotation_matrix_1_2_0 = 0.0;
  ap_fixed<32,1> rotation_matrix_1_1_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_1_1_1 = qcos_1;
  ap_fixed<32,2> rotation_matrix_1_1_0 = qsin_1;
  ap_fixed<32,1> rotation_matrix_1_0_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_1_0_1 = -(qsin_1);
  ap_fixed<32,2> rotation_matrix_1_0_0 = qcos_1;
  ap_fixed<32,1> limi_rotation_1_2_2 = 0.0;
  ap_fixed<32,2> limi_rotation_1_2_1 = -(rotation_matrix_1_1_1);
  ap_fixed<32,2> limi_rotation_1_2_0 = -(rotation_matrix_1_1_0);
  ap_fixed<32,2> limi_rotation_1_1_2 = 1.0;
  ap_fixed<32,1> limi_rotation_1_1_1 = 0.0;
  ap_fixed<32,1> limi_rotation_1_1_0 = 0.0;
  ap_fixed<32,1> limi_rotation_1_0_2 = 0.0;
  ap_fixed<32,2> limi_rotation_1_0_1 = rotation_matrix_1_0_1;
  ap_fixed<32,2> limi_rotation_1_0_0 = rotation_matrix_1_0_0;
  ap_fixed<32,1> v_linear_1_2 = data_v_1_2;
  ap_fixed<32,1> v_linear_1_1 = data_v_1_1;
  ap_fixed<32,1> v_linear_1_0 = data_v_1_0;
  ap_fixed<32,4> v_angular_1_2 = v_1;
  ap_fixed<32,1> v_angular_1_1 = data_v_1_4;
  ap_fixed<32,1> v_angular_1_0 = data_v_1_3;
  ap_fixed<32,1> parent_v_linear_1_2 = new_v_0_2;
  ap_fixed<32,1> parent_v_linear_1_1 = new_v_0_1;
  ap_fixed<32,1> parent_v_linear_1_0 = new_v_0_0;
  ap_fixed<32,4> parent_v_angular_1_2 = new_v_0_5;
  ap_fixed<32,1> parent_v_angular_1_1 = new_v_0_4;
  ap_fixed<32,1> parent_v_angular_1_0 = new_v_0_3;
  ap_fixed<32,5> parent_a_gf_linear_1_2 = new_a_gf_up3_0_2;
  ap_fixed<32,1> parent_a_gf_linear_1_1 = new_a_gf_up3_0_1;
  ap_fixed<32,1> parent_a_gf_linear_1_0 = new_a_gf_up3_0_0;
  ap_fixed<32,4> parent_a_gf_angular_1_2 = new_a_gf_up3_0_5;
  ap_fixed<32,1> parent_a_gf_angular_1_1 = new_a_gf_up3_0_4;
  ap_fixed<32,1> parent_a_gf_angular_1_0 = new_a_gf_up3_0_3;
  ap_fixed<32,1> actInv1_1_xTimes1 = (limi_translation_1_1 * parent_v_angular_1_2);
  ap_fixed<32,1> actInv1_1_xTimes2 = (limi_translation_1_2 * parent_v_angular_1_1);
  ap_fixed<32,1> actInv1_1_xMinus = (actInv1_1_xTimes1 - actInv1_1_xTimes2);
  ap_fixed<32,1> actInv1_1_yTimes1 = (limi_translation_1_2 * parent_v_angular_1_0);
  ap_fixed<32,1> actInv1_1_yTimes2 = (limi_translation_1_0 * parent_v_angular_1_2);
  ap_fixed<32,1> actInv1_1_yMinus = (actInv1_1_yTimes1 - actInv1_1_yTimes2);
  ap_fixed<32,1> actInv1_1_zTimes1 = (limi_translation_1_0 * parent_v_angular_1_1);
  ap_fixed<32,1> actInv1_1_zTimes2 = (limi_translation_1_1 * parent_v_angular_1_0);
  ap_fixed<32,1> actInv1_1_zMinus = (actInv1_1_zTimes1 - actInv1_1_zTimes2);
  ap_fixed<32,1> actInv1_1_0 = actInv1_1_xMinus;
  ap_fixed<32,1> actInv1_1_1 = actInv1_1_yMinus;
  ap_fixed<32,1> actInv1_1_2 = actInv1_1_zMinus;
  ap_fixed<32,1> actInv2_1_2 = (parent_v_linear_1_2 - actInv1_1_2);
  ap_fixed<32,1> actInv2_1_1 = (parent_v_linear_1_1 - actInv1_1_1);
  ap_fixed<32,1> actInv2_1_0 = (parent_v_linear_1_0 - actInv1_1_0);
  ap_fixed<32,1> actInv3_1_2_2 = limi_rotation_1_2_2;
  ap_fixed<32,2> actInv3_1_1_2 = limi_rotation_1_2_1;
  ap_fixed<32,2> actInv3_1_0_2 = limi_rotation_1_2_0;
  ap_fixed<32,2> actInv3_1_2_1 = limi_rotation_1_1_2;
  ap_fixed<32,1> actInv3_1_1_1 = limi_rotation_1_1_1;
  ap_fixed<32,1> actInv3_1_0_1 = limi_rotation_1_1_0;
  ap_fixed<32,1> actInv3_1_2_0 = limi_rotation_1_0_2;
  ap_fixed<32,2> actInv3_1_1_0 = limi_rotation_1_0_1;
  ap_fixed<32,2> actInv3_1_0_0 = limi_rotation_1_0_0;
  ap_fixed<32,1> actInv4_1_0_times_0 = (actInv3_1_0_0 * actInv2_1_0);
  ap_fixed<32,1> actInv4_1_0_times_1 = (actInv3_1_0_1 * actInv2_1_1);
  ap_fixed<32,1> actInv4_1_0_times_2 = (actInv3_1_0_2 * actInv2_1_2);
  ap_fixed<32,1> actInv4_1_0_sum_0 = actInv4_1_0_times_0;
  ap_fixed<32,1> actInv4_1_0_sum_1 = (actInv4_1_0_sum_0 + actInv4_1_0_times_1);
  ap_fixed<32,1> actInv4_1_0_sum_2 = (actInv4_1_0_sum_1 + actInv4_1_0_times_2);
  ap_fixed<32,1> actInv4_1_0 = actInv4_1_0_sum_2;
  ap_fixed<32,1> actInv4_1_1_times_0 = (actInv3_1_1_0 * actInv2_1_0);
  ap_fixed<32,1> actInv4_1_1_times_1 = (actInv3_1_1_1 * actInv2_1_1);
  ap_fixed<32,1> actInv4_1_1_times_2 = (actInv3_1_1_2 * actInv2_1_2);
  ap_fixed<32,1> actInv4_1_1_sum_0 = actInv4_1_1_times_0;
  ap_fixed<32,1> actInv4_1_1_sum_1 = (actInv4_1_1_sum_0 + actInv4_1_1_times_1);
  ap_fixed<32,1> actInv4_1_1_sum_2 = (actInv4_1_1_sum_1 + actInv4_1_1_times_2);
  ap_fixed<32,1> actInv4_1_1 = actInv4_1_1_sum_2;
  ap_fixed<32,1> actInv4_1_2_times_0 = (actInv3_1_2_0 * actInv2_1_0);
  ap_fixed<32,1> actInv4_1_2_times_1 = (actInv3_1_2_1 * actInv2_1_1);
  ap_fixed<32,1> actInv4_1_2_times_2 = (actInv3_1_2_2 * actInv2_1_2);
  ap_fixed<32,1> actInv4_1_2_sum_0 = actInv4_1_2_times_0;
  ap_fixed<32,1> actInv4_1_2_sum_1 = (actInv4_1_2_sum_0 + actInv4_1_2_times_1);
  ap_fixed<32,1> actInv4_1_2_sum_2 = (actInv4_1_2_sum_1 + actInv4_1_2_times_2);
  ap_fixed<32,1> actInv4_1_2 = actInv4_1_2_sum_2;
  ap_fixed<32,1> act_inv_linear_1_2 = (v_linear_1_2 + actInv4_1_2);
  ap_fixed<32,1> act_inv_linear_1_1 = (v_linear_1_1 + actInv4_1_1);
  ap_fixed<32,1> act_inv_linear_1_0 = (v_linear_1_0 + actInv4_1_0);
  ap_fixed<32,1> actInv5_1_0_times_0 = (actInv3_1_0_0 * parent_v_angular_1_0);
  ap_fixed<32,1> actInv5_1_0_times_1 = (actInv3_1_0_1 * parent_v_angular_1_1);
  ap_fixed<32,4> actInv5_1_0_times_2 = (actInv3_1_0_2 * parent_v_angular_1_2);
  ap_fixed<32,1> actInv5_1_0_sum_0 = actInv5_1_0_times_0;
  ap_fixed<32,1> actInv5_1_0_sum_1 = (actInv5_1_0_sum_0 + actInv5_1_0_times_1);
  ap_fixed<32,4> actInv5_1_0_sum_2 = (actInv5_1_0_sum_1 + actInv5_1_0_times_2);
  ap_fixed<32,4> actInv5_1_0 = actInv5_1_0_sum_2;
  ap_fixed<32,1> actInv5_1_1_times_0 = (actInv3_1_1_0 * parent_v_angular_1_0);
  ap_fixed<32,1> actInv5_1_1_times_1 = (actInv3_1_1_1 * parent_v_angular_1_1);
  ap_fixed<32,4> actInv5_1_1_times_2 = (actInv3_1_1_2 * parent_v_angular_1_2);
  ap_fixed<32,1> actInv5_1_1_sum_0 = actInv5_1_1_times_0;
  ap_fixed<32,1> actInv5_1_1_sum_1 = (actInv5_1_1_sum_0 + actInv5_1_1_times_1);
  ap_fixed<32,4> actInv5_1_1_sum_2 = (actInv5_1_1_sum_1 + actInv5_1_1_times_2);
  ap_fixed<32,4> actInv5_1_1 = actInv5_1_1_sum_2;
  ap_fixed<32,1> actInv5_1_2_times_0 = (actInv3_1_2_0 * parent_v_angular_1_0);
  ap_fixed<32,1> actInv5_1_2_times_1 = (actInv3_1_2_1 * parent_v_angular_1_1);
  ap_fixed<32,1> actInv5_1_2_times_2 = (actInv3_1_2_2 * parent_v_angular_1_2);
  ap_fixed<32,1> actInv5_1_2_sum_0 = actInv5_1_2_times_0;
  ap_fixed<32,1> actInv5_1_2_sum_1 = (actInv5_1_2_sum_0 + actInv5_1_2_times_1);
  ap_fixed<32,1> actInv5_1_2_sum_2 = (actInv5_1_2_sum_1 + actInv5_1_2_times_2);
  ap_fixed<32,1> actInv5_1_2 = actInv5_1_2_sum_2;
  ap_fixed<32,4> act_inv_angular_1_2 = (v_angular_1_2 + actInv5_1_2);
  ap_fixed<32,4> act_inv_angular_1_1 = (v_angular_1_1 + actInv5_1_1);
  ap_fixed<32,4> act_inv_angular_1_0 = (v_angular_1_0 + actInv5_1_0);
  ap_fixed<32,4> minus_m_w_1 = v_1;
  ap_fixed<32,4> temp26 = -(minus_m_w_1);
  ap_fixed<32,4> temp25 = -(temp26);
  ap_fixed<32,1> alpha_cross1_linear_1 = (temp25 * act_inv_linear_1_1);
  ap_fixed<32,4> temp27 = -(minus_m_w_1);
  ap_fixed<32,1> alpha_cross2_linear_1 = (temp27 * act_inv_linear_1_0);
  ap_fixed<32,1> alpha_cross_linear_1_2 = 0.0;
  ap_fixed<32,1> alpha_cross_linear_1_1 = alpha_cross2_linear_1;
  ap_fixed<32,1> alpha_cross_linear_1_0 = alpha_cross1_linear_1;
  ap_fixed<32,4> temp29 = -(minus_m_w_1);
  ap_fixed<32,4> temp28 = -(temp29);
  ap_fixed<32,6> alpha_cross1_angular_1 = (temp28 * act_inv_angular_1_1);
  ap_fixed<32,4> temp30 = -(minus_m_w_1);
  ap_fixed<32,6> alpha_cross2_angular_1 = (temp30 * act_inv_angular_1_0);
  ap_fixed<32,1> alpha_cross_angular_1_2 = 0.0;
  ap_fixed<32,6> alpha_cross_angular_1_1 = alpha_cross2_angular_1;
  ap_fixed<32,6> alpha_cross_angular_1_0 = alpha_cross1_angular_1;
  ap_fixed<32,1> new_a_gf_1_5 = alpha_cross_angular_1_2;
  ap_fixed<32,6> new_a_gf_1_4 = alpha_cross_angular_1_1;
  ap_fixed<32,6> new_a_gf_1_3 = alpha_cross_angular_1_0;
  ap_fixed<32,1> new_a_gf_1_2 = alpha_cross_linear_1_2;
  ap_fixed<32,1> new_a_gf_1_1 = alpha_cross_linear_1_1;
  ap_fixed<32,1> new_a_gf_1_0 = alpha_cross_linear_1_0;
  ap_fixed<32,4> new_a_gf_up1_1 = (a_1 + new_a_gf_1_5);
  ap_fixed<32,1> new_a_gf2_linear_1_2 = new_a_gf_1_2;
  ap_fixed<32,1> new_a_gf2_linear_1_1 = new_a_gf_1_1;
  ap_fixed<32,1> new_a_gf2_linear_1_0 = new_a_gf_1_0;
  ap_fixed<32,4> new_a_gf2_angular_1_2 = new_a_gf_up1_1;
  ap_fixed<32,6> new_a_gf2_angular_1_1 = new_a_gf_1_4;
  ap_fixed<32,6> new_a_gf2_angular_1_0 = new_a_gf_1_3;
  ap_fixed<32,1> r_8_actInv1_1_xTimes1 = (limi_translation_1_1 * parent_a_gf_angular_1_2);
  ap_fixed<32,1> r_8_actInv1_1_xTimes2 = (limi_translation_1_2 * parent_a_gf_angular_1_1);
  ap_fixed<32,1> r_8_actInv1_1_xMinus = (r_8_actInv1_1_xTimes1 - r_8_actInv1_1_xTimes2);
  ap_fixed<32,1> r_8_actInv1_1_yTimes1 = (limi_translation_1_2 * parent_a_gf_angular_1_0);
  ap_fixed<32,1> r_8_actInv1_1_yTimes2 = (limi_translation_1_0 * parent_a_gf_angular_1_2);
  ap_fixed<32,1> r_8_actInv1_1_yMinus = (r_8_actInv1_1_yTimes1 - r_8_actInv1_1_yTimes2);
  ap_fixed<32,1> r_8_actInv1_1_zTimes1 = (limi_translation_1_0 * parent_a_gf_angular_1_1);
  ap_fixed<32,1> r_8_actInv1_1_zTimes2 = (limi_translation_1_1 * parent_a_gf_angular_1_0);
  ap_fixed<32,1> r_8_actInv1_1_zMinus = (r_8_actInv1_1_zTimes1 - r_8_actInv1_1_zTimes2);
  ap_fixed<32,1> r_8_actInv1_1_0 = r_8_actInv1_1_xMinus;
  ap_fixed<32,1> r_8_actInv1_1_1 = r_8_actInv1_1_yMinus;
  ap_fixed<32,1> r_8_actInv1_1_2 = r_8_actInv1_1_zMinus;
  ap_fixed<32,5> r_9_actInv2_1_2 = (parent_a_gf_linear_1_2 - r_8_actInv1_1_2);
  ap_fixed<32,1> r_9_actInv2_1_1 = (parent_a_gf_linear_1_1 - r_8_actInv1_1_1);
  ap_fixed<32,1> r_9_actInv2_1_0 = (parent_a_gf_linear_1_0 - r_8_actInv1_1_0);
  ap_fixed<32,1> r_10_actInv3_1_2_2 = limi_rotation_1_2_2;
  ap_fixed<32,2> r_10_actInv3_1_1_2 = limi_rotation_1_2_1;
  ap_fixed<32,2> r_10_actInv3_1_0_2 = limi_rotation_1_2_0;
  ap_fixed<32,2> r_10_actInv3_1_2_1 = limi_rotation_1_1_2;
  ap_fixed<32,1> r_10_actInv3_1_1_1 = limi_rotation_1_1_1;
  ap_fixed<32,1> r_10_actInv3_1_0_1 = limi_rotation_1_1_0;
  ap_fixed<32,1> r_10_actInv3_1_2_0 = limi_rotation_1_0_2;
  ap_fixed<32,2> r_10_actInv3_1_1_0 = limi_rotation_1_0_1;
  ap_fixed<32,2> r_10_actInv3_1_0_0 = limi_rotation_1_0_0;
  ap_fixed<32,1> r_11_actInv4_1_0_times_0 = (r_10_actInv3_1_0_0 * r_9_actInv2_1_0);
  ap_fixed<32,1> r_11_actInv4_1_0_times_1 = (r_10_actInv3_1_0_1 * r_9_actInv2_1_1);
  ap_fixed<32,5> r_11_actInv4_1_0_times_2 = (r_10_actInv3_1_0_2 * r_9_actInv2_1_2);
  ap_fixed<32,1> r_11_actInv4_1_0_sum_0 = r_11_actInv4_1_0_times_0;
  ap_fixed<32,1> r_11_actInv4_1_0_sum_1 = (r_11_actInv4_1_0_sum_0 + r_11_actInv4_1_0_times_1);
  ap_fixed<32,5> r_11_actInv4_1_0_sum_2 = (r_11_actInv4_1_0_sum_1 + r_11_actInv4_1_0_times_2);
  ap_fixed<32,5> r_11_actInv4_1_0 = r_11_actInv4_1_0_sum_2;
  ap_fixed<32,1> r_11_actInv4_1_1_times_0 = (r_10_actInv3_1_1_0 * r_9_actInv2_1_0);
  ap_fixed<32,1> r_11_actInv4_1_1_times_1 = (r_10_actInv3_1_1_1 * r_9_actInv2_1_1);
  ap_fixed<32,5> r_11_actInv4_1_1_times_2 = (r_10_actInv3_1_1_2 * r_9_actInv2_1_2);
  ap_fixed<32,1> r_11_actInv4_1_1_sum_0 = r_11_actInv4_1_1_times_0;
  ap_fixed<32,1> r_11_actInv4_1_1_sum_1 = (r_11_actInv4_1_1_sum_0 + r_11_actInv4_1_1_times_1);
  ap_fixed<32,5> r_11_actInv4_1_1_sum_2 = (r_11_actInv4_1_1_sum_1 + r_11_actInv4_1_1_times_2);
  ap_fixed<32,5> r_11_actInv4_1_1 = r_11_actInv4_1_1_sum_2;
  ap_fixed<32,1> r_11_actInv4_1_2_times_0 = (r_10_actInv3_1_2_0 * r_9_actInv2_1_0);
  ap_fixed<32,1> r_11_actInv4_1_2_times_1 = (r_10_actInv3_1_2_1 * r_9_actInv2_1_1);
  ap_fixed<32,1> r_11_actInv4_1_2_times_2 = (r_10_actInv3_1_2_2 * r_9_actInv2_1_2);
  ap_fixed<32,1> r_11_actInv4_1_2_sum_0 = r_11_actInv4_1_2_times_0;
  ap_fixed<32,1> r_11_actInv4_1_2_sum_1 = (r_11_actInv4_1_2_sum_0 + r_11_actInv4_1_2_times_1);
  ap_fixed<32,1> r_11_actInv4_1_2_sum_2 = (r_11_actInv4_1_2_sum_1 + r_11_actInv4_1_2_times_2);
  ap_fixed<32,1> r_11_actInv4_1_2 = r_11_actInv4_1_2_sum_2;
  ap_fixed<32,1> r_12_act_inv_linear_1_2 = (new_a_gf2_linear_1_2 + r_11_actInv4_1_2);
  ap_fixed<32,5> r_12_act_inv_linear_1_1 = (new_a_gf2_linear_1_1 + r_11_actInv4_1_1);
  ap_fixed<32,5> r_12_act_inv_linear_1_0 = (new_a_gf2_linear_1_0 + r_11_actInv4_1_0);
  ap_fixed<32,1> r_13_actInv5_1_0_times_0 = (r_10_actInv3_1_0_0 * parent_a_gf_angular_1_0);
  ap_fixed<32,1> r_13_actInv5_1_0_times_1 = (r_10_actInv3_1_0_1 * parent_a_gf_angular_1_1);
  ap_fixed<32,4> r_13_actInv5_1_0_times_2 = (r_10_actInv3_1_0_2 * parent_a_gf_angular_1_2);
  ap_fixed<32,1> r_13_actInv5_1_0_sum_0 = r_13_actInv5_1_0_times_0;
  ap_fixed<32,1> r_13_actInv5_1_0_sum_1 = (r_13_actInv5_1_0_sum_0 + r_13_actInv5_1_0_times_1);
  ap_fixed<32,4> r_13_actInv5_1_0_sum_2 = (r_13_actInv5_1_0_sum_1 + r_13_actInv5_1_0_times_2);
  ap_fixed<32,4> r_13_actInv5_1_0 = r_13_actInv5_1_0_sum_2;
  ap_fixed<32,1> r_13_actInv5_1_1_times_0 = (r_10_actInv3_1_1_0 * parent_a_gf_angular_1_0);
  ap_fixed<32,1> r_13_actInv5_1_1_times_1 = (r_10_actInv3_1_1_1 * parent_a_gf_angular_1_1);
  ap_fixed<32,4> r_13_actInv5_1_1_times_2 = (r_10_actInv3_1_1_2 * parent_a_gf_angular_1_2);
  ap_fixed<32,1> r_13_actInv5_1_1_sum_0 = r_13_actInv5_1_1_times_0;
  ap_fixed<32,1> r_13_actInv5_1_1_sum_1 = (r_13_actInv5_1_1_sum_0 + r_13_actInv5_1_1_times_1);
  ap_fixed<32,4> r_13_actInv5_1_1_sum_2 = (r_13_actInv5_1_1_sum_1 + r_13_actInv5_1_1_times_2);
  ap_fixed<32,4> r_13_actInv5_1_1 = r_13_actInv5_1_1_sum_2;
  ap_fixed<32,1> r_13_actInv5_1_2_times_0 = (r_10_actInv3_1_2_0 * parent_a_gf_angular_1_0);
  ap_fixed<32,1> r_13_actInv5_1_2_times_1 = (r_10_actInv3_1_2_1 * parent_a_gf_angular_1_1);
  ap_fixed<32,1> r_13_actInv5_1_2_times_2 = (r_10_actInv3_1_2_2 * parent_a_gf_angular_1_2);
  ap_fixed<32,1> r_13_actInv5_1_2_sum_0 = r_13_actInv5_1_2_times_0;
  ap_fixed<32,1> r_13_actInv5_1_2_sum_1 = (r_13_actInv5_1_2_sum_0 + r_13_actInv5_1_2_times_1);
  ap_fixed<32,1> r_13_actInv5_1_2_sum_2 = (r_13_actInv5_1_2_sum_1 + r_13_actInv5_1_2_times_2);
  ap_fixed<32,1> r_13_actInv5_1_2 = r_13_actInv5_1_2_sum_2;
  ap_fixed<32,4> r_14_act_inv_angular_1_2 = (new_a_gf2_angular_1_2 + r_13_actInv5_1_2);
  ap_fixed<32,6> r_14_act_inv_angular_1_1 = (new_a_gf2_angular_1_1 + r_13_actInv5_1_1);
  ap_fixed<32,6> r_14_act_inv_angular_1_0 = (new_a_gf2_angular_1_0 + r_13_actInv5_1_0);
  ap_fixed<32,4> new_a_gf_up3_1_5 = r_14_act_inv_angular_1_2;
  ap_fixed<32,6> new_a_gf_up3_1_4 = r_14_act_inv_angular_1_1;
  ap_fixed<32,6> new_a_gf_up3_1_3 = r_14_act_inv_angular_1_0;
  ap_fixed<32,1> new_a_gf_up3_1_2 = r_12_act_inv_linear_1_2;
  ap_fixed<32,5> new_a_gf_up3_1_1 = r_12_act_inv_linear_1_1;
  ap_fixed<32,5> new_a_gf_up3_1_0 = r_12_act_inv_linear_1_0;
  ap_fixed<32,1> h_linear_1_1_xTimes1 = (lever_1_1 * act_inv_angular_1_2);
  ap_fixed<32,1> h_linear_1_1_xTimes2 = (lever_1_2 * act_inv_angular_1_1);
  ap_fixed<32,1> h_linear_1_1_xMinus = (h_linear_1_1_xTimes1 - h_linear_1_1_xTimes2);
  ap_fixed<32,1> h_linear_1_1_yTimes1 = (lever_1_2 * act_inv_angular_1_0);
  ap_fixed<32,1> h_linear_1_1_yTimes2 = (lever_1_0 * act_inv_angular_1_2);
  ap_fixed<32,1> h_linear_1_1_yMinus = (h_linear_1_1_yTimes1 - h_linear_1_1_yTimes2);
  ap_fixed<32,1> h_linear_1_1_zTimes1 = (lever_1_0 * act_inv_angular_1_1);
  ap_fixed<32,1> h_linear_1_1_zTimes2 = (lever_1_1 * act_inv_angular_1_0);
  ap_fixed<32,1> h_linear_1_1_zMinus = (h_linear_1_1_zTimes1 - h_linear_1_1_zTimes2);
  ap_fixed<32,1> h_linear_1_1_0 = h_linear_1_1_xMinus;
  ap_fixed<32,1> h_linear_1_1_1 = h_linear_1_1_yMinus;
  ap_fixed<32,1> h_linear_1_1_2 = h_linear_1_1_zMinus;
  ap_fixed<32,1> h_linear_2_1_2 = (act_inv_linear_1_2 - h_linear_1_1_2);
  ap_fixed<32,1> h_linear_2_1_1 = (act_inv_linear_1_1 - h_linear_1_1_1);
  ap_fixed<32,1> h_linear_2_1_0 = (act_inv_linear_1_0 - h_linear_1_1_0);
  ap_fixed<32,1> h_linear_1_2 = (h_linear_2_1_2 * masses_1);
  ap_fixed<32,1> h_linear_1_1 = (h_linear_2_1_1 * masses_1);
  ap_fixed<32,1> h_linear_1_0 = (h_linear_2_1_0 * masses_1);
  ap_fixed<32,1> temp31 = (act_inv_angular_1_0 * inertia_1_0_0);
  ap_fixed<32,1> temp32 = (act_inv_angular_1_1 * inertia_1_0_1);
  ap_fixed<32,1> rhsMult1_temp_1 = (temp31 + temp32);
  ap_fixed<32,1> temp33 = (act_inv_angular_1_2 * inertia_1_0_2);
  ap_fixed<32,1> rhsMult1_1 = (rhsMult1_temp_1 + temp33);
  ap_fixed<32,1> temp34 = (act_inv_angular_1_0 * inertia_1_0_1);
  ap_fixed<32,1> temp35 = (act_inv_angular_1_1 * inertia_1_1_1);
  ap_fixed<32,1> rhsMult2_temp_1 = (temp34 + temp35);
  ap_fixed<32,1> temp36 = (act_inv_angular_1_2 * inertia_1_1_2);
  ap_fixed<32,1> rhsMult2_1 = (rhsMult2_temp_1 + temp36);
  ap_fixed<32,1> temp37 = (act_inv_angular_1_0 * inertia_1_0_2);
  ap_fixed<32,1> temp38 = (act_inv_angular_1_1 * inertia_1_1_2);
  ap_fixed<32,1> rhsMult3_temp_1 = (temp37 + temp38);
  ap_fixed<32,1> temp39 = (act_inv_angular_1_2 * inertia_1_2_2);
  ap_fixed<32,1> rhsMult3_1 = (rhsMult3_temp_1 + temp39);
  ap_fixed<32,1> rhsMult_1_2 = rhsMult3_1;
  ap_fixed<32,1> rhsMult_1_1 = rhsMult2_1;
  ap_fixed<32,1> rhsMult_1_0 = rhsMult1_1;
  ap_fixed<32,1> h_angular_first_1_2 = rhsMult_1_2;
  ap_fixed<32,1> h_angular_first_1_1 = rhsMult_1_1;
  ap_fixed<32,1> h_angular_first_1_0 = rhsMult_1_0;
  ap_fixed<32,1> h_angular_1_1_xTimes1 = (lever_1_1 * h_linear_1_2);
  ap_fixed<32,1> h_angular_1_1_xTimes2 = (lever_1_2 * h_linear_1_1);
  ap_fixed<32,1> h_angular_1_1_xMinus = (h_angular_1_1_xTimes1 - h_angular_1_1_xTimes2);
  ap_fixed<32,1> h_angular_1_1_yTimes1 = (lever_1_2 * h_linear_1_0);
  ap_fixed<32,1> h_angular_1_1_yTimes2 = (lever_1_0 * h_linear_1_2);
  ap_fixed<32,1> h_angular_1_1_yMinus = (h_angular_1_1_yTimes1 - h_angular_1_1_yTimes2);
  ap_fixed<32,1> h_angular_1_1_zTimes1 = (lever_1_0 * h_linear_1_1);
  ap_fixed<32,1> h_angular_1_1_zTimes2 = (lever_1_1 * h_linear_1_0);
  ap_fixed<32,1> h_angular_1_1_zMinus = (h_angular_1_1_zTimes1 - h_angular_1_1_zTimes2);
  ap_fixed<32,1> h_angular_1_1_0 = h_angular_1_1_xMinus;
  ap_fixed<32,1> h_angular_1_1_1 = h_angular_1_1_yMinus;
  ap_fixed<32,1> h_angular_1_1_2 = h_angular_1_1_zMinus;
  ap_fixed<32,1> h_angular_1_2 = (h_angular_first_1_2 + h_angular_1_1_2);
  ap_fixed<32,1> h_angular_1_1 = (h_angular_first_1_1 + h_angular_1_1_1);
  ap_fixed<32,1> h_angular_1_0 = (h_angular_first_1_0 + h_angular_1_1_0);
  ap_fixed<32,1> f_linear_1_1_xTimes1 = (lever_1_1 * r_14_act_inv_angular_1_2);
  ap_fixed<32,1> f_linear_1_1_xTimes2 = (lever_1_2 * r_14_act_inv_angular_1_1);
  ap_fixed<32,1> f_linear_1_1_xMinus = (f_linear_1_1_xTimes1 - f_linear_1_1_xTimes2);
  ap_fixed<32,1> f_linear_1_1_yTimes1 = (lever_1_2 * r_14_act_inv_angular_1_0);
  ap_fixed<32,1> f_linear_1_1_yTimes2 = (lever_1_0 * r_14_act_inv_angular_1_2);
  ap_fixed<32,1> f_linear_1_1_yMinus = (f_linear_1_1_yTimes1 - f_linear_1_1_yTimes2);
  ap_fixed<32,1> f_linear_1_1_zTimes1 = (lever_1_0 * r_14_act_inv_angular_1_1);
  ap_fixed<32,1> f_linear_1_1_zTimes2 = (lever_1_1 * r_14_act_inv_angular_1_0);
  ap_fixed<32,1> f_linear_1_1_zMinus = (f_linear_1_1_zTimes1 - f_linear_1_1_zTimes2);
  ap_fixed<32,1> f_linear_1_1_0 = f_linear_1_1_xMinus;
  ap_fixed<32,1> f_linear_1_1_1 = f_linear_1_1_yMinus;
  ap_fixed<32,1> f_linear_1_1_2 = f_linear_1_1_zMinus;
  ap_fixed<32,1> f_linear_2_1_2 = (r_12_act_inv_linear_1_2 - f_linear_1_1_2);
  ap_fixed<32,5> f_linear_2_1_1 = (r_12_act_inv_linear_1_1 - f_linear_1_1_1);
  ap_fixed<32,5> f_linear_2_1_0 = (r_12_act_inv_linear_1_0 - f_linear_1_1_0);
  ap_fixed<32,1> f_linear_3_1_2 = (f_linear_2_1_2 * masses_1);
  ap_fixed<32,4> f_linear_3_1_1 = (f_linear_2_1_1 * masses_1);
  ap_fixed<32,4> f_linear_3_1_0 = (f_linear_2_1_0 * masses_1);
  ap_fixed<32,1> temp40 = (r_14_act_inv_angular_1_0 * inertia_1_0_0);
  ap_fixed<32,1> temp41 = (r_14_act_inv_angular_1_1 * inertia_1_0_1);
  ap_fixed<32,1> r_15_rhsMult1_temp_1 = (temp40 + temp41);
  ap_fixed<32,1> temp42 = (r_14_act_inv_angular_1_2 * inertia_1_0_2);
  ap_fixed<32,1> r_16_rhsMult1_1 = (r_15_rhsMult1_temp_1 + temp42);
  ap_fixed<32,1> temp43 = (r_14_act_inv_angular_1_0 * inertia_1_0_1);
  ap_fixed<32,1> temp44 = (r_14_act_inv_angular_1_1 * inertia_1_1_1);
  ap_fixed<32,1> r_17_rhsMult2_temp_1 = (temp43 + temp44);
  ap_fixed<32,1> temp45 = (r_14_act_inv_angular_1_2 * inertia_1_1_2);
  ap_fixed<32,1> r_18_rhsMult2_1 = (r_17_rhsMult2_temp_1 + temp45);
  ap_fixed<32,1> temp46 = (r_14_act_inv_angular_1_0 * inertia_1_0_2);
  ap_fixed<32,1> temp47 = (r_14_act_inv_angular_1_1 * inertia_1_1_2);
  ap_fixed<32,1> r_19_rhsMult3_temp_1 = (temp46 + temp47);
  ap_fixed<32,1> temp48 = (r_14_act_inv_angular_1_2 * inertia_1_2_2);
  ap_fixed<32,1> r_20_rhsMult3_1 = (r_19_rhsMult3_temp_1 + temp48);
  ap_fixed<32,1> r_21_rhsMult_1_2 = r_20_rhsMult3_1;
  ap_fixed<32,1> r_21_rhsMult_1_1 = r_18_rhsMult2_1;
  ap_fixed<32,1> r_21_rhsMult_1_0 = r_16_rhsMult1_1;
  ap_fixed<32,1> f_angular_first_1_2 = r_21_rhsMult_1_2;
  ap_fixed<32,1> f_angular_first_1_1 = r_21_rhsMult_1_1;
  ap_fixed<32,1> f_angular_first_1_0 = r_21_rhsMult_1_0;
  ap_fixed<32,1> f_angular_1_1_xTimes1 = (lever_1_1 * f_linear_3_1_2);
  ap_fixed<32,1> f_angular_1_1_xTimes2 = (lever_1_2 * f_linear_3_1_1);
  ap_fixed<32,1> f_angular_1_1_xMinus = (f_angular_1_1_xTimes1 - f_angular_1_1_xTimes2);
  ap_fixed<32,1> f_angular_1_1_yTimes1 = (lever_1_2 * f_linear_3_1_0);
  ap_fixed<32,1> f_angular_1_1_yTimes2 = (lever_1_0 * f_linear_3_1_2);
  ap_fixed<32,1> f_angular_1_1_yMinus = (f_angular_1_1_yTimes1 - f_angular_1_1_yTimes2);
  ap_fixed<32,1> f_angular_1_1_zTimes1 = (lever_1_0 * f_linear_3_1_1);
  ap_fixed<32,1> f_angular_1_1_zTimes2 = (lever_1_1 * f_linear_3_1_0);
  ap_fixed<32,1> f_angular_1_1_zMinus = (f_angular_1_1_zTimes1 - f_angular_1_1_zTimes2);
  ap_fixed<32,1> f_angular_1_1_0 = f_angular_1_1_xMinus;
  ap_fixed<32,1> f_angular_1_1_1 = f_angular_1_1_yMinus;
  ap_fixed<32,1> f_angular_1_1_2 = f_angular_1_1_zMinus;
  ap_fixed<32,1> f_angular_2_1_2 = (f_angular_first_1_2 + f_angular_1_1_2);
  ap_fixed<32,1> f_angular_2_1_1 = (f_angular_first_1_1 + f_angular_1_1_1);
  ap_fixed<32,1> f_angular_2_1_0 = (f_angular_first_1_0 + f_angular_1_1_0);
  ap_fixed<32,1> f_linear_4_temp_1_xTimes1 = (act_inv_angular_1_1 * h_linear_1_2);
  ap_fixed<32,1> f_linear_4_temp_1_xTimes2 = (act_inv_angular_1_2 * h_linear_1_1);
  ap_fixed<32,1> f_linear_4_temp_1_xMinus = (f_linear_4_temp_1_xTimes1 - f_linear_4_temp_1_xTimes2);
  ap_fixed<32,1> f_linear_4_temp_1_yTimes1 = (act_inv_angular_1_2 * h_linear_1_0);
  ap_fixed<32,1> f_linear_4_temp_1_yTimes2 = (act_inv_angular_1_0 * h_linear_1_2);
  ap_fixed<32,2> f_linear_4_temp_1_yMinus = (f_linear_4_temp_1_yTimes1 - f_linear_4_temp_1_yTimes2);
  ap_fixed<32,1> f_linear_4_temp_1_zTimes1 = (act_inv_angular_1_0 * h_linear_1_1);
  ap_fixed<32,1> f_linear_4_temp_1_zTimes2 = (act_inv_angular_1_1 * h_linear_1_0);
  ap_fixed<32,1> f_linear_4_temp_1_zMinus = (f_linear_4_temp_1_zTimes1 - f_linear_4_temp_1_zTimes2);
  ap_fixed<32,1> f_linear_4_temp_1_0 = f_linear_4_temp_1_xMinus;
  ap_fixed<32,2> f_linear_4_temp_1_1 = f_linear_4_temp_1_yMinus;
  ap_fixed<32,1> f_linear_4_temp_1_2 = f_linear_4_temp_1_zMinus;
  ap_fixed<32,2> f_linear_4_1_2 = (f_linear_3_1_2 + f_linear_4_temp_1_2);
  ap_fixed<32,4> f_linear_4_1_1 = (f_linear_3_1_1 + f_linear_4_temp_1_1);
  ap_fixed<32,4> f_linear_4_1_0 = (f_linear_3_1_0 + f_linear_4_temp_1_0);
  ap_fixed<32,1> f_angular_3_temp_1_xTimes1 = (act_inv_angular_1_1 * h_angular_first_1_2);
  ap_fixed<32,1> f_angular_3_temp_1_xTimes2 = (act_inv_angular_1_2 * h_angular_first_1_1);
  ap_fixed<32,2> f_angular_3_temp_1_xMinus = (f_angular_3_temp_1_xTimes1 - f_angular_3_temp_1_xTimes2);
  ap_fixed<32,1> f_angular_3_temp_1_yTimes1 = (act_inv_angular_1_2 * h_angular_first_1_0);
  ap_fixed<32,1> f_angular_3_temp_1_yTimes2 = (act_inv_angular_1_0 * h_angular_first_1_2);
  ap_fixed<32,2> f_angular_3_temp_1_yMinus = (f_angular_3_temp_1_yTimes1 - f_angular_3_temp_1_yTimes2);
  ap_fixed<32,1> f_angular_3_temp_1_zTimes1 = (act_inv_angular_1_0 * h_angular_first_1_1);
  ap_fixed<32,1> f_angular_3_temp_1_zTimes2 = (act_inv_angular_1_1 * h_angular_first_1_0);
  ap_fixed<32,2> f_angular_3_temp_1_zMinus = (f_angular_3_temp_1_zTimes1 - f_angular_3_temp_1_zTimes2);
  ap_fixed<32,2> f_angular_3_temp_1_0 = f_angular_3_temp_1_xMinus;
  ap_fixed<32,2> f_angular_3_temp_1_1 = f_angular_3_temp_1_yMinus;
  ap_fixed<32,2> f_angular_3_temp_1_2 = f_angular_3_temp_1_zMinus;
  ap_fixed<32,3> f_angular_3_1_2 = (f_angular_2_1_2 + f_angular_3_temp_1_2);
  ap_fixed<32,3> f_angular_3_1_1 = (f_angular_2_1_1 + f_angular_3_temp_1_1);
  ap_fixed<32,3> f_angular_3_1_0 = (f_angular_2_1_0 + f_angular_3_temp_1_0);
  ap_fixed<32,1> f_angular_4_temp_1_xTimes1 = (act_inv_linear_1_1 * h_linear_1_2);
  ap_fixed<32,1> f_angular_4_temp_1_xTimes2 = (act_inv_linear_1_2 * h_linear_1_1);
  ap_fixed<32,1> f_angular_4_temp_1_xMinus = (f_angular_4_temp_1_xTimes1 - f_angular_4_temp_1_xTimes2);
  ap_fixed<32,1> f_angular_4_temp_1_yTimes1 = (act_inv_linear_1_2 * h_linear_1_0);
  ap_fixed<32,1> f_angular_4_temp_1_yTimes2 = (act_inv_linear_1_0 * h_linear_1_2);
  ap_fixed<32,1> f_angular_4_temp_1_yMinus = (f_angular_4_temp_1_yTimes1 - f_angular_4_temp_1_yTimes2);
  ap_fixed<32,1> f_angular_4_temp_1_zTimes1 = (act_inv_linear_1_0 * h_linear_1_1);
  ap_fixed<32,1> f_angular_4_temp_1_zTimes2 = (act_inv_linear_1_1 * h_linear_1_0);
  ap_fixed<32,1> f_angular_4_temp_1_zMinus = (f_angular_4_temp_1_zTimes1 - f_angular_4_temp_1_zTimes2);
  ap_fixed<32,1> f_angular_4_temp_1_0 = f_angular_4_temp_1_xMinus;
  ap_fixed<32,1> f_angular_4_temp_1_1 = f_angular_4_temp_1_yMinus;
  ap_fixed<32,1> f_angular_4_temp_1_2 = f_angular_4_temp_1_zMinus;
  ap_fixed<32,3> f_angular_4_1_2 = (f_angular_3_1_2 + f_angular_4_temp_1_2);
  ap_fixed<32,3> f_angular_4_1_1 = (f_angular_3_1_1 + f_angular_4_temp_1_1);
  ap_fixed<32,3> f_angular_4_1_0 = (f_angular_3_1_0 + f_angular_4_temp_1_0);
  ap_fixed<32,1> h_rnea_firstpass1_5 = h_angular_1_2;
  ap_fixed<32,1> h_rnea_firstpass1_4 = h_angular_1_1;
  ap_fixed<32,1> h_rnea_firstpass1_3 = h_angular_1_0;
  ap_fixed<32,1> h_rnea_firstpass1_2 = h_linear_1_2;
  ap_fixed<32,1> h_rnea_firstpass1_1 = h_linear_1_1;
  ap_fixed<32,1> h_rnea_firstpass1_0 = h_linear_1_0;
  ap_fixed<32,3> f_rnea_firstpass1_5 = f_angular_4_1_2;
  ap_fixed<32,3> f_rnea_firstpass1_4 = f_angular_4_1_1;
  ap_fixed<32,3> f_rnea_firstpass1_3 = f_angular_4_1_0;
  ap_fixed<32,2> f_rnea_firstpass1_2 = f_linear_4_1_2;
  ap_fixed<32,4> f_rnea_firstpass1_1 = f_linear_4_1_1;
  ap_fixed<32,4> f_rnea_firstpass1_0 = f_linear_4_1_0;
  ap_fixed<32,4> new_v_1_5 = act_inv_angular_1_2;
  ap_fixed<32,4> new_v_1_4 = act_inv_angular_1_1;
  ap_fixed<32,4> new_v_1_3 = act_inv_angular_1_0;
  ap_fixed<32,1> new_v_1_2 = act_inv_linear_1_2;
  ap_fixed<32,1> new_v_1_1 = act_inv_linear_1_1;
  ap_fixed<32,1> new_v_1_0 = act_inv_linear_1_0;
  ap_fixed<32,2> rotation_matrix_2_2_2 = 1.0;
  ap_fixed<32,1> rotation_matrix_2_2_1 = 0.0;
  ap_fixed<32,1> rotation_matrix_2_2_0 = 0.0;
  ap_fixed<32,1> rotation_matrix_2_1_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_2_1_1 = qcos_2;
  ap_fixed<32,2> rotation_matrix_2_1_0 = qsin_2;
  ap_fixed<32,1> rotation_matrix_2_0_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_2_0_1 = -(qsin_2);
  ap_fixed<32,2> rotation_matrix_2_0_0 = qcos_2;
  ap_fixed<32,1> limi_rotation_2_2_2 = 0.0;
  ap_fixed<32,2> limi_rotation_2_2_1 = rotation_matrix_2_1_1;
  ap_fixed<32,2> limi_rotation_2_2_0 = rotation_matrix_2_1_0;
  ap_fixed<32,2> limi_rotation_2_1_2 = -1.0;
  ap_fixed<32,1> limi_rotation_2_1_1 = 0.0;
  ap_fixed<32,1> limi_rotation_2_1_0 = 0.0;
  ap_fixed<32,1> limi_rotation_2_0_2 = 0.0;
  ap_fixed<32,2> limi_rotation_2_0_1 = rotation_matrix_2_0_1;
  ap_fixed<32,2> limi_rotation_2_0_0 = rotation_matrix_2_0_0;
  ap_fixed<32,1> v_linear_2_2 = data_v_2_2;
  ap_fixed<32,1> v_linear_2_1 = data_v_2_1;
  ap_fixed<32,1> v_linear_2_0 = data_v_2_0;
  ap_fixed<32,4> v_angular_2_2 = v_2;
  ap_fixed<32,1> v_angular_2_1 = data_v_2_4;
  ap_fixed<32,1> v_angular_2_0 = data_v_2_3;
  ap_fixed<32,1> parent_v_linear_2_2 = new_v_1_2;
  ap_fixed<32,1> parent_v_linear_2_1 = new_v_1_1;
  ap_fixed<32,1> parent_v_linear_2_0 = new_v_1_0;
  ap_fixed<32,4> parent_v_angular_2_2 = new_v_1_5;
  ap_fixed<32,4> parent_v_angular_2_1 = new_v_1_4;
  ap_fixed<32,4> parent_v_angular_2_0 = new_v_1_3;
  ap_fixed<32,1> parent_a_gf_linear_2_2 = new_a_gf_up3_1_2;
  ap_fixed<32,5> parent_a_gf_linear_2_1 = new_a_gf_up3_1_1;
  ap_fixed<32,5> parent_a_gf_linear_2_0 = new_a_gf_up3_1_0;
  ap_fixed<32,4> parent_a_gf_angular_2_2 = new_a_gf_up3_1_5;
  ap_fixed<32,6> parent_a_gf_angular_2_1 = new_a_gf_up3_1_4;
  ap_fixed<32,6> parent_a_gf_angular_2_0 = new_a_gf_up3_1_3;
  ap_fixed<32,2> actInv1_2_xTimes1 = (limi_translation_2_1 * parent_v_angular_2_2);
  ap_fixed<32,1> actInv1_2_xTimes2 = (limi_translation_2_2 * parent_v_angular_2_1);
  ap_fixed<32,2> actInv1_2_xMinus = (actInv1_2_xTimes1 - actInv1_2_xTimes2);
  ap_fixed<32,1> actInv1_2_yTimes1 = (limi_translation_2_2 * parent_v_angular_2_0);
  ap_fixed<32,1> actInv1_2_yTimes2 = (limi_translation_2_0 * parent_v_angular_2_2);
  ap_fixed<32,1> actInv1_2_yMinus = (actInv1_2_yTimes1 - actInv1_2_yTimes2);
  ap_fixed<32,1> actInv1_2_zTimes1 = (limi_translation_2_0 * parent_v_angular_2_1);
  ap_fixed<32,2> actInv1_2_zTimes2 = (limi_translation_2_1 * parent_v_angular_2_0);
  ap_fixed<32,2> actInv1_2_zMinus = (actInv1_2_zTimes1 - actInv1_2_zTimes2);
  ap_fixed<32,2> actInv1_2_0 = actInv1_2_xMinus;
  ap_fixed<32,1> actInv1_2_1 = actInv1_2_yMinus;
  ap_fixed<32,2> actInv1_2_2 = actInv1_2_zMinus;
  ap_fixed<32,2> actInv2_2_2 = (parent_v_linear_2_2 - actInv1_2_2);
  ap_fixed<32,1> actInv2_2_1 = (parent_v_linear_2_1 - actInv1_2_1);
  ap_fixed<32,2> actInv2_2_0 = (parent_v_linear_2_0 - actInv1_2_0);
  ap_fixed<32,1> actInv3_2_2_2 = limi_rotation_2_2_2;
  ap_fixed<32,2> actInv3_2_1_2 = limi_rotation_2_2_1;
  ap_fixed<32,2> actInv3_2_0_2 = limi_rotation_2_2_0;
  ap_fixed<32,2> actInv3_2_2_1 = limi_rotation_2_1_2;
  ap_fixed<32,1> actInv3_2_1_1 = limi_rotation_2_1_1;
  ap_fixed<32,1> actInv3_2_0_1 = limi_rotation_2_1_0;
  ap_fixed<32,1> actInv3_2_2_0 = limi_rotation_2_0_2;
  ap_fixed<32,2> actInv3_2_1_0 = limi_rotation_2_0_1;
  ap_fixed<32,2> actInv3_2_0_0 = limi_rotation_2_0_0;
  ap_fixed<32,2> actInv4_2_0_times_0 = (actInv3_2_0_0 * actInv2_2_0);
  ap_fixed<32,1> actInv4_2_0_times_1 = (actInv3_2_0_1 * actInv2_2_1);
  ap_fixed<32,2> actInv4_2_0_times_2 = (actInv3_2_0_2 * actInv2_2_2);
  ap_fixed<32,2> actInv4_2_0_sum_0 = actInv4_2_0_times_0;
  ap_fixed<32,2> actInv4_2_0_sum_1 = (actInv4_2_0_sum_0 + actInv4_2_0_times_1);
  ap_fixed<32,3> actInv4_2_0_sum_2 = (actInv4_2_0_sum_1 + actInv4_2_0_times_2);
  ap_fixed<32,3> actInv4_2_0 = actInv4_2_0_sum_2;
  ap_fixed<32,2> actInv4_2_1_times_0 = (actInv3_2_1_0 * actInv2_2_0);
  ap_fixed<32,1> actInv4_2_1_times_1 = (actInv3_2_1_1 * actInv2_2_1);
  ap_fixed<32,2> actInv4_2_1_times_2 = (actInv3_2_1_2 * actInv2_2_2);
  ap_fixed<32,2> actInv4_2_1_sum_0 = actInv4_2_1_times_0;
  ap_fixed<32,2> actInv4_2_1_sum_1 = (actInv4_2_1_sum_0 + actInv4_2_1_times_1);
  ap_fixed<32,3> actInv4_2_1_sum_2 = (actInv4_2_1_sum_1 + actInv4_2_1_times_2);
  ap_fixed<32,3> actInv4_2_1 = actInv4_2_1_sum_2;
  ap_fixed<32,1> actInv4_2_2_times_0 = (actInv3_2_2_0 * actInv2_2_0);
  ap_fixed<32,1> actInv4_2_2_times_1 = (actInv3_2_2_1 * actInv2_2_1);
  ap_fixed<32,1> actInv4_2_2_times_2 = (actInv3_2_2_2 * actInv2_2_2);
  ap_fixed<32,1> actInv4_2_2_sum_0 = actInv4_2_2_times_0;
  ap_fixed<32,1> actInv4_2_2_sum_1 = (actInv4_2_2_sum_0 + actInv4_2_2_times_1);
  ap_fixed<32,1> actInv4_2_2_sum_2 = (actInv4_2_2_sum_1 + actInv4_2_2_times_2);
  ap_fixed<32,1> actInv4_2_2 = actInv4_2_2_sum_2;
  ap_fixed<32,1> act_inv_linear_2_2 = (v_linear_2_2 + actInv4_2_2);
  ap_fixed<32,3> act_inv_linear_2_1 = (v_linear_2_1 + actInv4_2_1);
  ap_fixed<32,3> act_inv_linear_2_0 = (v_linear_2_0 + actInv4_2_0);
  ap_fixed<32,4> actInv5_2_0_times_0 = (actInv3_2_0_0 * parent_v_angular_2_0);
  ap_fixed<32,1> actInv5_2_0_times_1 = (actInv3_2_0_1 * parent_v_angular_2_1);
  ap_fixed<32,4> actInv5_2_0_times_2 = (actInv3_2_0_2 * parent_v_angular_2_2);
  ap_fixed<32,4> actInv5_2_0_sum_0 = actInv5_2_0_times_0;
  ap_fixed<32,4> actInv5_2_0_sum_1 = (actInv5_2_0_sum_0 + actInv5_2_0_times_1);
  ap_fixed<32,5> actInv5_2_0_sum_2 = (actInv5_2_0_sum_1 + actInv5_2_0_times_2);
  ap_fixed<32,5> actInv5_2_0 = actInv5_2_0_sum_2;
  ap_fixed<32,4> actInv5_2_1_times_0 = (actInv3_2_1_0 * parent_v_angular_2_0);
  ap_fixed<32,1> actInv5_2_1_times_1 = (actInv3_2_1_1 * parent_v_angular_2_1);
  ap_fixed<32,4> actInv5_2_1_times_2 = (actInv3_2_1_2 * parent_v_angular_2_2);
  ap_fixed<32,4> actInv5_2_1_sum_0 = actInv5_2_1_times_0;
  ap_fixed<32,4> actInv5_2_1_sum_1 = (actInv5_2_1_sum_0 + actInv5_2_1_times_1);
  ap_fixed<32,5> actInv5_2_1_sum_2 = (actInv5_2_1_sum_1 + actInv5_2_1_times_2);
  ap_fixed<32,5> actInv5_2_1 = actInv5_2_1_sum_2;
  ap_fixed<32,1> actInv5_2_2_times_0 = (actInv3_2_2_0 * parent_v_angular_2_0);
  ap_fixed<32,4> actInv5_2_2_times_1 = (actInv3_2_2_1 * parent_v_angular_2_1);
  ap_fixed<32,1> actInv5_2_2_times_2 = (actInv3_2_2_2 * parent_v_angular_2_2);
  ap_fixed<32,1> actInv5_2_2_sum_0 = actInv5_2_2_times_0;
  ap_fixed<32,4> actInv5_2_2_sum_1 = (actInv5_2_2_sum_0 + actInv5_2_2_times_1);
  ap_fixed<32,4> actInv5_2_2_sum_2 = (actInv5_2_2_sum_1 + actInv5_2_2_times_2);
  ap_fixed<32,4> actInv5_2_2 = actInv5_2_2_sum_2;
  ap_fixed<32,5> act_inv_angular_2_2 = (v_angular_2_2 + actInv5_2_2);
  ap_fixed<32,5> act_inv_angular_2_1 = (v_angular_2_1 + actInv5_2_1);
  ap_fixed<32,5> act_inv_angular_2_0 = (v_angular_2_0 + actInv5_2_0);
  ap_fixed<32,4> minus_m_w_2 = v_2;
  ap_fixed<32,4> temp50 = -(minus_m_w_2);
  ap_fixed<32,4> temp49 = -(temp50);
  ap_fixed<32,5> alpha_cross1_linear_2 = (temp49 * act_inv_linear_2_1);
  ap_fixed<32,4> temp51 = -(minus_m_w_2);
  ap_fixed<32,5> alpha_cross2_linear_2 = (temp51 * act_inv_linear_2_0);
  ap_fixed<32,1> alpha_cross_linear_2_2 = 0.0;
  ap_fixed<32,5> alpha_cross_linear_2_1 = alpha_cross2_linear_2;
  ap_fixed<32,5> alpha_cross_linear_2_0 = alpha_cross1_linear_2;
  ap_fixed<32,4> temp53 = -(minus_m_w_2);
  ap_fixed<32,4> temp52 = -(temp53);
  ap_fixed<32,7> alpha_cross1_angular_2 = (temp52 * act_inv_angular_2_1);
  ap_fixed<32,4> temp54 = -(minus_m_w_2);
  ap_fixed<32,7> alpha_cross2_angular_2 = (temp54 * act_inv_angular_2_0);
  ap_fixed<32,1> alpha_cross_angular_2_2 = 0.0;
  ap_fixed<32,7> alpha_cross_angular_2_1 = alpha_cross2_angular_2;
  ap_fixed<32,7> alpha_cross_angular_2_0 = alpha_cross1_angular_2;
  ap_fixed<32,1> new_a_gf_2_5 = alpha_cross_angular_2_2;
  ap_fixed<32,7> new_a_gf_2_4 = alpha_cross_angular_2_1;
  ap_fixed<32,7> new_a_gf_2_3 = alpha_cross_angular_2_0;
  ap_fixed<32,1> new_a_gf_2_2 = alpha_cross_linear_2_2;
  ap_fixed<32,5> new_a_gf_2_1 = alpha_cross_linear_2_1;
  ap_fixed<32,5> new_a_gf_2_0 = alpha_cross_linear_2_0;
  ap_fixed<32,4> new_a_gf_up1_2 = (a_2 + new_a_gf_2_5);
  ap_fixed<32,1> new_a_gf2_linear_2_2 = new_a_gf_2_2;
  ap_fixed<32,5> new_a_gf2_linear_2_1 = new_a_gf_2_1;
  ap_fixed<32,5> new_a_gf2_linear_2_0 = new_a_gf_2_0;
  ap_fixed<32,4> new_a_gf2_angular_2_2 = new_a_gf_up1_2;
  ap_fixed<32,7> new_a_gf2_angular_2_1 = new_a_gf_2_4;
  ap_fixed<32,7> new_a_gf2_angular_2_0 = new_a_gf_2_3;
  ap_fixed<32,2> r_22_actInv1_2_xTimes1 = (limi_translation_2_1 * parent_a_gf_angular_2_2);
  ap_fixed<32,1> r_22_actInv1_2_xTimes2 = (limi_translation_2_2 * parent_a_gf_angular_2_1);
  ap_fixed<32,2> r_22_actInv1_2_xMinus = (r_22_actInv1_2_xTimes1 - r_22_actInv1_2_xTimes2);
  ap_fixed<32,1> r_22_actInv1_2_yTimes1 = (limi_translation_2_2 * parent_a_gf_angular_2_0);
  ap_fixed<32,1> r_22_actInv1_2_yTimes2 = (limi_translation_2_0 * parent_a_gf_angular_2_2);
  ap_fixed<32,1> r_22_actInv1_2_yMinus = (r_22_actInv1_2_yTimes1 - r_22_actInv1_2_yTimes2);
  ap_fixed<32,1> r_22_actInv1_2_zTimes1 = (limi_translation_2_0 * parent_a_gf_angular_2_1);
  ap_fixed<32,5> r_22_actInv1_2_zTimes2 = (limi_translation_2_1 * parent_a_gf_angular_2_0);
  ap_fixed<32,5> r_22_actInv1_2_zMinus = (r_22_actInv1_2_zTimes1 - r_22_actInv1_2_zTimes2);
  ap_fixed<32,2> r_22_actInv1_2_0 = r_22_actInv1_2_xMinus;
  ap_fixed<32,1> r_22_actInv1_2_1 = r_22_actInv1_2_yMinus;
  ap_fixed<32,5> r_22_actInv1_2_2 = r_22_actInv1_2_zMinus;
  ap_fixed<32,5> r_23_actInv2_2_2 = (parent_a_gf_linear_2_2 - r_22_actInv1_2_2);
  ap_fixed<32,5> r_23_actInv2_2_1 = (parent_a_gf_linear_2_1 - r_22_actInv1_2_1);
  ap_fixed<32,5> r_23_actInv2_2_0 = (parent_a_gf_linear_2_0 - r_22_actInv1_2_0);
  ap_fixed<32,1> r_24_actInv3_2_2_2 = limi_rotation_2_2_2;
  ap_fixed<32,2> r_24_actInv3_2_1_2 = limi_rotation_2_2_1;
  ap_fixed<32,2> r_24_actInv3_2_0_2 = limi_rotation_2_2_0;
  ap_fixed<32,2> r_24_actInv3_2_2_1 = limi_rotation_2_1_2;
  ap_fixed<32,1> r_24_actInv3_2_1_1 = limi_rotation_2_1_1;
  ap_fixed<32,1> r_24_actInv3_2_0_1 = limi_rotation_2_1_0;
  ap_fixed<32,1> r_24_actInv3_2_2_0 = limi_rotation_2_0_2;
  ap_fixed<32,2> r_24_actInv3_2_1_0 = limi_rotation_2_0_1;
  ap_fixed<32,2> r_24_actInv3_2_0_0 = limi_rotation_2_0_0;
  ap_fixed<32,5> r_25_actInv4_2_0_times_0 = (r_24_actInv3_2_0_0 * r_23_actInv2_2_0);
  ap_fixed<32,1> r_25_actInv4_2_0_times_1 = (r_24_actInv3_2_0_1 * r_23_actInv2_2_1);
  ap_fixed<32,5> r_25_actInv4_2_0_times_2 = (r_24_actInv3_2_0_2 * r_23_actInv2_2_2);
  ap_fixed<32,5> r_25_actInv4_2_0_sum_0 = r_25_actInv4_2_0_times_0;
  ap_fixed<32,5> r_25_actInv4_2_0_sum_1 = (r_25_actInv4_2_0_sum_0 + r_25_actInv4_2_0_times_1);
  ap_fixed<32,6> r_25_actInv4_2_0_sum_2 = (r_25_actInv4_2_0_sum_1 + r_25_actInv4_2_0_times_2);
  ap_fixed<32,6> r_25_actInv4_2_0 = r_25_actInv4_2_0_sum_2;
  ap_fixed<32,5> r_25_actInv4_2_1_times_0 = (r_24_actInv3_2_1_0 * r_23_actInv2_2_0);
  ap_fixed<32,1> r_25_actInv4_2_1_times_1 = (r_24_actInv3_2_1_1 * r_23_actInv2_2_1);
  ap_fixed<32,5> r_25_actInv4_2_1_times_2 = (r_24_actInv3_2_1_2 * r_23_actInv2_2_2);
  ap_fixed<32,5> r_25_actInv4_2_1_sum_0 = r_25_actInv4_2_1_times_0;
  ap_fixed<32,5> r_25_actInv4_2_1_sum_1 = (r_25_actInv4_2_1_sum_0 + r_25_actInv4_2_1_times_1);
  ap_fixed<32,6> r_25_actInv4_2_1_sum_2 = (r_25_actInv4_2_1_sum_1 + r_25_actInv4_2_1_times_2);
  ap_fixed<32,6> r_25_actInv4_2_1 = r_25_actInv4_2_1_sum_2;
  ap_fixed<32,1> r_25_actInv4_2_2_times_0 = (r_24_actInv3_2_2_0 * r_23_actInv2_2_0);
  ap_fixed<32,5> r_25_actInv4_2_2_times_1 = (r_24_actInv3_2_2_1 * r_23_actInv2_2_1);
  ap_fixed<32,1> r_25_actInv4_2_2_times_2 = (r_24_actInv3_2_2_2 * r_23_actInv2_2_2);
  ap_fixed<32,1> r_25_actInv4_2_2_sum_0 = r_25_actInv4_2_2_times_0;
  ap_fixed<32,5> r_25_actInv4_2_2_sum_1 = (r_25_actInv4_2_2_sum_0 + r_25_actInv4_2_2_times_1);
  ap_fixed<32,5> r_25_actInv4_2_2_sum_2 = (r_25_actInv4_2_2_sum_1 + r_25_actInv4_2_2_times_2);
  ap_fixed<32,5> r_25_actInv4_2_2 = r_25_actInv4_2_2_sum_2;
  ap_fixed<32,5> r_26_act_inv_linear_2_2 = (new_a_gf2_linear_2_2 + r_25_actInv4_2_2);
  ap_fixed<32,7> r_26_act_inv_linear_2_1 = (new_a_gf2_linear_2_1 + r_25_actInv4_2_1);
  ap_fixed<32,7> r_26_act_inv_linear_2_0 = (new_a_gf2_linear_2_0 + r_25_actInv4_2_0);
  ap_fixed<32,6> r_27_actInv5_2_0_times_0 = (r_24_actInv3_2_0_0 * parent_a_gf_angular_2_0);
  ap_fixed<32,1> r_27_actInv5_2_0_times_1 = (r_24_actInv3_2_0_1 * parent_a_gf_angular_2_1);
  ap_fixed<32,4> r_27_actInv5_2_0_times_2 = (r_24_actInv3_2_0_2 * parent_a_gf_angular_2_2);
  ap_fixed<32,6> r_27_actInv5_2_0_sum_0 = r_27_actInv5_2_0_times_0;
  ap_fixed<32,6> r_27_actInv5_2_0_sum_1 = (r_27_actInv5_2_0_sum_0 + r_27_actInv5_2_0_times_1);
  ap_fixed<32,7> r_27_actInv5_2_0_sum_2 = (r_27_actInv5_2_0_sum_1 + r_27_actInv5_2_0_times_2);
  ap_fixed<32,7> r_27_actInv5_2_0 = r_27_actInv5_2_0_sum_2;
  ap_fixed<32,6> r_27_actInv5_2_1_times_0 = (r_24_actInv3_2_1_0 * parent_a_gf_angular_2_0);
  ap_fixed<32,1> r_27_actInv5_2_1_times_1 = (r_24_actInv3_2_1_1 * parent_a_gf_angular_2_1);
  ap_fixed<32,4> r_27_actInv5_2_1_times_2 = (r_24_actInv3_2_1_2 * parent_a_gf_angular_2_2);
  ap_fixed<32,6> r_27_actInv5_2_1_sum_0 = r_27_actInv5_2_1_times_0;
  ap_fixed<32,6> r_27_actInv5_2_1_sum_1 = (r_27_actInv5_2_1_sum_0 + r_27_actInv5_2_1_times_1);
  ap_fixed<32,7> r_27_actInv5_2_1_sum_2 = (r_27_actInv5_2_1_sum_1 + r_27_actInv5_2_1_times_2);
  ap_fixed<32,7> r_27_actInv5_2_1 = r_27_actInv5_2_1_sum_2;
  ap_fixed<32,1> r_27_actInv5_2_2_times_0 = (r_24_actInv3_2_2_0 * parent_a_gf_angular_2_0);
  ap_fixed<32,6> r_27_actInv5_2_2_times_1 = (r_24_actInv3_2_2_1 * parent_a_gf_angular_2_1);
  ap_fixed<32,1> r_27_actInv5_2_2_times_2 = (r_24_actInv3_2_2_2 * parent_a_gf_angular_2_2);
  ap_fixed<32,1> r_27_actInv5_2_2_sum_0 = r_27_actInv5_2_2_times_0;
  ap_fixed<32,6> r_27_actInv5_2_2_sum_1 = (r_27_actInv5_2_2_sum_0 + r_27_actInv5_2_2_times_1);
  ap_fixed<32,6> r_27_actInv5_2_2_sum_2 = (r_27_actInv5_2_2_sum_1 + r_27_actInv5_2_2_times_2);
  ap_fixed<32,6> r_27_actInv5_2_2 = r_27_actInv5_2_2_sum_2;
  ap_fixed<32,7> r_28_act_inv_angular_2_2 = (new_a_gf2_angular_2_2 + r_27_actInv5_2_2);
  ap_fixed<32,8> r_28_act_inv_angular_2_1 = (new_a_gf2_angular_2_1 + r_27_actInv5_2_1);
  ap_fixed<32,8> r_28_act_inv_angular_2_0 = (new_a_gf2_angular_2_0 + r_27_actInv5_2_0);
  ap_fixed<32,7> new_a_gf_up3_2_5 = r_28_act_inv_angular_2_2;
  ap_fixed<32,8> new_a_gf_up3_2_4 = r_28_act_inv_angular_2_1;
  ap_fixed<32,8> new_a_gf_up3_2_3 = r_28_act_inv_angular_2_0;
  ap_fixed<32,5> new_a_gf_up3_2_2 = r_26_act_inv_linear_2_2;
  ap_fixed<32,7> new_a_gf_up3_2_1 = r_26_act_inv_linear_2_1;
  ap_fixed<32,7> new_a_gf_up3_2_0 = r_26_act_inv_linear_2_0;
  ap_fixed<32,1> h_linear_1_2_xTimes1 = (lever_2_1 * act_inv_angular_2_2);
  ap_fixed<32,1> h_linear_1_2_xTimes2 = (lever_2_2 * act_inv_angular_2_1);
  ap_fixed<32,2> h_linear_1_2_xMinus = (h_linear_1_2_xTimes1 - h_linear_1_2_xTimes2);
  ap_fixed<32,1> h_linear_1_2_yTimes1 = (lever_2_2 * act_inv_angular_2_0);
  ap_fixed<32,1> h_linear_1_2_yTimes2 = (lever_2_0 * act_inv_angular_2_2);
  ap_fixed<32,1> h_linear_1_2_yMinus = (h_linear_1_2_yTimes1 - h_linear_1_2_yTimes2);
  ap_fixed<32,1> h_linear_1_2_zTimes1 = (lever_2_0 * act_inv_angular_2_1);
  ap_fixed<32,1> h_linear_1_2_zTimes2 = (lever_2_1 * act_inv_angular_2_0);
  ap_fixed<32,1> h_linear_1_2_zMinus = (h_linear_1_2_zTimes1 - h_linear_1_2_zTimes2);
  ap_fixed<32,2> h_linear_1_2_0 = h_linear_1_2_xMinus;
  ap_fixed<32,1> h_linear_1_2_1 = h_linear_1_2_yMinus;
  ap_fixed<32,1> h_linear_1_2_2 = h_linear_1_2_zMinus;
  ap_fixed<32,1> h_linear_2_2_2 = (act_inv_linear_2_2 - h_linear_1_2_2);
  ap_fixed<32,4> h_linear_2_2_1 = (act_inv_linear_2_1 - h_linear_1_2_1);
  ap_fixed<32,4> h_linear_2_2_0 = (act_inv_linear_2_0 - h_linear_1_2_0);
  ap_fixed<32,3> h_linear_2_2 = (h_linear_2_2_2 * masses_2);
  ap_fixed<32,5> h_linear_2_1 = (h_linear_2_2_1 * masses_2);
  ap_fixed<32,5> h_linear_2_0 = (h_linear_2_2_0 * masses_2);
  ap_fixed<32,1> temp55 = (act_inv_angular_2_0 * inertia_2_0_0);
  ap_fixed<32,1> temp56 = (act_inv_angular_2_1 * inertia_2_0_1);
  ap_fixed<32,1> rhsMult1_temp_2 = (temp55 + temp56);
  ap_fixed<32,1> temp57 = (act_inv_angular_2_2 * inertia_2_0_2);
  ap_fixed<32,1> rhsMult1_2 = (rhsMult1_temp_2 + temp57);
  ap_fixed<32,1> temp58 = (act_inv_angular_2_0 * inertia_2_0_1);
  ap_fixed<32,1> temp59 = (act_inv_angular_2_1 * inertia_2_1_1);
  ap_fixed<32,1> rhsMult2_temp_2 = (temp58 + temp59);
  ap_fixed<32,1> temp60 = (act_inv_angular_2_2 * inertia_2_1_2);
  ap_fixed<32,1> rhsMult2_2 = (rhsMult2_temp_2 + temp60);
  ap_fixed<32,1> temp61 = (act_inv_angular_2_0 * inertia_2_0_2);
  ap_fixed<32,1> temp62 = (act_inv_angular_2_1 * inertia_2_1_2);
  ap_fixed<32,1> rhsMult3_temp_2 = (temp61 + temp62);
  ap_fixed<32,1> temp63 = (act_inv_angular_2_2 * inertia_2_2_2);
  ap_fixed<32,1> rhsMult3_2 = (rhsMult3_temp_2 + temp63);
  ap_fixed<32,1> rhsMult_2_2 = rhsMult3_2;
  ap_fixed<32,1> rhsMult_2_1 = rhsMult2_2;
  ap_fixed<32,1> rhsMult_2_0 = rhsMult1_2;
  ap_fixed<32,1> h_angular_first_2_2 = rhsMult_2_2;
  ap_fixed<32,1> h_angular_first_2_1 = rhsMult_2_1;
  ap_fixed<32,1> h_angular_first_2_0 = rhsMult_2_0;
  ap_fixed<32,1> h_angular_1_2_xTimes1 = (lever_2_1 * h_linear_2_2);
  ap_fixed<32,1> h_angular_1_2_xTimes2 = (lever_2_2 * h_linear_2_1);
  ap_fixed<32,1> h_angular_1_2_xMinus = (h_angular_1_2_xTimes1 - h_angular_1_2_xTimes2);
  ap_fixed<32,1> h_angular_1_2_yTimes1 = (lever_2_2 * h_linear_2_0);
  ap_fixed<32,1> h_angular_1_2_yTimes2 = (lever_2_0 * h_linear_2_2);
  ap_fixed<32,1> h_angular_1_2_yMinus = (h_angular_1_2_yTimes1 - h_angular_1_2_yTimes2);
  ap_fixed<32,1> h_angular_1_2_zTimes1 = (lever_2_0 * h_linear_2_1);
  ap_fixed<32,1> h_angular_1_2_zTimes2 = (lever_2_1 * h_linear_2_0);
  ap_fixed<32,1> h_angular_1_2_zMinus = (h_angular_1_2_zTimes1 - h_angular_1_2_zTimes2);
  ap_fixed<32,1> h_angular_1_2_0 = h_angular_1_2_xMinus;
  ap_fixed<32,1> h_angular_1_2_1 = h_angular_1_2_yMinus;
  ap_fixed<32,1> h_angular_1_2_2 = h_angular_1_2_zMinus;
  ap_fixed<32,2> h_angular_2_2 = (h_angular_first_2_2 + h_angular_1_2_2);
  ap_fixed<32,2> h_angular_2_1 = (h_angular_first_2_1 + h_angular_1_2_1);
  ap_fixed<32,2> h_angular_2_0 = (h_angular_first_2_0 + h_angular_1_2_0);
  ap_fixed<32,2> f_linear_1_2_xTimes1 = (lever_2_1 * r_28_act_inv_angular_2_2);
  ap_fixed<32,4> f_linear_1_2_xTimes2 = (lever_2_2 * r_28_act_inv_angular_2_1);
  ap_fixed<32,4> f_linear_1_2_xMinus = (f_linear_1_2_xTimes1 - f_linear_1_2_xTimes2);
  ap_fixed<32,4> f_linear_1_2_yTimes1 = (lever_2_2 * r_28_act_inv_angular_2_0);
  ap_fixed<32,1> f_linear_1_2_yTimes2 = (lever_2_0 * r_28_act_inv_angular_2_2);
  ap_fixed<32,4> f_linear_1_2_yMinus = (f_linear_1_2_yTimes1 - f_linear_1_2_yTimes2);
  ap_fixed<32,3> f_linear_1_2_zTimes1 = (lever_2_0 * r_28_act_inv_angular_2_1);
  ap_fixed<32,3> f_linear_1_2_zTimes2 = (lever_2_1 * r_28_act_inv_angular_2_0);
  ap_fixed<32,4> f_linear_1_2_zMinus = (f_linear_1_2_zTimes1 - f_linear_1_2_zTimes2);
  ap_fixed<32,4> f_linear_1_2_0 = f_linear_1_2_xMinus;
  ap_fixed<32,4> f_linear_1_2_1 = f_linear_1_2_yMinus;
  ap_fixed<32,4> f_linear_1_2_2 = f_linear_1_2_zMinus;
  ap_fixed<32,5> f_linear_2_2_2 = (r_26_act_inv_linear_2_2 - f_linear_1_2_2);
  ap_fixed<32,7> f_linear_2_2_1 = (r_26_act_inv_linear_2_1 - f_linear_1_2_1);
  ap_fixed<32,7> f_linear_2_2_0 = (r_26_act_inv_linear_2_0 - f_linear_1_2_0);
  ap_fixed<32,7> f_linear_3_2_2 = (f_linear_2_2_2 * masses_2);
  ap_fixed<32,9> f_linear_3_2_1 = (f_linear_2_2_1 * masses_2);
  ap_fixed<32,9> f_linear_3_2_0 = (f_linear_2_2_0 * masses_2);
  ap_fixed<32,3> temp64 = (r_28_act_inv_angular_2_0 * inertia_2_0_0);
  ap_fixed<32,1> temp65 = (r_28_act_inv_angular_2_1 * inertia_2_0_1);
  ap_fixed<32,3> r_29_rhsMult1_temp_2 = (temp64 + temp65);
  ap_fixed<32,1> temp66 = (r_28_act_inv_angular_2_2 * inertia_2_0_2);
  ap_fixed<32,3> r_30_rhsMult1_2 = (r_29_rhsMult1_temp_2 + temp66);
  ap_fixed<32,1> temp67 = (r_28_act_inv_angular_2_0 * inertia_2_0_1);
  ap_fixed<32,3> temp68 = (r_28_act_inv_angular_2_1 * inertia_2_1_1);
  ap_fixed<32,3> r_31_rhsMult2_temp_2 = (temp67 + temp68);
  ap_fixed<32,1> temp69 = (r_28_act_inv_angular_2_2 * inertia_2_1_2);
  ap_fixed<32,3> r_32_rhsMult2_2 = (r_31_rhsMult2_temp_2 + temp69);
  ap_fixed<32,1> temp70 = (r_28_act_inv_angular_2_0 * inertia_2_0_2);
  ap_fixed<32,2> temp71 = (r_28_act_inv_angular_2_1 * inertia_2_1_2);
  ap_fixed<32,3> r_33_rhsMult3_temp_2 = (temp70 + temp71);
  ap_fixed<32,1> temp72 = (r_28_act_inv_angular_2_2 * inertia_2_2_2);
  ap_fixed<32,3> r_34_rhsMult3_2 = (r_33_rhsMult3_temp_2 + temp72);
  ap_fixed<32,3> r_35_rhsMult_2_2 = r_34_rhsMult3_2;
  ap_fixed<32,3> r_35_rhsMult_2_1 = r_32_rhsMult2_2;
  ap_fixed<32,3> r_35_rhsMult_2_0 = r_30_rhsMult1_2;
  ap_fixed<32,3> f_angular_first_2_2 = r_35_rhsMult_2_2;
  ap_fixed<32,3> f_angular_first_2_1 = r_35_rhsMult_2_1;
  ap_fixed<32,3> f_angular_first_2_0 = r_35_rhsMult_2_0;
  ap_fixed<32,2> f_angular_1_2_xTimes1 = (lever_2_1 * f_linear_3_2_2);
  ap_fixed<32,5> f_angular_1_2_xTimes2 = (lever_2_2 * f_linear_3_2_1);
  ap_fixed<32,5> f_angular_1_2_xMinus = (f_angular_1_2_xTimes1 - f_angular_1_2_xTimes2);
  ap_fixed<32,5> f_angular_1_2_yTimes1 = (lever_2_2 * f_linear_3_2_0);
  ap_fixed<32,2> f_angular_1_2_yTimes2 = (lever_2_0 * f_linear_3_2_2);
  ap_fixed<32,5> f_angular_1_2_yMinus = (f_angular_1_2_yTimes1 - f_angular_1_2_yTimes2);
  ap_fixed<32,3> f_angular_1_2_zTimes1 = (lever_2_0 * f_linear_3_2_1);
  ap_fixed<32,4> f_angular_1_2_zTimes2 = (lever_2_1 * f_linear_3_2_0);
  ap_fixed<32,5> f_angular_1_2_zMinus = (f_angular_1_2_zTimes1 - f_angular_1_2_zTimes2);
  ap_fixed<32,5> f_angular_1_2_0 = f_angular_1_2_xMinus;
  ap_fixed<32,5> f_angular_1_2_1 = f_angular_1_2_yMinus;
  ap_fixed<32,5> f_angular_1_2_2 = f_angular_1_2_zMinus;
  ap_fixed<32,5> f_angular_2_2_2 = (f_angular_first_2_2 + f_angular_1_2_2);
  ap_fixed<32,5> f_angular_2_2_1 = (f_angular_first_2_1 + f_angular_1_2_1);
  ap_fixed<32,5> f_angular_2_2_0 = (f_angular_first_2_0 + f_angular_1_2_0);
  ap_fixed<32,6> f_linear_4_temp_2_xTimes1 = (act_inv_angular_2_1 * h_linear_2_2);
  ap_fixed<32,9> f_linear_4_temp_2_xTimes2 = (act_inv_angular_2_2 * h_linear_2_1);
  ap_fixed<32,9> f_linear_4_temp_2_xMinus = (f_linear_4_temp_2_xTimes1 - f_linear_4_temp_2_xTimes2);
  ap_fixed<32,9> f_linear_4_temp_2_yTimes1 = (act_inv_angular_2_2 * h_linear_2_0);
  ap_fixed<32,6> f_linear_4_temp_2_yTimes2 = (act_inv_angular_2_0 * h_linear_2_2);
  ap_fixed<32,9> f_linear_4_temp_2_yMinus = (f_linear_4_temp_2_yTimes1 - f_linear_4_temp_2_yTimes2);
  ap_fixed<32,9> f_linear_4_temp_2_zTimes1 = (act_inv_angular_2_0 * h_linear_2_1);
  ap_fixed<32,9> f_linear_4_temp_2_zTimes2 = (act_inv_angular_2_1 * h_linear_2_0);
  ap_fixed<32,10> f_linear_4_temp_2_zMinus = (f_linear_4_temp_2_zTimes1 - f_linear_4_temp_2_zTimes2);
  ap_fixed<32,9> f_linear_4_temp_2_0 = f_linear_4_temp_2_xMinus;
  ap_fixed<32,9> f_linear_4_temp_2_1 = f_linear_4_temp_2_yMinus;
  ap_fixed<32,10> f_linear_4_temp_2_2 = f_linear_4_temp_2_zMinus;
  ap_fixed<32,10> f_linear_4_2_2 = (f_linear_3_2_2 + f_linear_4_temp_2_2);
  ap_fixed<32,10> f_linear_4_2_1 = (f_linear_3_2_1 + f_linear_4_temp_2_1);
  ap_fixed<32,10> f_linear_4_2_0 = (f_linear_3_2_0 + f_linear_4_temp_2_0);
  ap_fixed<32,3> f_angular_3_temp_2_xTimes1 = (act_inv_angular_2_1 * h_angular_first_2_2);
  ap_fixed<32,4> f_angular_3_temp_2_xTimes2 = (act_inv_angular_2_2 * h_angular_first_2_1);
  ap_fixed<32,5> f_angular_3_temp_2_xMinus = (f_angular_3_temp_2_xTimes1 - f_angular_3_temp_2_xTimes2);
  ap_fixed<32,4> f_angular_3_temp_2_yTimes1 = (act_inv_angular_2_2 * h_angular_first_2_0);
  ap_fixed<32,3> f_angular_3_temp_2_yTimes2 = (act_inv_angular_2_0 * h_angular_first_2_2);
  ap_fixed<32,5> f_angular_3_temp_2_yMinus = (f_angular_3_temp_2_yTimes1 - f_angular_3_temp_2_yTimes2);
  ap_fixed<32,4> f_angular_3_temp_2_zTimes1 = (act_inv_angular_2_0 * h_angular_first_2_1);
  ap_fixed<32,4> f_angular_3_temp_2_zTimes2 = (act_inv_angular_2_1 * h_angular_first_2_0);
  ap_fixed<32,5> f_angular_3_temp_2_zMinus = (f_angular_3_temp_2_zTimes1 - f_angular_3_temp_2_zTimes2);
  ap_fixed<32,5> f_angular_3_temp_2_0 = f_angular_3_temp_2_xMinus;
  ap_fixed<32,5> f_angular_3_temp_2_1 = f_angular_3_temp_2_yMinus;
  ap_fixed<32,5> f_angular_3_temp_2_2 = f_angular_3_temp_2_zMinus;
  ap_fixed<32,6> f_angular_3_2_2 = (f_angular_2_2_2 + f_angular_3_temp_2_2);
  ap_fixed<32,6> f_angular_3_2_1 = (f_angular_2_2_1 + f_angular_3_temp_2_1);
  ap_fixed<32,6> f_angular_3_2_0 = (f_angular_2_2_0 + f_angular_3_temp_2_0);
  ap_fixed<32,4> f_angular_4_temp_2_xTimes1 = (act_inv_linear_2_1 * h_linear_2_2);
  ap_fixed<32,1> f_angular_4_temp_2_xTimes2 = (act_inv_linear_2_2 * h_linear_2_1);
  ap_fixed<32,4> f_angular_4_temp_2_xMinus = (f_angular_4_temp_2_xTimes1 - f_angular_4_temp_2_xTimes2);
  ap_fixed<32,1> f_angular_4_temp_2_yTimes1 = (act_inv_linear_2_2 * h_linear_2_0);
  ap_fixed<32,4> f_angular_4_temp_2_yTimes2 = (act_inv_linear_2_0 * h_linear_2_2);
  ap_fixed<32,4> f_angular_4_temp_2_yMinus = (f_angular_4_temp_2_yTimes1 - f_angular_4_temp_2_yTimes2);
  ap_fixed<32,7> f_angular_4_temp_2_zTimes1 = (act_inv_linear_2_0 * h_linear_2_1);
  ap_fixed<32,7> f_angular_4_temp_2_zTimes2 = (act_inv_linear_2_1 * h_linear_2_0);
  ap_fixed<32,8> f_angular_4_temp_2_zMinus = (f_angular_4_temp_2_zTimes1 - f_angular_4_temp_2_zTimes2);
  ap_fixed<32,4> f_angular_4_temp_2_0 = f_angular_4_temp_2_xMinus;
  ap_fixed<32,4> f_angular_4_temp_2_1 = f_angular_4_temp_2_yMinus;
  ap_fixed<32,8> f_angular_4_temp_2_2 = f_angular_4_temp_2_zMinus;
  ap_fixed<32,8> f_angular_4_2_2 = (f_angular_3_2_2 + f_angular_4_temp_2_2);
  ap_fixed<32,6> f_angular_4_2_1 = (f_angular_3_2_1 + f_angular_4_temp_2_1);
  ap_fixed<32,6> f_angular_4_2_0 = (f_angular_3_2_0 + f_angular_4_temp_2_0);
  ap_fixed<32,2> h_rnea_firstpass2_5 = h_angular_2_2;
  ap_fixed<32,2> h_rnea_firstpass2_4 = h_angular_2_1;
  ap_fixed<32,2> h_rnea_firstpass2_3 = h_angular_2_0;
  ap_fixed<32,3> h_rnea_firstpass2_2 = h_linear_2_2;
  ap_fixed<32,5> h_rnea_firstpass2_1 = h_linear_2_1;
  ap_fixed<32,5> h_rnea_firstpass2_0 = h_linear_2_0;
  ap_fixed<32,8> f_rnea_firstpass2_5 = f_angular_4_2_2;
  ap_fixed<32,6> f_rnea_firstpass2_4 = f_angular_4_2_1;
  ap_fixed<32,6> f_rnea_firstpass2_3 = f_angular_4_2_0;
  ap_fixed<32,10> f_rnea_firstpass2_2 = f_linear_4_2_2;
  ap_fixed<32,10> f_rnea_firstpass2_1 = f_linear_4_2_1;
  ap_fixed<32,10> f_rnea_firstpass2_0 = f_linear_4_2_0;
  ap_fixed<32,5> new_v_2_5 = act_inv_angular_2_2;
  ap_fixed<32,5> new_v_2_4 = act_inv_angular_2_1;
  ap_fixed<32,5> new_v_2_3 = act_inv_angular_2_0;
  ap_fixed<32,1> new_v_2_2 = act_inv_linear_2_2;
  ap_fixed<32,3> new_v_2_1 = act_inv_linear_2_1;
  ap_fixed<32,3> new_v_2_0 = act_inv_linear_2_0;
  ap_fixed<32,2> rotation_matrix_3_2_2 = 1.0;
  ap_fixed<32,1> rotation_matrix_3_2_1 = 0.0;
  ap_fixed<32,1> rotation_matrix_3_2_0 = 0.0;
  ap_fixed<32,1> rotation_matrix_3_1_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_3_1_1 = qcos_3;
  ap_fixed<32,2> rotation_matrix_3_1_0 = qsin_3;
  ap_fixed<32,1> rotation_matrix_3_0_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_3_0_1 = -(qsin_3);
  ap_fixed<32,2> rotation_matrix_3_0_0 = qcos_3;
  ap_fixed<32,1> limi_rotation_3_2_2 = 0.0;
  ap_fixed<32,2> limi_rotation_3_2_1 = rotation_matrix_3_1_1;
  ap_fixed<32,2> limi_rotation_3_2_0 = rotation_matrix_3_1_0;
  ap_fixed<32,2> limi_rotation_3_1_2 = -1.0;
  ap_fixed<32,1> limi_rotation_3_1_1 = 0.0;
  ap_fixed<32,1> limi_rotation_3_1_0 = 0.0;
  ap_fixed<32,1> limi_rotation_3_0_2 = 0.0;
  ap_fixed<32,2> limi_rotation_3_0_1 = rotation_matrix_3_0_1;
  ap_fixed<32,2> limi_rotation_3_0_0 = rotation_matrix_3_0_0;
  ap_fixed<32,1> v_linear_3_2 = data_v_3_2;
  ap_fixed<32,1> v_linear_3_1 = data_v_3_1;
  ap_fixed<32,1> v_linear_3_0 = data_v_3_0;
  ap_fixed<32,4> v_angular_3_2 = v_3;
  ap_fixed<32,1> v_angular_3_1 = data_v_3_4;
  ap_fixed<32,1> v_angular_3_0 = data_v_3_3;
  ap_fixed<32,1> parent_v_linear_3_2 = new_v_2_2;
  ap_fixed<32,3> parent_v_linear_3_1 = new_v_2_1;
  ap_fixed<32,3> parent_v_linear_3_0 = new_v_2_0;
  ap_fixed<32,5> parent_v_angular_3_2 = new_v_2_5;
  ap_fixed<32,5> parent_v_angular_3_1 = new_v_2_4;
  ap_fixed<32,5> parent_v_angular_3_0 = new_v_2_3;
  ap_fixed<32,5> parent_a_gf_linear_3_2 = new_a_gf_up3_2_2;
  ap_fixed<32,7> parent_a_gf_linear_3_1 = new_a_gf_up3_2_1;
  ap_fixed<32,7> parent_a_gf_linear_3_0 = new_a_gf_up3_2_0;
  ap_fixed<32,7> parent_a_gf_angular_3_2 = new_a_gf_up3_2_5;
  ap_fixed<32,8> parent_a_gf_angular_3_1 = new_a_gf_up3_2_4;
  ap_fixed<32,8> parent_a_gf_angular_3_0 = new_a_gf_up3_2_3;
  ap_fixed<32,1> actInv1_3_xTimes1 = (limi_translation_3_1 * parent_v_angular_3_2);
  ap_fixed<32,1> actInv1_3_xTimes2 = (limi_translation_3_2 * parent_v_angular_3_1);
  ap_fixed<32,1> actInv1_3_xMinus = (actInv1_3_xTimes1 - actInv1_3_xTimes2);
  ap_fixed<32,1> actInv1_3_yTimes1 = (limi_translation_3_2 * parent_v_angular_3_0);
  ap_fixed<32,1> actInv1_3_yTimes2 = (limi_translation_3_0 * parent_v_angular_3_2);
  ap_fixed<32,1> actInv1_3_yMinus = (actInv1_3_yTimes1 - actInv1_3_yTimes2);
  ap_fixed<32,1> actInv1_3_zTimes1 = (limi_translation_3_0 * parent_v_angular_3_1);
  ap_fixed<32,1> actInv1_3_zTimes2 = (limi_translation_3_1 * parent_v_angular_3_0);
  ap_fixed<32,1> actInv1_3_zMinus = (actInv1_3_zTimes1 - actInv1_3_zTimes2);
  ap_fixed<32,1> actInv1_3_0 = actInv1_3_xMinus;
  ap_fixed<32,1> actInv1_3_1 = actInv1_3_yMinus;
  ap_fixed<32,1> actInv1_3_2 = actInv1_3_zMinus;
  ap_fixed<32,1> actInv2_3_2 = (parent_v_linear_3_2 - actInv1_3_2);
  ap_fixed<32,3> actInv2_3_1 = (parent_v_linear_3_1 - actInv1_3_1);
  ap_fixed<32,3> actInv2_3_0 = (parent_v_linear_3_0 - actInv1_3_0);
  ap_fixed<32,1> actInv3_3_2_2 = limi_rotation_3_2_2;
  ap_fixed<32,2> actInv3_3_1_2 = limi_rotation_3_2_1;
  ap_fixed<32,2> actInv3_3_0_2 = limi_rotation_3_2_0;
  ap_fixed<32,2> actInv3_3_2_1 = limi_rotation_3_1_2;
  ap_fixed<32,1> actInv3_3_1_1 = limi_rotation_3_1_1;
  ap_fixed<32,1> actInv3_3_0_1 = limi_rotation_3_1_0;
  ap_fixed<32,1> actInv3_3_2_0 = limi_rotation_3_0_2;
  ap_fixed<32,2> actInv3_3_1_0 = limi_rotation_3_0_1;
  ap_fixed<32,2> actInv3_3_0_0 = limi_rotation_3_0_0;
  ap_fixed<32,3> actInv4_3_0_times_0 = (actInv3_3_0_0 * actInv2_3_0);
  ap_fixed<32,1> actInv4_3_0_times_1 = (actInv3_3_0_1 * actInv2_3_1);
  ap_fixed<32,1> actInv4_3_0_times_2 = (actInv3_3_0_2 * actInv2_3_2);
  ap_fixed<32,3> actInv4_3_0_sum_0 = actInv4_3_0_times_0;
  ap_fixed<32,3> actInv4_3_0_sum_1 = (actInv4_3_0_sum_0 + actInv4_3_0_times_1);
  ap_fixed<32,3> actInv4_3_0_sum_2 = (actInv4_3_0_sum_1 + actInv4_3_0_times_2);
  ap_fixed<32,3> actInv4_3_0 = actInv4_3_0_sum_2;
  ap_fixed<32,3> actInv4_3_1_times_0 = (actInv3_3_1_0 * actInv2_3_0);
  ap_fixed<32,1> actInv4_3_1_times_1 = (actInv3_3_1_1 * actInv2_3_1);
  ap_fixed<32,1> actInv4_3_1_times_2 = (actInv3_3_1_2 * actInv2_3_2);
  ap_fixed<32,3> actInv4_3_1_sum_0 = actInv4_3_1_times_0;
  ap_fixed<32,3> actInv4_3_1_sum_1 = (actInv4_3_1_sum_0 + actInv4_3_1_times_1);
  ap_fixed<32,3> actInv4_3_1_sum_2 = (actInv4_3_1_sum_1 + actInv4_3_1_times_2);
  ap_fixed<32,3> actInv4_3_1 = actInv4_3_1_sum_2;
  ap_fixed<32,1> actInv4_3_2_times_0 = (actInv3_3_2_0 * actInv2_3_0);
  ap_fixed<32,3> actInv4_3_2_times_1 = (actInv3_3_2_1 * actInv2_3_1);
  ap_fixed<32,1> actInv4_3_2_times_2 = (actInv3_3_2_2 * actInv2_3_2);
  ap_fixed<32,1> actInv4_3_2_sum_0 = actInv4_3_2_times_0;
  ap_fixed<32,3> actInv4_3_2_sum_1 = (actInv4_3_2_sum_0 + actInv4_3_2_times_1);
  ap_fixed<32,3> actInv4_3_2_sum_2 = (actInv4_3_2_sum_1 + actInv4_3_2_times_2);
  ap_fixed<32,3> actInv4_3_2 = actInv4_3_2_sum_2;
  ap_fixed<32,3> act_inv_linear_3_2 = (v_linear_3_2 + actInv4_3_2);
  ap_fixed<32,3> act_inv_linear_3_1 = (v_linear_3_1 + actInv4_3_1);
  ap_fixed<32,3> act_inv_linear_3_0 = (v_linear_3_0 + actInv4_3_0);
  ap_fixed<32,5> actInv5_3_0_times_0 = (actInv3_3_0_0 * parent_v_angular_3_0);
  ap_fixed<32,1> actInv5_3_0_times_1 = (actInv3_3_0_1 * parent_v_angular_3_1);
  ap_fixed<32,5> actInv5_3_0_times_2 = (actInv3_3_0_2 * parent_v_angular_3_2);
  ap_fixed<32,5> actInv5_3_0_sum_0 = actInv5_3_0_times_0;
  ap_fixed<32,5> actInv5_3_0_sum_1 = (actInv5_3_0_sum_0 + actInv5_3_0_times_1);
  ap_fixed<32,6> actInv5_3_0_sum_2 = (actInv5_3_0_sum_1 + actInv5_3_0_times_2);
  ap_fixed<32,6> actInv5_3_0 = actInv5_3_0_sum_2;
  ap_fixed<32,5> actInv5_3_1_times_0 = (actInv3_3_1_0 * parent_v_angular_3_0);
  ap_fixed<32,1> actInv5_3_1_times_1 = (actInv3_3_1_1 * parent_v_angular_3_1);
  ap_fixed<32,5> actInv5_3_1_times_2 = (actInv3_3_1_2 * parent_v_angular_3_2);
  ap_fixed<32,5> actInv5_3_1_sum_0 = actInv5_3_1_times_0;
  ap_fixed<32,5> actInv5_3_1_sum_1 = (actInv5_3_1_sum_0 + actInv5_3_1_times_1);
  ap_fixed<32,6> actInv5_3_1_sum_2 = (actInv5_3_1_sum_1 + actInv5_3_1_times_2);
  ap_fixed<32,6> actInv5_3_1 = actInv5_3_1_sum_2;
  ap_fixed<32,1> actInv5_3_2_times_0 = (actInv3_3_2_0 * parent_v_angular_3_0);
  ap_fixed<32,5> actInv5_3_2_times_1 = (actInv3_3_2_1 * parent_v_angular_3_1);
  ap_fixed<32,1> actInv5_3_2_times_2 = (actInv3_3_2_2 * parent_v_angular_3_2);
  ap_fixed<32,1> actInv5_3_2_sum_0 = actInv5_3_2_times_0;
  ap_fixed<32,5> actInv5_3_2_sum_1 = (actInv5_3_2_sum_0 + actInv5_3_2_times_1);
  ap_fixed<32,5> actInv5_3_2_sum_2 = (actInv5_3_2_sum_1 + actInv5_3_2_times_2);
  ap_fixed<32,5> actInv5_3_2 = actInv5_3_2_sum_2;
  ap_fixed<32,5> act_inv_angular_3_2 = (v_angular_3_2 + actInv5_3_2);
  ap_fixed<32,6> act_inv_angular_3_1 = (v_angular_3_1 + actInv5_3_1);
  ap_fixed<32,6> act_inv_angular_3_0 = (v_angular_3_0 + actInv5_3_0);
  ap_fixed<32,4> minus_m_w_3 = v_3;
  ap_fixed<32,4> temp74 = -(minus_m_w_3);
  ap_fixed<32,4> temp73 = -(temp74);
  ap_fixed<32,6> alpha_cross1_linear_3 = (temp73 * act_inv_linear_3_1);
  ap_fixed<32,4> temp75 = -(minus_m_w_3);
  ap_fixed<32,6> alpha_cross2_linear_3 = (temp75 * act_inv_linear_3_0);
  ap_fixed<32,1> alpha_cross_linear_3_2 = 0.0;
  ap_fixed<32,6> alpha_cross_linear_3_1 = alpha_cross2_linear_3;
  ap_fixed<32,6> alpha_cross_linear_3_0 = alpha_cross1_linear_3;
  ap_fixed<32,4> temp77 = -(minus_m_w_3);
  ap_fixed<32,4> temp76 = -(temp77);
  ap_fixed<32,8> alpha_cross1_angular_3 = (temp76 * act_inv_angular_3_1);
  ap_fixed<32,4> temp78 = -(minus_m_w_3);
  ap_fixed<32,8> alpha_cross2_angular_3 = (temp78 * act_inv_angular_3_0);
  ap_fixed<32,1> alpha_cross_angular_3_2 = 0.0;
  ap_fixed<32,8> alpha_cross_angular_3_1 = alpha_cross2_angular_3;
  ap_fixed<32,8> alpha_cross_angular_3_0 = alpha_cross1_angular_3;
  ap_fixed<32,1> new_a_gf_3_5 = alpha_cross_angular_3_2;
  ap_fixed<32,8> new_a_gf_3_4 = alpha_cross_angular_3_1;
  ap_fixed<32,8> new_a_gf_3_3 = alpha_cross_angular_3_0;
  ap_fixed<32,1> new_a_gf_3_2 = alpha_cross_linear_3_2;
  ap_fixed<32,6> new_a_gf_3_1 = alpha_cross_linear_3_1;
  ap_fixed<32,6> new_a_gf_3_0 = alpha_cross_linear_3_0;
  ap_fixed<32,4> new_a_gf_up1_3 = (a_3 + new_a_gf_3_5);
  ap_fixed<32,1> new_a_gf2_linear_3_2 = new_a_gf_3_2;
  ap_fixed<32,6> new_a_gf2_linear_3_1 = new_a_gf_3_1;
  ap_fixed<32,6> new_a_gf2_linear_3_0 = new_a_gf_3_0;
  ap_fixed<32,4> new_a_gf2_angular_3_2 = new_a_gf_up1_3;
  ap_fixed<32,8> new_a_gf2_angular_3_1 = new_a_gf_3_4;
  ap_fixed<32,8> new_a_gf2_angular_3_0 = new_a_gf_3_3;
  ap_fixed<32,1> r_36_actInv1_3_xTimes1 = (limi_translation_3_1 * parent_a_gf_angular_3_2);
  ap_fixed<32,1> r_36_actInv1_3_xTimes2 = (limi_translation_3_2 * parent_a_gf_angular_3_1);
  ap_fixed<32,1> r_36_actInv1_3_xMinus = (r_36_actInv1_3_xTimes1 - r_36_actInv1_3_xTimes2);
  ap_fixed<32,1> r_36_actInv1_3_yTimes1 = (limi_translation_3_2 * parent_a_gf_angular_3_0);
  ap_fixed<32,3> r_36_actInv1_3_yTimes2 = (limi_translation_3_0 * parent_a_gf_angular_3_2);
  ap_fixed<32,3> r_36_actInv1_3_yMinus = (r_36_actInv1_3_yTimes1 - r_36_actInv1_3_yTimes2);
  ap_fixed<32,4> r_36_actInv1_3_zTimes1 = (limi_translation_3_0 * parent_a_gf_angular_3_1);
  ap_fixed<32,1> r_36_actInv1_3_zTimes2 = (limi_translation_3_1 * parent_a_gf_angular_3_0);
  ap_fixed<32,4> r_36_actInv1_3_zMinus = (r_36_actInv1_3_zTimes1 - r_36_actInv1_3_zTimes2);
  ap_fixed<32,1> r_36_actInv1_3_0 = r_36_actInv1_3_xMinus;
  ap_fixed<32,3> r_36_actInv1_3_1 = r_36_actInv1_3_yMinus;
  ap_fixed<32,4> r_36_actInv1_3_2 = r_36_actInv1_3_zMinus;
  ap_fixed<32,6> r_37_actInv2_3_2 = (parent_a_gf_linear_3_2 - r_36_actInv1_3_2);
  ap_fixed<32,7> r_37_actInv2_3_1 = (parent_a_gf_linear_3_1 - r_36_actInv1_3_1);
  ap_fixed<32,7> r_37_actInv2_3_0 = (parent_a_gf_linear_3_0 - r_36_actInv1_3_0);
  ap_fixed<32,1> r_38_actInv3_3_2_2 = limi_rotation_3_2_2;
  ap_fixed<32,2> r_38_actInv3_3_1_2 = limi_rotation_3_2_1;
  ap_fixed<32,2> r_38_actInv3_3_0_2 = limi_rotation_3_2_0;
  ap_fixed<32,2> r_38_actInv3_3_2_1 = limi_rotation_3_1_2;
  ap_fixed<32,1> r_38_actInv3_3_1_1 = limi_rotation_3_1_1;
  ap_fixed<32,1> r_38_actInv3_3_0_1 = limi_rotation_3_1_0;
  ap_fixed<32,1> r_38_actInv3_3_2_0 = limi_rotation_3_0_2;
  ap_fixed<32,2> r_38_actInv3_3_1_0 = limi_rotation_3_0_1;
  ap_fixed<32,2> r_38_actInv3_3_0_0 = limi_rotation_3_0_0;
  ap_fixed<32,7> r_39_actInv4_3_0_times_0 = (r_38_actInv3_3_0_0 * r_37_actInv2_3_0);
  ap_fixed<32,1> r_39_actInv4_3_0_times_1 = (r_38_actInv3_3_0_1 * r_37_actInv2_3_1);
  ap_fixed<32,6> r_39_actInv4_3_0_times_2 = (r_38_actInv3_3_0_2 * r_37_actInv2_3_2);
  ap_fixed<32,7> r_39_actInv4_3_0_sum_0 = r_39_actInv4_3_0_times_0;
  ap_fixed<32,7> r_39_actInv4_3_0_sum_1 = (r_39_actInv4_3_0_sum_0 + r_39_actInv4_3_0_times_1);
  ap_fixed<32,7> r_39_actInv4_3_0_sum_2 = (r_39_actInv4_3_0_sum_1 + r_39_actInv4_3_0_times_2);
  ap_fixed<32,7> r_39_actInv4_3_0 = r_39_actInv4_3_0_sum_2;
  ap_fixed<32,7> r_39_actInv4_3_1_times_0 = (r_38_actInv3_3_1_0 * r_37_actInv2_3_0);
  ap_fixed<32,1> r_39_actInv4_3_1_times_1 = (r_38_actInv3_3_1_1 * r_37_actInv2_3_1);
  ap_fixed<32,6> r_39_actInv4_3_1_times_2 = (r_38_actInv3_3_1_2 * r_37_actInv2_3_2);
  ap_fixed<32,7> r_39_actInv4_3_1_sum_0 = r_39_actInv4_3_1_times_0;
  ap_fixed<32,7> r_39_actInv4_3_1_sum_1 = (r_39_actInv4_3_1_sum_0 + r_39_actInv4_3_1_times_1);
  ap_fixed<32,7> r_39_actInv4_3_1_sum_2 = (r_39_actInv4_3_1_sum_1 + r_39_actInv4_3_1_times_2);
  ap_fixed<32,7> r_39_actInv4_3_1 = r_39_actInv4_3_1_sum_2;
  ap_fixed<32,1> r_39_actInv4_3_2_times_0 = (r_38_actInv3_3_2_0 * r_37_actInv2_3_0);
  ap_fixed<32,7> r_39_actInv4_3_2_times_1 = (r_38_actInv3_3_2_1 * r_37_actInv2_3_1);
  ap_fixed<32,1> r_39_actInv4_3_2_times_2 = (r_38_actInv3_3_2_2 * r_37_actInv2_3_2);
  ap_fixed<32,1> r_39_actInv4_3_2_sum_0 = r_39_actInv4_3_2_times_0;
  ap_fixed<32,7> r_39_actInv4_3_2_sum_1 = (r_39_actInv4_3_2_sum_0 + r_39_actInv4_3_2_times_1);
  ap_fixed<32,7> r_39_actInv4_3_2_sum_2 = (r_39_actInv4_3_2_sum_1 + r_39_actInv4_3_2_times_2);
  ap_fixed<32,7> r_39_actInv4_3_2 = r_39_actInv4_3_2_sum_2;
  ap_fixed<32,7> r_40_act_inv_linear_3_2 = (new_a_gf2_linear_3_2 + r_39_actInv4_3_2);
  ap_fixed<32,8> r_40_act_inv_linear_3_1 = (new_a_gf2_linear_3_1 + r_39_actInv4_3_1);
  ap_fixed<32,8> r_40_act_inv_linear_3_0 = (new_a_gf2_linear_3_0 + r_39_actInv4_3_0);
  ap_fixed<32,8> r_41_actInv5_3_0_times_0 = (r_38_actInv3_3_0_0 * parent_a_gf_angular_3_0);
  ap_fixed<32,1> r_41_actInv5_3_0_times_1 = (r_38_actInv3_3_0_1 * parent_a_gf_angular_3_1);
  ap_fixed<32,7> r_41_actInv5_3_0_times_2 = (r_38_actInv3_3_0_2 * parent_a_gf_angular_3_2);
  ap_fixed<32,8> r_41_actInv5_3_0_sum_0 = r_41_actInv5_3_0_times_0;
  ap_fixed<32,8> r_41_actInv5_3_0_sum_1 = (r_41_actInv5_3_0_sum_0 + r_41_actInv5_3_0_times_1);
  ap_fixed<32,8> r_41_actInv5_3_0_sum_2 = (r_41_actInv5_3_0_sum_1 + r_41_actInv5_3_0_times_2);
  ap_fixed<32,8> r_41_actInv5_3_0 = r_41_actInv5_3_0_sum_2;
  ap_fixed<32,8> r_41_actInv5_3_1_times_0 = (r_38_actInv3_3_1_0 * parent_a_gf_angular_3_0);
  ap_fixed<32,1> r_41_actInv5_3_1_times_1 = (r_38_actInv3_3_1_1 * parent_a_gf_angular_3_1);
  ap_fixed<32,7> r_41_actInv5_3_1_times_2 = (r_38_actInv3_3_1_2 * parent_a_gf_angular_3_2);
  ap_fixed<32,8> r_41_actInv5_3_1_sum_0 = r_41_actInv5_3_1_times_0;
  ap_fixed<32,8> r_41_actInv5_3_1_sum_1 = (r_41_actInv5_3_1_sum_0 + r_41_actInv5_3_1_times_1);
  ap_fixed<32,8> r_41_actInv5_3_1_sum_2 = (r_41_actInv5_3_1_sum_1 + r_41_actInv5_3_1_times_2);
  ap_fixed<32,8> r_41_actInv5_3_1 = r_41_actInv5_3_1_sum_2;
  ap_fixed<32,1> r_41_actInv5_3_2_times_0 = (r_38_actInv3_3_2_0 * parent_a_gf_angular_3_0);
  ap_fixed<32,8> r_41_actInv5_3_2_times_1 = (r_38_actInv3_3_2_1 * parent_a_gf_angular_3_1);
  ap_fixed<32,1> r_41_actInv5_3_2_times_2 = (r_38_actInv3_3_2_2 * parent_a_gf_angular_3_2);
  ap_fixed<32,1> r_41_actInv5_3_2_sum_0 = r_41_actInv5_3_2_times_0;
  ap_fixed<32,8> r_41_actInv5_3_2_sum_1 = (r_41_actInv5_3_2_sum_0 + r_41_actInv5_3_2_times_1);
  ap_fixed<32,8> r_41_actInv5_3_2_sum_2 = (r_41_actInv5_3_2_sum_1 + r_41_actInv5_3_2_times_2);
  ap_fixed<32,8> r_41_actInv5_3_2 = r_41_actInv5_3_2_sum_2;
  ap_fixed<32,8> r_42_act_inv_angular_3_2 = (new_a_gf2_angular_3_2 + r_41_actInv5_3_2);
  ap_fixed<32,9> r_42_act_inv_angular_3_1 = (new_a_gf2_angular_3_1 + r_41_actInv5_3_1);
  ap_fixed<32,9> r_42_act_inv_angular_3_0 = (new_a_gf2_angular_3_0 + r_41_actInv5_3_0);
  ap_fixed<32,8> new_a_gf_up3_3_5 = r_42_act_inv_angular_3_2;
  ap_fixed<32,9> new_a_gf_up3_3_4 = r_42_act_inv_angular_3_1;
  ap_fixed<32,9> new_a_gf_up3_3_3 = r_42_act_inv_angular_3_0;
  ap_fixed<32,7> new_a_gf_up3_3_2 = r_40_act_inv_linear_3_2;
  ap_fixed<32,8> new_a_gf_up3_3_1 = r_40_act_inv_linear_3_1;
  ap_fixed<32,8> new_a_gf_up3_3_0 = r_40_act_inv_linear_3_0;
  ap_fixed<32,2> h_linear_1_3_xTimes1 = (lever_3_1 * act_inv_angular_3_2);
  ap_fixed<32,1> h_linear_1_3_xTimes2 = (lever_3_2 * act_inv_angular_3_1);
  ap_fixed<32,3> h_linear_1_3_xMinus = (h_linear_1_3_xTimes1 - h_linear_1_3_xTimes2);
  ap_fixed<32,1> h_linear_1_3_yTimes1 = (lever_3_2 * act_inv_angular_3_0);
  ap_fixed<32,1> h_linear_1_3_yTimes2 = (lever_3_0 * act_inv_angular_3_2);
  ap_fixed<32,2> h_linear_1_3_yMinus = (h_linear_1_3_yTimes1 - h_linear_1_3_yTimes2);
  ap_fixed<32,2> h_linear_1_3_zTimes1 = (lever_3_0 * act_inv_angular_3_1);
  ap_fixed<32,3> h_linear_1_3_zTimes2 = (lever_3_1 * act_inv_angular_3_0);
  ap_fixed<32,3> h_linear_1_3_zMinus = (h_linear_1_3_zTimes1 - h_linear_1_3_zTimes2);
  ap_fixed<32,3> h_linear_1_3_0 = h_linear_1_3_xMinus;
  ap_fixed<32,2> h_linear_1_3_1 = h_linear_1_3_yMinus;
  ap_fixed<32,3> h_linear_1_3_2 = h_linear_1_3_zMinus;
  ap_fixed<32,4> h_linear_2_3_2 = (act_inv_linear_3_2 - h_linear_1_3_2);
  ap_fixed<32,4> h_linear_2_3_1 = (act_inv_linear_3_1 - h_linear_1_3_1);
  ap_fixed<32,4> h_linear_2_3_0 = (act_inv_linear_3_0 - h_linear_1_3_0);
  ap_fixed<32,6> h_linear_3_2 = (h_linear_2_3_2 * masses_3);
  ap_fixed<32,6> h_linear_3_1 = (h_linear_2_3_1 * masses_3);
  ap_fixed<32,6> h_linear_3_0 = (h_linear_2_3_0 * masses_3);
  ap_fixed<32,1> temp79 = (act_inv_angular_3_0 * inertia_3_0_0);
  ap_fixed<32,1> temp80 = (act_inv_angular_3_1 * inertia_3_0_1);
  ap_fixed<32,1> rhsMult1_temp_3 = (temp79 + temp80);
  ap_fixed<32,1> temp81 = (act_inv_angular_3_2 * inertia_3_0_2);
  ap_fixed<32,1> rhsMult1_3 = (rhsMult1_temp_3 + temp81);
  ap_fixed<32,1> temp82 = (act_inv_angular_3_0 * inertia_3_0_1);
  ap_fixed<32,1> temp83 = (act_inv_angular_3_1 * inertia_3_1_1);
  ap_fixed<32,1> rhsMult2_temp_3 = (temp82 + temp83);
  ap_fixed<32,1> temp84 = (act_inv_angular_3_2 * inertia_3_1_2);
  ap_fixed<32,1> rhsMult2_3 = (rhsMult2_temp_3 + temp84);
  ap_fixed<32,1> temp85 = (act_inv_angular_3_0 * inertia_3_0_2);
  ap_fixed<32,1> temp86 = (act_inv_angular_3_1 * inertia_3_1_2);
  ap_fixed<32,1> rhsMult3_temp_3 = (temp85 + temp86);
  ap_fixed<32,1> temp87 = (act_inv_angular_3_2 * inertia_3_2_2);
  ap_fixed<32,1> rhsMult3_3 = (rhsMult3_temp_3 + temp87);
  ap_fixed<32,1> rhsMult_3_2 = rhsMult3_3;
  ap_fixed<32,1> rhsMult_3_1 = rhsMult2_3;
  ap_fixed<32,1> rhsMult_3_0 = rhsMult1_3;
  ap_fixed<32,1> h_angular_first_3_2 = rhsMult_3_2;
  ap_fixed<32,1> h_angular_first_3_1 = rhsMult_3_1;
  ap_fixed<32,1> h_angular_first_3_0 = rhsMult_3_0;
  ap_fixed<32,3> h_angular_1_3_xTimes1 = (lever_3_1 * h_linear_3_2);
  ap_fixed<32,1> h_angular_1_3_xTimes2 = (lever_3_2 * h_linear_3_1);
  ap_fixed<32,3> h_angular_1_3_xMinus = (h_angular_1_3_xTimes1 - h_angular_1_3_xTimes2);
  ap_fixed<32,1> h_angular_1_3_yTimes1 = (lever_3_2 * h_linear_3_0);
  ap_fixed<32,2> h_angular_1_3_yTimes2 = (lever_3_0 * h_linear_3_2);
  ap_fixed<32,2> h_angular_1_3_yMinus = (h_angular_1_3_yTimes1 - h_angular_1_3_yTimes2);
  ap_fixed<32,2> h_angular_1_3_zTimes1 = (lever_3_0 * h_linear_3_1);
  ap_fixed<32,3> h_angular_1_3_zTimes2 = (lever_3_1 * h_linear_3_0);
  ap_fixed<32,3> h_angular_1_3_zMinus = (h_angular_1_3_zTimes1 - h_angular_1_3_zTimes2);
  ap_fixed<32,3> h_angular_1_3_0 = h_angular_1_3_xMinus;
  ap_fixed<32,2> h_angular_1_3_1 = h_angular_1_3_yMinus;
  ap_fixed<32,3> h_angular_1_3_2 = h_angular_1_3_zMinus;
  ap_fixed<32,3> h_angular_3_2 = (h_angular_first_3_2 + h_angular_1_3_2);
  ap_fixed<32,3> h_angular_3_1 = (h_angular_first_3_1 + h_angular_1_3_1);
  ap_fixed<32,3> h_angular_3_0 = (h_angular_first_3_0 + h_angular_1_3_0);
  ap_fixed<32,5> f_linear_1_3_xTimes1 = (lever_3_1 * r_42_act_inv_angular_3_2);
  ap_fixed<32,4> f_linear_1_3_xTimes2 = (lever_3_2 * r_42_act_inv_angular_3_1);
  ap_fixed<32,5> f_linear_1_3_xMinus = (f_linear_1_3_xTimes1 - f_linear_1_3_xTimes2);
  ap_fixed<32,4> f_linear_1_3_yTimes1 = (lever_3_2 * r_42_act_inv_angular_3_0);
  ap_fixed<32,4> f_linear_1_3_yTimes2 = (lever_3_0 * r_42_act_inv_angular_3_2);
  ap_fixed<32,5> f_linear_1_3_yMinus = (f_linear_1_3_yTimes1 - f_linear_1_3_yTimes2);
  ap_fixed<32,5> f_linear_1_3_zTimes1 = (lever_3_0 * r_42_act_inv_angular_3_1);
  ap_fixed<32,6> f_linear_1_3_zTimes2 = (lever_3_1 * r_42_act_inv_angular_3_0);
  ap_fixed<32,7> f_linear_1_3_zMinus = (f_linear_1_3_zTimes1 - f_linear_1_3_zTimes2);
  ap_fixed<32,5> f_linear_1_3_0 = f_linear_1_3_xMinus;
  ap_fixed<32,5> f_linear_1_3_1 = f_linear_1_3_yMinus;
  ap_fixed<32,7> f_linear_1_3_2 = f_linear_1_3_zMinus;
  ap_fixed<32,8> f_linear_2_3_2 = (r_40_act_inv_linear_3_2 - f_linear_1_3_2);
  ap_fixed<32,8> f_linear_2_3_1 = (r_40_act_inv_linear_3_1 - f_linear_1_3_1);
  ap_fixed<32,8> f_linear_2_3_0 = (r_40_act_inv_linear_3_0 - f_linear_1_3_0);
  ap_fixed<32,10> f_linear_3_3_2 = (f_linear_2_3_2 * masses_3);
  ap_fixed<32,10> f_linear_3_3_1 = (f_linear_2_3_1 * masses_3);
  ap_fixed<32,10> f_linear_3_3_0 = (f_linear_2_3_0 * masses_3);
  ap_fixed<32,4> temp88 = (r_42_act_inv_angular_3_0 * inertia_3_0_0);
  ap_fixed<32,2> temp89 = (r_42_act_inv_angular_3_1 * inertia_3_0_1);
  ap_fixed<32,4> r_43_rhsMult1_temp_3 = (temp88 + temp89);
  ap_fixed<32,1> temp90 = (r_42_act_inv_angular_3_2 * inertia_3_0_2);
  ap_fixed<32,4> r_44_rhsMult1_3 = (r_43_rhsMult1_temp_3 + temp90);
  ap_fixed<32,2> temp91 = (r_42_act_inv_angular_3_0 * inertia_3_0_1);
  ap_fixed<32,4> temp92 = (r_42_act_inv_angular_3_1 * inertia_3_1_1);
  ap_fixed<32,4> r_45_rhsMult2_temp_3 = (temp91 + temp92);
  ap_fixed<32,1> temp93 = (r_42_act_inv_angular_3_2 * inertia_3_1_2);
  ap_fixed<32,4> r_46_rhsMult2_3 = (r_45_rhsMult2_temp_3 + temp93);
  ap_fixed<32,1> temp94 = (r_42_act_inv_angular_3_0 * inertia_3_0_2);
  ap_fixed<32,2> temp95 = (r_42_act_inv_angular_3_1 * inertia_3_1_2);
  ap_fixed<32,3> r_47_rhsMult3_temp_3 = (temp94 + temp95);
  ap_fixed<32,3> temp96 = (r_42_act_inv_angular_3_2 * inertia_3_2_2);
  ap_fixed<32,4> r_48_rhsMult3_3 = (r_47_rhsMult3_temp_3 + temp96);
  ap_fixed<32,4> r_49_rhsMult_3_2 = r_48_rhsMult3_3;
  ap_fixed<32,4> r_49_rhsMult_3_1 = r_46_rhsMult2_3;
  ap_fixed<32,4> r_49_rhsMult_3_0 = r_44_rhsMult1_3;
  ap_fixed<32,4> f_angular_first_3_2 = r_49_rhsMult_3_2;
  ap_fixed<32,4> f_angular_first_3_1 = r_49_rhsMult_3_1;
  ap_fixed<32,4> f_angular_first_3_0 = r_49_rhsMult_3_0;
  ap_fixed<32,6> f_angular_1_3_xTimes1 = (lever_3_1 * f_linear_3_3_2);
  ap_fixed<32,5> f_angular_1_3_xTimes2 = (lever_3_2 * f_linear_3_3_1);
  ap_fixed<32,7> f_angular_1_3_xMinus = (f_angular_1_3_xTimes1 - f_angular_1_3_xTimes2);
  ap_fixed<32,5> f_angular_1_3_yTimes1 = (lever_3_2 * f_linear_3_3_0);
  ap_fixed<32,5> f_angular_1_3_yTimes2 = (lever_3_0 * f_linear_3_3_2);
  ap_fixed<32,6> f_angular_1_3_yMinus = (f_angular_1_3_yTimes1 - f_angular_1_3_yTimes2);
  ap_fixed<32,6> f_angular_1_3_zTimes1 = (lever_3_0 * f_linear_3_3_1);
  ap_fixed<32,7> f_angular_1_3_zTimes2 = (lever_3_1 * f_linear_3_3_0);
  ap_fixed<32,7> f_angular_1_3_zMinus = (f_angular_1_3_zTimes1 - f_angular_1_3_zTimes2);
  ap_fixed<32,7> f_angular_1_3_0 = f_angular_1_3_xMinus;
  ap_fixed<32,6> f_angular_1_3_1 = f_angular_1_3_yMinus;
  ap_fixed<32,7> f_angular_1_3_2 = f_angular_1_3_zMinus;
  ap_fixed<32,7> f_angular_2_3_2 = (f_angular_first_3_2 + f_angular_1_3_2);
  ap_fixed<32,6> f_angular_2_3_1 = (f_angular_first_3_1 + f_angular_1_3_1);
  ap_fixed<32,7> f_angular_2_3_0 = (f_angular_first_3_0 + f_angular_1_3_0);
  ap_fixed<32,11> f_linear_4_temp_3_xTimes1 = (act_inv_angular_3_1 * h_linear_3_2);
  ap_fixed<32,10> f_linear_4_temp_3_xTimes2 = (act_inv_angular_3_2 * h_linear_3_1);
  ap_fixed<32,11> f_linear_4_temp_3_xMinus = (f_linear_4_temp_3_xTimes1 - f_linear_4_temp_3_xTimes2);
  ap_fixed<32,10> f_linear_4_temp_3_yTimes1 = (act_inv_angular_3_2 * h_linear_3_0);
  ap_fixed<32,11> f_linear_4_temp_3_yTimes2 = (act_inv_angular_3_0 * h_linear_3_2);
  ap_fixed<32,11> f_linear_4_temp_3_yMinus = (f_linear_4_temp_3_yTimes1 - f_linear_4_temp_3_yTimes2);
  ap_fixed<32,10> f_linear_4_temp_3_zTimes1 = (act_inv_angular_3_0 * h_linear_3_1);
  ap_fixed<32,10> f_linear_4_temp_3_zTimes2 = (act_inv_angular_3_1 * h_linear_3_0);
  ap_fixed<32,11> f_linear_4_temp_3_zMinus = (f_linear_4_temp_3_zTimes1 - f_linear_4_temp_3_zTimes2);
  ap_fixed<32,11> f_linear_4_temp_3_0 = f_linear_4_temp_3_xMinus;
  ap_fixed<32,11> f_linear_4_temp_3_1 = f_linear_4_temp_3_yMinus;
  ap_fixed<32,11> f_linear_4_temp_3_2 = f_linear_4_temp_3_zMinus;
  ap_fixed<32,12> f_linear_4_3_2 = (f_linear_3_3_2 + f_linear_4_temp_3_2);
  ap_fixed<32,12> f_linear_4_3_1 = (f_linear_3_3_1 + f_linear_4_temp_3_1);
  ap_fixed<32,12> f_linear_4_3_0 = (f_linear_3_3_0 + f_linear_4_temp_3_0);
  ap_fixed<32,5> f_angular_3_temp_3_xTimes1 = (act_inv_angular_3_1 * h_angular_first_3_2);
  ap_fixed<32,5> f_angular_3_temp_3_xTimes2 = (act_inv_angular_3_2 * h_angular_first_3_1);
  ap_fixed<32,6> f_angular_3_temp_3_xMinus = (f_angular_3_temp_3_xTimes1 - f_angular_3_temp_3_xTimes2);
  ap_fixed<32,5> f_angular_3_temp_3_yTimes1 = (act_inv_angular_3_2 * h_angular_first_3_0);
  ap_fixed<32,5> f_angular_3_temp_3_yTimes2 = (act_inv_angular_3_0 * h_angular_first_3_2);
  ap_fixed<32,6> f_angular_3_temp_3_yMinus = (f_angular_3_temp_3_yTimes1 - f_angular_3_temp_3_yTimes2);
  ap_fixed<32,5> f_angular_3_temp_3_zTimes1 = (act_inv_angular_3_0 * h_angular_first_3_1);
  ap_fixed<32,5> f_angular_3_temp_3_zTimes2 = (act_inv_angular_3_1 * h_angular_first_3_0);
  ap_fixed<32,6> f_angular_3_temp_3_zMinus = (f_angular_3_temp_3_zTimes1 - f_angular_3_temp_3_zTimes2);
  ap_fixed<32,6> f_angular_3_temp_3_0 = f_angular_3_temp_3_xMinus;
  ap_fixed<32,6> f_angular_3_temp_3_1 = f_angular_3_temp_3_yMinus;
  ap_fixed<32,6> f_angular_3_temp_3_2 = f_angular_3_temp_3_zMinus;
  ap_fixed<32,8> f_angular_3_3_2 = (f_angular_2_3_2 + f_angular_3_temp_3_2);
  ap_fixed<32,7> f_angular_3_3_1 = (f_angular_2_3_1 + f_angular_3_temp_3_1);
  ap_fixed<32,8> f_angular_3_3_0 = (f_angular_2_3_0 + f_angular_3_temp_3_0);
  ap_fixed<32,8> f_angular_4_temp_3_xTimes1 = (act_inv_linear_3_1 * h_linear_3_2);
  ap_fixed<32,8> f_angular_4_temp_3_xTimes2 = (act_inv_linear_3_2 * h_linear_3_1);
  ap_fixed<32,9> f_angular_4_temp_3_xMinus = (f_angular_4_temp_3_xTimes1 - f_angular_4_temp_3_xTimes2);
  ap_fixed<32,8> f_angular_4_temp_3_yTimes1 = (act_inv_linear_3_2 * h_linear_3_0);
  ap_fixed<32,8> f_angular_4_temp_3_yTimes2 = (act_inv_linear_3_0 * h_linear_3_2);
  ap_fixed<32,9> f_angular_4_temp_3_yMinus = (f_angular_4_temp_3_yTimes1 - f_angular_4_temp_3_yTimes2);
  ap_fixed<32,8> f_angular_4_temp_3_zTimes1 = (act_inv_linear_3_0 * h_linear_3_1);
  ap_fixed<32,8> f_angular_4_temp_3_zTimes2 = (act_inv_linear_3_1 * h_linear_3_0);
  ap_fixed<32,9> f_angular_4_temp_3_zMinus = (f_angular_4_temp_3_zTimes1 - f_angular_4_temp_3_zTimes2);
  ap_fixed<32,9> f_angular_4_temp_3_0 = f_angular_4_temp_3_xMinus;
  ap_fixed<32,9> f_angular_4_temp_3_1 = f_angular_4_temp_3_yMinus;
  ap_fixed<32,9> f_angular_4_temp_3_2 = f_angular_4_temp_3_zMinus;
  ap_fixed<32,9> f_angular_4_3_2 = (f_angular_3_3_2 + f_angular_4_temp_3_2);
  ap_fixed<32,9> f_angular_4_3_1 = (f_angular_3_3_1 + f_angular_4_temp_3_1);
  ap_fixed<32,9> f_angular_4_3_0 = (f_angular_3_3_0 + f_angular_4_temp_3_0);
  ap_fixed<32,3> h_rnea_firstpass3_5 = h_angular_3_2;
  ap_fixed<32,3> h_rnea_firstpass3_4 = h_angular_3_1;
  ap_fixed<32,3> h_rnea_firstpass3_3 = h_angular_3_0;
  ap_fixed<32,6> h_rnea_firstpass3_2 = h_linear_3_2;
  ap_fixed<32,6> h_rnea_firstpass3_1 = h_linear_3_1;
  ap_fixed<32,6> h_rnea_firstpass3_0 = h_linear_3_0;
  ap_fixed<32,9> f_rnea_firstpass3_5 = f_angular_4_3_2;
  ap_fixed<32,9> f_rnea_firstpass3_4 = f_angular_4_3_1;
  ap_fixed<32,9> f_rnea_firstpass3_3 = f_angular_4_3_0;
  ap_fixed<32,12> f_rnea_firstpass3_2 = f_linear_4_3_2;
  ap_fixed<32,12> f_rnea_firstpass3_1 = f_linear_4_3_1;
  ap_fixed<32,12> f_rnea_firstpass3_0 = f_linear_4_3_0;
  ap_fixed<32,5> new_v_3_5 = act_inv_angular_3_2;
  ap_fixed<32,6> new_v_3_4 = act_inv_angular_3_1;
  ap_fixed<32,6> new_v_3_3 = act_inv_angular_3_0;
  ap_fixed<32,3> new_v_3_2 = act_inv_linear_3_2;
  ap_fixed<32,3> new_v_3_1 = act_inv_linear_3_1;
  ap_fixed<32,3> new_v_3_0 = act_inv_linear_3_0;
  ap_fixed<32,2> rotation_matrix_4_2_2 = 1.0;
  ap_fixed<32,1> rotation_matrix_4_2_1 = 0.0;
  ap_fixed<32,1> rotation_matrix_4_2_0 = 0.0;
  ap_fixed<32,1> rotation_matrix_4_1_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_4_1_1 = qcos_4;
  ap_fixed<32,2> rotation_matrix_4_1_0 = qsin_4;
  ap_fixed<32,1> rotation_matrix_4_0_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_4_0_1 = -(qsin_4);
  ap_fixed<32,2> rotation_matrix_4_0_0 = qcos_4;
  ap_fixed<32,1> limi_rotation_4_2_2 = 0.0;
  ap_fixed<32,2> limi_rotation_4_2_1 = -(rotation_matrix_4_1_1);
  ap_fixed<32,2> limi_rotation_4_2_0 = -(rotation_matrix_4_1_0);
  ap_fixed<32,2> limi_rotation_4_1_2 = 1.0;
  ap_fixed<32,1> limi_rotation_4_1_1 = 0.0;
  ap_fixed<32,1> limi_rotation_4_1_0 = 0.0;
  ap_fixed<32,1> limi_rotation_4_0_2 = 0.0;
  ap_fixed<32,2> limi_rotation_4_0_1 = rotation_matrix_4_0_1;
  ap_fixed<32,2> limi_rotation_4_0_0 = rotation_matrix_4_0_0;
  ap_fixed<32,1> v_linear_4_2 = data_v_4_2;
  ap_fixed<32,1> v_linear_4_1 = data_v_4_1;
  ap_fixed<32,1> v_linear_4_0 = data_v_4_0;
  ap_fixed<32,4> v_angular_4_2 = v_4;
  ap_fixed<32,1> v_angular_4_1 = data_v_4_4;
  ap_fixed<32,1> v_angular_4_0 = data_v_4_3;
  ap_fixed<32,3> parent_v_linear_4_2 = new_v_3_2;
  ap_fixed<32,3> parent_v_linear_4_1 = new_v_3_1;
  ap_fixed<32,3> parent_v_linear_4_0 = new_v_3_0;
  ap_fixed<32,5> parent_v_angular_4_2 = new_v_3_5;
  ap_fixed<32,6> parent_v_angular_4_1 = new_v_3_4;
  ap_fixed<32,6> parent_v_angular_4_0 = new_v_3_3;
  ap_fixed<32,7> parent_a_gf_linear_4_2 = new_a_gf_up3_3_2;
  ap_fixed<32,8> parent_a_gf_linear_4_1 = new_a_gf_up3_3_1;
  ap_fixed<32,8> parent_a_gf_linear_4_0 = new_a_gf_up3_3_0;
  ap_fixed<32,8> parent_a_gf_angular_4_2 = new_a_gf_up3_3_5;
  ap_fixed<32,9> parent_a_gf_angular_4_1 = new_a_gf_up3_3_4;
  ap_fixed<32,9> parent_a_gf_angular_4_0 = new_a_gf_up3_3_3;
  ap_fixed<32,4> actInv1_4_xTimes1 = (limi_translation_4_1 * parent_v_angular_4_2);
  ap_fixed<32,1> actInv1_4_xTimes2 = (limi_translation_4_2 * parent_v_angular_4_1);
  ap_fixed<32,4> actInv1_4_xMinus = (actInv1_4_xTimes1 - actInv1_4_xTimes2);
  ap_fixed<32,1> actInv1_4_yTimes1 = (limi_translation_4_2 * parent_v_angular_4_0);
  ap_fixed<32,2> actInv1_4_yTimes2 = (limi_translation_4_0 * parent_v_angular_4_2);
  ap_fixed<32,2> actInv1_4_yMinus = (actInv1_4_yTimes1 - actInv1_4_yTimes2);
  ap_fixed<32,2> actInv1_4_zTimes1 = (limi_translation_4_0 * parent_v_angular_4_1);
  ap_fixed<32,4> actInv1_4_zTimes2 = (limi_translation_4_1 * parent_v_angular_4_0);
  ap_fixed<32,5> actInv1_4_zMinus = (actInv1_4_zTimes1 - actInv1_4_zTimes2);
  ap_fixed<32,4> actInv1_4_0 = actInv1_4_xMinus;
  ap_fixed<32,2> actInv1_4_1 = actInv1_4_yMinus;
  ap_fixed<32,5> actInv1_4_2 = actInv1_4_zMinus;
  ap_fixed<32,5> actInv2_4_2 = (parent_v_linear_4_2 - actInv1_4_2);
  ap_fixed<32,4> actInv2_4_1 = (parent_v_linear_4_1 - actInv1_4_1);
  ap_fixed<32,5> actInv2_4_0 = (parent_v_linear_4_0 - actInv1_4_0);
  ap_fixed<32,1> actInv3_4_2_2 = limi_rotation_4_2_2;
  ap_fixed<32,2> actInv3_4_1_2 = limi_rotation_4_2_1;
  ap_fixed<32,2> actInv3_4_0_2 = limi_rotation_4_2_0;
  ap_fixed<32,2> actInv3_4_2_1 = limi_rotation_4_1_2;
  ap_fixed<32,1> actInv3_4_1_1 = limi_rotation_4_1_1;
  ap_fixed<32,1> actInv3_4_0_1 = limi_rotation_4_1_0;
  ap_fixed<32,1> actInv3_4_2_0 = limi_rotation_4_0_2;
  ap_fixed<32,2> actInv3_4_1_0 = limi_rotation_4_0_1;
  ap_fixed<32,2> actInv3_4_0_0 = limi_rotation_4_0_0;
  ap_fixed<32,5> actInv4_4_0_times_0 = (actInv3_4_0_0 * actInv2_4_0);
  ap_fixed<32,1> actInv4_4_0_times_1 = (actInv3_4_0_1 * actInv2_4_1);
  ap_fixed<32,5> actInv4_4_0_times_2 = (actInv3_4_0_2 * actInv2_4_2);
  ap_fixed<32,5> actInv4_4_0_sum_0 = actInv4_4_0_times_0;
  ap_fixed<32,5> actInv4_4_0_sum_1 = (actInv4_4_0_sum_0 + actInv4_4_0_times_1);
  ap_fixed<32,6> actInv4_4_0_sum_2 = (actInv4_4_0_sum_1 + actInv4_4_0_times_2);
  ap_fixed<32,6> actInv4_4_0 = actInv4_4_0_sum_2;
  ap_fixed<32,5> actInv4_4_1_times_0 = (actInv3_4_1_0 * actInv2_4_0);
  ap_fixed<32,1> actInv4_4_1_times_1 = (actInv3_4_1_1 * actInv2_4_1);
  ap_fixed<32,5> actInv4_4_1_times_2 = (actInv3_4_1_2 * actInv2_4_2);
  ap_fixed<32,5> actInv4_4_1_sum_0 = actInv4_4_1_times_0;
  ap_fixed<32,5> actInv4_4_1_sum_1 = (actInv4_4_1_sum_0 + actInv4_4_1_times_1);
  ap_fixed<32,6> actInv4_4_1_sum_2 = (actInv4_4_1_sum_1 + actInv4_4_1_times_2);
  ap_fixed<32,6> actInv4_4_1 = actInv4_4_1_sum_2;
  ap_fixed<32,1> actInv4_4_2_times_0 = (actInv3_4_2_0 * actInv2_4_0);
  ap_fixed<32,4> actInv4_4_2_times_1 = (actInv3_4_2_1 * actInv2_4_1);
  ap_fixed<32,1> actInv4_4_2_times_2 = (actInv3_4_2_2 * actInv2_4_2);
  ap_fixed<32,1> actInv4_4_2_sum_0 = actInv4_4_2_times_0;
  ap_fixed<32,4> actInv4_4_2_sum_1 = (actInv4_4_2_sum_0 + actInv4_4_2_times_1);
  ap_fixed<32,4> actInv4_4_2_sum_2 = (actInv4_4_2_sum_1 + actInv4_4_2_times_2);
  ap_fixed<32,4> actInv4_4_2 = actInv4_4_2_sum_2;
  ap_fixed<32,4> act_inv_linear_4_2 = (v_linear_4_2 + actInv4_4_2);
  ap_fixed<32,6> act_inv_linear_4_1 = (v_linear_4_1 + actInv4_4_1);
  ap_fixed<32,6> act_inv_linear_4_0 = (v_linear_4_0 + actInv4_4_0);
  ap_fixed<32,6> actInv5_4_0_times_0 = (actInv3_4_0_0 * parent_v_angular_4_0);
  ap_fixed<32,1> actInv5_4_0_times_1 = (actInv3_4_0_1 * parent_v_angular_4_1);
  ap_fixed<32,5> actInv5_4_0_times_2 = (actInv3_4_0_2 * parent_v_angular_4_2);
  ap_fixed<32,6> actInv5_4_0_sum_0 = actInv5_4_0_times_0;
  ap_fixed<32,6> actInv5_4_0_sum_1 = (actInv5_4_0_sum_0 + actInv5_4_0_times_1);
  ap_fixed<32,7> actInv5_4_0_sum_2 = (actInv5_4_0_sum_1 + actInv5_4_0_times_2);
  ap_fixed<32,7> actInv5_4_0 = actInv5_4_0_sum_2;
  ap_fixed<32,6> actInv5_4_1_times_0 = (actInv3_4_1_0 * parent_v_angular_4_0);
  ap_fixed<32,1> actInv5_4_1_times_1 = (actInv3_4_1_1 * parent_v_angular_4_1);
  ap_fixed<32,5> actInv5_4_1_times_2 = (actInv3_4_1_2 * parent_v_angular_4_2);
  ap_fixed<32,6> actInv5_4_1_sum_0 = actInv5_4_1_times_0;
  ap_fixed<32,6> actInv5_4_1_sum_1 = (actInv5_4_1_sum_0 + actInv5_4_1_times_1);
  ap_fixed<32,7> actInv5_4_1_sum_2 = (actInv5_4_1_sum_1 + actInv5_4_1_times_2);
  ap_fixed<32,7> actInv5_4_1 = actInv5_4_1_sum_2;
  ap_fixed<32,1> actInv5_4_2_times_0 = (actInv3_4_2_0 * parent_v_angular_4_0);
  ap_fixed<32,6> actInv5_4_2_times_1 = (actInv3_4_2_1 * parent_v_angular_4_1);
  ap_fixed<32,1> actInv5_4_2_times_2 = (actInv3_4_2_2 * parent_v_angular_4_2);
  ap_fixed<32,1> actInv5_4_2_sum_0 = actInv5_4_2_times_0;
  ap_fixed<32,6> actInv5_4_2_sum_1 = (actInv5_4_2_sum_0 + actInv5_4_2_times_1);
  ap_fixed<32,6> actInv5_4_2_sum_2 = (actInv5_4_2_sum_1 + actInv5_4_2_times_2);
  ap_fixed<32,6> actInv5_4_2 = actInv5_4_2_sum_2;
  ap_fixed<32,6> act_inv_angular_4_2 = (v_angular_4_2 + actInv5_4_2);
  ap_fixed<32,7> act_inv_angular_4_1 = (v_angular_4_1 + actInv5_4_1);
  ap_fixed<32,7> act_inv_angular_4_0 = (v_angular_4_0 + actInv5_4_0);
  ap_fixed<32,4> minus_m_w_4 = v_4;
  ap_fixed<32,4> temp98 = -(minus_m_w_4);
  ap_fixed<32,4> temp97 = -(temp98);
  ap_fixed<32,8> alpha_cross1_linear_4 = (temp97 * act_inv_linear_4_1);
  ap_fixed<32,4> temp99 = -(minus_m_w_4);
  ap_fixed<32,8> alpha_cross2_linear_4 = (temp99 * act_inv_linear_4_0);
  ap_fixed<32,1> alpha_cross_linear_4_2 = 0.0;
  ap_fixed<32,8> alpha_cross_linear_4_1 = alpha_cross2_linear_4;
  ap_fixed<32,8> alpha_cross_linear_4_0 = alpha_cross1_linear_4;
  ap_fixed<32,4> temp101 = -(minus_m_w_4);
  ap_fixed<32,4> temp100 = -(temp101);
  ap_fixed<32,9> alpha_cross1_angular_4 = (temp100 * act_inv_angular_4_1);
  ap_fixed<32,4> temp102 = -(minus_m_w_4);
  ap_fixed<32,9> alpha_cross2_angular_4 = (temp102 * act_inv_angular_4_0);
  ap_fixed<32,1> alpha_cross_angular_4_2 = 0.0;
  ap_fixed<32,9> alpha_cross_angular_4_1 = alpha_cross2_angular_4;
  ap_fixed<32,9> alpha_cross_angular_4_0 = alpha_cross1_angular_4;
  ap_fixed<32,1> new_a_gf_4_5 = alpha_cross_angular_4_2;
  ap_fixed<32,9> new_a_gf_4_4 = alpha_cross_angular_4_1;
  ap_fixed<32,9> new_a_gf_4_3 = alpha_cross_angular_4_0;
  ap_fixed<32,1> new_a_gf_4_2 = alpha_cross_linear_4_2;
  ap_fixed<32,8> new_a_gf_4_1 = alpha_cross_linear_4_1;
  ap_fixed<32,8> new_a_gf_4_0 = alpha_cross_linear_4_0;
  ap_fixed<32,4> new_a_gf_up1_4 = (a_4 + new_a_gf_4_5);
  ap_fixed<32,1> new_a_gf2_linear_4_2 = new_a_gf_4_2;
  ap_fixed<32,8> new_a_gf2_linear_4_1 = new_a_gf_4_1;
  ap_fixed<32,8> new_a_gf2_linear_4_0 = new_a_gf_4_0;
  ap_fixed<32,4> new_a_gf2_angular_4_2 = new_a_gf_up1_4;
  ap_fixed<32,9> new_a_gf2_angular_4_1 = new_a_gf_4_4;
  ap_fixed<32,9> new_a_gf2_angular_4_0 = new_a_gf_4_3;
  ap_fixed<32,7> r_50_actInv1_4_xTimes1 = (limi_translation_4_1 * parent_a_gf_angular_4_2);
  ap_fixed<32,1> r_50_actInv1_4_xTimes2 = (limi_translation_4_2 * parent_a_gf_angular_4_1);
  ap_fixed<32,7> r_50_actInv1_4_xMinus = (r_50_actInv1_4_xTimes1 - r_50_actInv1_4_xTimes2);
  ap_fixed<32,1> r_50_actInv1_4_yTimes1 = (limi_translation_4_2 * parent_a_gf_angular_4_0);
  ap_fixed<32,4> r_50_actInv1_4_yTimes2 = (limi_translation_4_0 * parent_a_gf_angular_4_2);
  ap_fixed<32,4> r_50_actInv1_4_yMinus = (r_50_actInv1_4_yTimes1 - r_50_actInv1_4_yTimes2);
  ap_fixed<32,6> r_50_actInv1_4_zTimes1 = (limi_translation_4_0 * parent_a_gf_angular_4_1);
  ap_fixed<32,8> r_50_actInv1_4_zTimes2 = (limi_translation_4_1 * parent_a_gf_angular_4_0);
  ap_fixed<32,8> r_50_actInv1_4_zMinus = (r_50_actInv1_4_zTimes1 - r_50_actInv1_4_zTimes2);
  ap_fixed<32,7> r_50_actInv1_4_0 = r_50_actInv1_4_xMinus;
  ap_fixed<32,4> r_50_actInv1_4_1 = r_50_actInv1_4_yMinus;
  ap_fixed<32,8> r_50_actInv1_4_2 = r_50_actInv1_4_zMinus;
  ap_fixed<32,9> r_51_actInv2_4_2 = (parent_a_gf_linear_4_2 - r_50_actInv1_4_2);
  ap_fixed<32,8> r_51_actInv2_4_1 = (parent_a_gf_linear_4_1 - r_50_actInv1_4_1);
  ap_fixed<32,8> r_51_actInv2_4_0 = (parent_a_gf_linear_4_0 - r_50_actInv1_4_0);
  ap_fixed<32,1> r_52_actInv3_4_2_2 = limi_rotation_4_2_2;
  ap_fixed<32,2> r_52_actInv3_4_1_2 = limi_rotation_4_2_1;
  ap_fixed<32,2> r_52_actInv3_4_0_2 = limi_rotation_4_2_0;
  ap_fixed<32,2> r_52_actInv3_4_2_1 = limi_rotation_4_1_2;
  ap_fixed<32,1> r_52_actInv3_4_1_1 = limi_rotation_4_1_1;
  ap_fixed<32,1> r_52_actInv3_4_0_1 = limi_rotation_4_1_0;
  ap_fixed<32,1> r_52_actInv3_4_2_0 = limi_rotation_4_0_2;
  ap_fixed<32,2> r_52_actInv3_4_1_0 = limi_rotation_4_0_1;
  ap_fixed<32,2> r_52_actInv3_4_0_0 = limi_rotation_4_0_0;
  ap_fixed<32,8> r_53_actInv4_4_0_times_0 = (r_52_actInv3_4_0_0 * r_51_actInv2_4_0);
  ap_fixed<32,1> r_53_actInv4_4_0_times_1 = (r_52_actInv3_4_0_1 * r_51_actInv2_4_1);
  ap_fixed<32,9> r_53_actInv4_4_0_times_2 = (r_52_actInv3_4_0_2 * r_51_actInv2_4_2);
  ap_fixed<32,8> r_53_actInv4_4_0_sum_0 = r_53_actInv4_4_0_times_0;
  ap_fixed<32,8> r_53_actInv4_4_0_sum_1 = (r_53_actInv4_4_0_sum_0 + r_53_actInv4_4_0_times_1);
  ap_fixed<32,9> r_53_actInv4_4_0_sum_2 = (r_53_actInv4_4_0_sum_1 + r_53_actInv4_4_0_times_2);
  ap_fixed<32,9> r_53_actInv4_4_0 = r_53_actInv4_4_0_sum_2;
  ap_fixed<32,8> r_53_actInv4_4_1_times_0 = (r_52_actInv3_4_1_0 * r_51_actInv2_4_0);
  ap_fixed<32,1> r_53_actInv4_4_1_times_1 = (r_52_actInv3_4_1_1 * r_51_actInv2_4_1);
  ap_fixed<32,9> r_53_actInv4_4_1_times_2 = (r_52_actInv3_4_1_2 * r_51_actInv2_4_2);
  ap_fixed<32,8> r_53_actInv4_4_1_sum_0 = r_53_actInv4_4_1_times_0;
  ap_fixed<32,8> r_53_actInv4_4_1_sum_1 = (r_53_actInv4_4_1_sum_0 + r_53_actInv4_4_1_times_1);
  ap_fixed<32,9> r_53_actInv4_4_1_sum_2 = (r_53_actInv4_4_1_sum_1 + r_53_actInv4_4_1_times_2);
  ap_fixed<32,9> r_53_actInv4_4_1 = r_53_actInv4_4_1_sum_2;
  ap_fixed<32,1> r_53_actInv4_4_2_times_0 = (r_52_actInv3_4_2_0 * r_51_actInv2_4_0);
  ap_fixed<32,8> r_53_actInv4_4_2_times_1 = (r_52_actInv3_4_2_1 * r_51_actInv2_4_1);
  ap_fixed<32,1> r_53_actInv4_4_2_times_2 = (r_52_actInv3_4_2_2 * r_51_actInv2_4_2);
  ap_fixed<32,1> r_53_actInv4_4_2_sum_0 = r_53_actInv4_4_2_times_0;
  ap_fixed<32,8> r_53_actInv4_4_2_sum_1 = (r_53_actInv4_4_2_sum_0 + r_53_actInv4_4_2_times_1);
  ap_fixed<32,8> r_53_actInv4_4_2_sum_2 = (r_53_actInv4_4_2_sum_1 + r_53_actInv4_4_2_times_2);
  ap_fixed<32,8> r_53_actInv4_4_2 = r_53_actInv4_4_2_sum_2;
  ap_fixed<32,8> r_54_act_inv_linear_4_2 = (new_a_gf2_linear_4_2 + r_53_actInv4_4_2);
  ap_fixed<32,10> r_54_act_inv_linear_4_1 = (new_a_gf2_linear_4_1 + r_53_actInv4_4_1);
  ap_fixed<32,10> r_54_act_inv_linear_4_0 = (new_a_gf2_linear_4_0 + r_53_actInv4_4_0);
  ap_fixed<32,9> r_55_actInv5_4_0_times_0 = (r_52_actInv3_4_0_0 * parent_a_gf_angular_4_0);
  ap_fixed<32,1> r_55_actInv5_4_0_times_1 = (r_52_actInv3_4_0_1 * parent_a_gf_angular_4_1);
  ap_fixed<32,8> r_55_actInv5_4_0_times_2 = (r_52_actInv3_4_0_2 * parent_a_gf_angular_4_2);
  ap_fixed<32,9> r_55_actInv5_4_0_sum_0 = r_55_actInv5_4_0_times_0;
  ap_fixed<32,9> r_55_actInv5_4_0_sum_1 = (r_55_actInv5_4_0_sum_0 + r_55_actInv5_4_0_times_1);
  ap_fixed<32,10> r_55_actInv5_4_0_sum_2 = (r_55_actInv5_4_0_sum_1 + r_55_actInv5_4_0_times_2);
  ap_fixed<32,10> r_55_actInv5_4_0 = r_55_actInv5_4_0_sum_2;
  ap_fixed<32,9> r_55_actInv5_4_1_times_0 = (r_52_actInv3_4_1_0 * parent_a_gf_angular_4_0);
  ap_fixed<32,1> r_55_actInv5_4_1_times_1 = (r_52_actInv3_4_1_1 * parent_a_gf_angular_4_1);
  ap_fixed<32,8> r_55_actInv5_4_1_times_2 = (r_52_actInv3_4_1_2 * parent_a_gf_angular_4_2);
  ap_fixed<32,9> r_55_actInv5_4_1_sum_0 = r_55_actInv5_4_1_times_0;
  ap_fixed<32,9> r_55_actInv5_4_1_sum_1 = (r_55_actInv5_4_1_sum_0 + r_55_actInv5_4_1_times_1);
  ap_fixed<32,10> r_55_actInv5_4_1_sum_2 = (r_55_actInv5_4_1_sum_1 + r_55_actInv5_4_1_times_2);
  ap_fixed<32,10> r_55_actInv5_4_1 = r_55_actInv5_4_1_sum_2;
  ap_fixed<32,1> r_55_actInv5_4_2_times_0 = (r_52_actInv3_4_2_0 * parent_a_gf_angular_4_0);
  ap_fixed<32,9> r_55_actInv5_4_2_times_1 = (r_52_actInv3_4_2_1 * parent_a_gf_angular_4_1);
  ap_fixed<32,1> r_55_actInv5_4_2_times_2 = (r_52_actInv3_4_2_2 * parent_a_gf_angular_4_2);
  ap_fixed<32,1> r_55_actInv5_4_2_sum_0 = r_55_actInv5_4_2_times_0;
  ap_fixed<32,9> r_55_actInv5_4_2_sum_1 = (r_55_actInv5_4_2_sum_0 + r_55_actInv5_4_2_times_1);
  ap_fixed<32,9> r_55_actInv5_4_2_sum_2 = (r_55_actInv5_4_2_sum_1 + r_55_actInv5_4_2_times_2);
  ap_fixed<32,9> r_55_actInv5_4_2 = r_55_actInv5_4_2_sum_2;
  ap_fixed<32,9> r_56_act_inv_angular_4_2 = (new_a_gf2_angular_4_2 + r_55_actInv5_4_2);
  ap_fixed<32,10> r_56_act_inv_angular_4_1 = (new_a_gf2_angular_4_1 + r_55_actInv5_4_1);
  ap_fixed<32,10> r_56_act_inv_angular_4_0 = (new_a_gf2_angular_4_0 + r_55_actInv5_4_0);
  ap_fixed<32,9> new_a_gf_up3_4_5 = r_56_act_inv_angular_4_2;
  ap_fixed<32,10> new_a_gf_up3_4_4 = r_56_act_inv_angular_4_1;
  ap_fixed<32,10> new_a_gf_up3_4_3 = r_56_act_inv_angular_4_0;
  ap_fixed<32,8> new_a_gf_up3_4_2 = r_54_act_inv_linear_4_2;
  ap_fixed<32,10> new_a_gf_up3_4_1 = r_54_act_inv_linear_4_1;
  ap_fixed<32,10> new_a_gf_up3_4_0 = r_54_act_inv_linear_4_0;
  ap_fixed<32,2> h_linear_1_4_xTimes1 = (lever_4_1 * act_inv_angular_4_2);
  ap_fixed<32,2> h_linear_1_4_xTimes2 = (lever_4_2 * act_inv_angular_4_1);
  ap_fixed<32,3> h_linear_1_4_xMinus = (h_linear_1_4_xTimes1 - h_linear_1_4_xTimes2);
  ap_fixed<32,2> h_linear_1_4_yTimes1 = (lever_4_2 * act_inv_angular_4_0);
  ap_fixed<32,1> h_linear_1_4_yTimes2 = (lever_4_0 * act_inv_angular_4_2);
  ap_fixed<32,2> h_linear_1_4_yMinus = (h_linear_1_4_yTimes1 - h_linear_1_4_yTimes2);
  ap_fixed<32,1> h_linear_1_4_zTimes1 = (lever_4_0 * act_inv_angular_4_1);
  ap_fixed<32,2> h_linear_1_4_zTimes2 = (lever_4_1 * act_inv_angular_4_0);
  ap_fixed<32,2> h_linear_1_4_zMinus = (h_linear_1_4_zTimes1 - h_linear_1_4_zTimes2);
  ap_fixed<32,3> h_linear_1_4_0 = h_linear_1_4_xMinus;
  ap_fixed<32,2> h_linear_1_4_1 = h_linear_1_4_yMinus;
  ap_fixed<32,2> h_linear_1_4_2 = h_linear_1_4_zMinus;
  ap_fixed<32,4> h_linear_2_4_2 = (act_inv_linear_4_2 - h_linear_1_4_2);
  ap_fixed<32,6> h_linear_2_4_1 = (act_inv_linear_4_1 - h_linear_1_4_1);
  ap_fixed<32,6> h_linear_2_4_0 = (act_inv_linear_4_0 - h_linear_1_4_0);
  ap_fixed<32,5> h_linear_4_2 = (h_linear_2_4_2 * masses_4);
  ap_fixed<32,6> h_linear_4_1 = (h_linear_2_4_1 * masses_4);
  ap_fixed<32,6> h_linear_4_0 = (h_linear_2_4_0 * masses_4);
  ap_fixed<32,2> temp103 = (act_inv_angular_4_0 * inertia_4_0_0);
  ap_fixed<32,1> temp104 = (act_inv_angular_4_1 * inertia_4_0_1);
  ap_fixed<32,2> rhsMult1_temp_4 = (temp103 + temp104);
  ap_fixed<32,1> temp105 = (act_inv_angular_4_2 * inertia_4_0_2);
  ap_fixed<32,2> rhsMult1_4 = (rhsMult1_temp_4 + temp105);
  ap_fixed<32,1> temp106 = (act_inv_angular_4_0 * inertia_4_0_1);
  ap_fixed<32,2> temp107 = (act_inv_angular_4_1 * inertia_4_1_1);
  ap_fixed<32,2> rhsMult2_temp_4 = (temp106 + temp107);
  ap_fixed<32,1> temp108 = (act_inv_angular_4_2 * inertia_4_1_2);
  ap_fixed<32,2> rhsMult2_4 = (rhsMult2_temp_4 + temp108);
  ap_fixed<32,1> temp109 = (act_inv_angular_4_0 * inertia_4_0_2);
  ap_fixed<32,1> temp110 = (act_inv_angular_4_1 * inertia_4_1_2);
  ap_fixed<32,1> rhsMult3_temp_4 = (temp109 + temp110);
  ap_fixed<32,1> temp111 = (act_inv_angular_4_2 * inertia_4_2_2);
  ap_fixed<32,1> rhsMult3_4 = (rhsMult3_temp_4 + temp111);
  ap_fixed<32,1> rhsMult_4_2 = rhsMult3_4;
  ap_fixed<32,2> rhsMult_4_1 = rhsMult2_4;
  ap_fixed<32,2> rhsMult_4_0 = rhsMult1_4;
  ap_fixed<32,1> h_angular_first_4_2 = rhsMult_4_2;
  ap_fixed<32,2> h_angular_first_4_1 = rhsMult_4_1;
  ap_fixed<32,2> h_angular_first_4_0 = rhsMult_4_0;
  ap_fixed<32,1> h_angular_1_4_xTimes1 = (lever_4_1 * h_linear_4_2);
  ap_fixed<32,2> h_angular_1_4_xTimes2 = (lever_4_2 * h_linear_4_1);
  ap_fixed<32,2> h_angular_1_4_xMinus = (h_angular_1_4_xTimes1 - h_angular_1_4_xTimes2);
  ap_fixed<32,2> h_angular_1_4_yTimes1 = (lever_4_2 * h_linear_4_0);
  ap_fixed<32,1> h_angular_1_4_yTimes2 = (lever_4_0 * h_linear_4_2);
  ap_fixed<32,2> h_angular_1_4_yMinus = (h_angular_1_4_yTimes1 - h_angular_1_4_yTimes2);
  ap_fixed<32,1> h_angular_1_4_zTimes1 = (lever_4_0 * h_linear_4_1);
  ap_fixed<32,2> h_angular_1_4_zTimes2 = (lever_4_1 * h_linear_4_0);
  ap_fixed<32,2> h_angular_1_4_zMinus = (h_angular_1_4_zTimes1 - h_angular_1_4_zTimes2);
  ap_fixed<32,2> h_angular_1_4_0 = h_angular_1_4_xMinus;
  ap_fixed<32,2> h_angular_1_4_1 = h_angular_1_4_yMinus;
  ap_fixed<32,2> h_angular_1_4_2 = h_angular_1_4_zMinus;
  ap_fixed<32,3> h_angular_4_2 = (h_angular_first_4_2 + h_angular_1_4_2);
  ap_fixed<32,3> h_angular_4_1 = (h_angular_first_4_1 + h_angular_1_4_1);
  ap_fixed<32,3> h_angular_4_0 = (h_angular_first_4_0 + h_angular_1_4_0);
  ap_fixed<32,5> f_linear_1_4_xTimes1 = (lever_4_1 * r_56_act_inv_angular_4_2);
  ap_fixed<32,6> f_linear_1_4_xTimes2 = (lever_4_2 * r_56_act_inv_angular_4_1);
  ap_fixed<32,6> f_linear_1_4_xMinus = (f_linear_1_4_xTimes1 - f_linear_1_4_xTimes2);
  ap_fixed<32,6> f_linear_1_4_yTimes1 = (lever_4_2 * r_56_act_inv_angular_4_0);
  ap_fixed<32,3> f_linear_1_4_yTimes2 = (lever_4_0 * r_56_act_inv_angular_4_2);
  ap_fixed<32,6> f_linear_1_4_yMinus = (f_linear_1_4_yTimes1 - f_linear_1_4_yTimes2);
  ap_fixed<32,4> f_linear_1_4_zTimes1 = (lever_4_0 * r_56_act_inv_angular_4_1);
  ap_fixed<32,6> f_linear_1_4_zTimes2 = (lever_4_1 * r_56_act_inv_angular_4_0);
  ap_fixed<32,6> f_linear_1_4_zMinus = (f_linear_1_4_zTimes1 - f_linear_1_4_zTimes2);
  ap_fixed<32,6> f_linear_1_4_0 = f_linear_1_4_xMinus;
  ap_fixed<32,6> f_linear_1_4_1 = f_linear_1_4_yMinus;
  ap_fixed<32,6> f_linear_1_4_2 = f_linear_1_4_zMinus;
  ap_fixed<32,8> f_linear_2_4_2 = (r_54_act_inv_linear_4_2 - f_linear_1_4_2);
  ap_fixed<32,10> f_linear_2_4_1 = (r_54_act_inv_linear_4_1 - f_linear_1_4_1);
  ap_fixed<32,10> f_linear_2_4_0 = (r_54_act_inv_linear_4_0 - f_linear_1_4_0);
  ap_fixed<32,9> f_linear_3_4_2 = (f_linear_2_4_2 * masses_4);
  ap_fixed<32,10> f_linear_3_4_1 = (f_linear_2_4_1 * masses_4);
  ap_fixed<32,10> f_linear_3_4_0 = (f_linear_2_4_0 * masses_4);
  ap_fixed<32,6> temp112 = (r_56_act_inv_angular_4_0 * inertia_4_0_0);
  ap_fixed<32,2> temp113 = (r_56_act_inv_angular_4_1 * inertia_4_0_1);
  ap_fixed<32,6> r_57_rhsMult1_temp_4 = (temp112 + temp113);
  ap_fixed<32,1> temp114 = (r_56_act_inv_angular_4_2 * inertia_4_0_2);
  ap_fixed<32,6> r_58_rhsMult1_4 = (r_57_rhsMult1_temp_4 + temp114);
  ap_fixed<32,2> temp115 = (r_56_act_inv_angular_4_0 * inertia_4_0_1);
  ap_fixed<32,5> temp116 = (r_56_act_inv_angular_4_1 * inertia_4_1_1);
  ap_fixed<32,5> r_59_rhsMult2_temp_4 = (temp115 + temp116);
  ap_fixed<32,1> temp117 = (r_56_act_inv_angular_4_2 * inertia_4_1_2);
  ap_fixed<32,5> r_60_rhsMult2_4 = (r_59_rhsMult2_temp_4 + temp117);
  ap_fixed<32,2> temp118 = (r_56_act_inv_angular_4_0 * inertia_4_0_2);
  ap_fixed<32,1> temp119 = (r_56_act_inv_angular_4_1 * inertia_4_1_2);
  ap_fixed<32,3> r_61_rhsMult3_temp_4 = (temp118 + temp119);
  ap_fixed<32,2> temp120 = (r_56_act_inv_angular_4_2 * inertia_4_2_2);
  ap_fixed<32,4> r_62_rhsMult3_4 = (r_61_rhsMult3_temp_4 + temp120);
  ap_fixed<32,4> r_63_rhsMult_4_2 = r_62_rhsMult3_4;
  ap_fixed<32,5> r_63_rhsMult_4_1 = r_60_rhsMult2_4;
  ap_fixed<32,6> r_63_rhsMult_4_0 = r_58_rhsMult1_4;
  ap_fixed<32,4> f_angular_first_4_2 = r_63_rhsMult_4_2;
  ap_fixed<32,5> f_angular_first_4_1 = r_63_rhsMult_4_1;
  ap_fixed<32,6> f_angular_first_4_0 = r_63_rhsMult_4_0;
  ap_fixed<32,4> f_angular_1_4_xTimes1 = (lever_4_1 * f_linear_3_4_2);
  ap_fixed<32,6> f_angular_1_4_xTimes2 = (lever_4_2 * f_linear_3_4_1);
  ap_fixed<32,6> f_angular_1_4_xMinus = (f_angular_1_4_xTimes1 - f_angular_1_4_xTimes2);
  ap_fixed<32,6> f_angular_1_4_yTimes1 = (lever_4_2 * f_linear_3_4_0);
  ap_fixed<32,2> f_angular_1_4_yTimes2 = (lever_4_0 * f_linear_3_4_2);
  ap_fixed<32,6> f_angular_1_4_yMinus = (f_angular_1_4_yTimes1 - f_angular_1_4_yTimes2);
  ap_fixed<32,4> f_angular_1_4_zTimes1 = (lever_4_0 * f_linear_3_4_1);
  ap_fixed<32,6> f_angular_1_4_zTimes2 = (lever_4_1 * f_linear_3_4_0);
  ap_fixed<32,6> f_angular_1_4_zMinus = (f_angular_1_4_zTimes1 - f_angular_1_4_zTimes2);
  ap_fixed<32,6> f_angular_1_4_0 = f_angular_1_4_xMinus;
  ap_fixed<32,6> f_angular_1_4_1 = f_angular_1_4_yMinus;
  ap_fixed<32,6> f_angular_1_4_2 = f_angular_1_4_zMinus;
  ap_fixed<32,6> f_angular_2_4_2 = (f_angular_first_4_2 + f_angular_1_4_2);
  ap_fixed<32,7> f_angular_2_4_1 = (f_angular_first_4_1 + f_angular_1_4_1);
  ap_fixed<32,7> f_angular_2_4_0 = (f_angular_first_4_0 + f_angular_1_4_0);
  ap_fixed<32,10> f_linear_4_temp_4_xTimes1 = (act_inv_angular_4_1 * h_linear_4_2);
  ap_fixed<32,11> f_linear_4_temp_4_xTimes2 = (act_inv_angular_4_2 * h_linear_4_1);
  ap_fixed<32,12> f_linear_4_temp_4_xMinus = (f_linear_4_temp_4_xTimes1 - f_linear_4_temp_4_xTimes2);
  ap_fixed<32,11> f_linear_4_temp_4_yTimes1 = (act_inv_angular_4_2 * h_linear_4_0);
  ap_fixed<32,10> f_linear_4_temp_4_yTimes2 = (act_inv_angular_4_0 * h_linear_4_2);
  ap_fixed<32,12> f_linear_4_temp_4_yMinus = (f_linear_4_temp_4_yTimes1 - f_linear_4_temp_4_yTimes2);
  ap_fixed<32,12> f_linear_4_temp_4_zTimes1 = (act_inv_angular_4_0 * h_linear_4_1);
  ap_fixed<32,12> f_linear_4_temp_4_zTimes2 = (act_inv_angular_4_1 * h_linear_4_0);
  ap_fixed<32,13> f_linear_4_temp_4_zMinus = (f_linear_4_temp_4_zTimes1 - f_linear_4_temp_4_zTimes2);
  ap_fixed<32,12> f_linear_4_temp_4_0 = f_linear_4_temp_4_xMinus;
  ap_fixed<32,12> f_linear_4_temp_4_1 = f_linear_4_temp_4_yMinus;
  ap_fixed<32,13> f_linear_4_temp_4_2 = f_linear_4_temp_4_zMinus;
  ap_fixed<32,13> f_linear_4_4_2 = (f_linear_3_4_2 + f_linear_4_temp_4_2);
  ap_fixed<32,12> f_linear_4_4_1 = (f_linear_3_4_1 + f_linear_4_temp_4_1);
  ap_fixed<32,12> f_linear_4_4_0 = (f_linear_3_4_0 + f_linear_4_temp_4_0);
  ap_fixed<32,5> f_angular_3_temp_4_xTimes1 = (act_inv_angular_4_1 * h_angular_first_4_2);
  ap_fixed<32,6> f_angular_3_temp_4_xTimes2 = (act_inv_angular_4_2 * h_angular_first_4_1);
  ap_fixed<32,7> f_angular_3_temp_4_xMinus = (f_angular_3_temp_4_xTimes1 - f_angular_3_temp_4_xTimes2);
  ap_fixed<32,7> f_angular_3_temp_4_yTimes1 = (act_inv_angular_4_2 * h_angular_first_4_0);
  ap_fixed<32,5> f_angular_3_temp_4_yTimes2 = (act_inv_angular_4_0 * h_angular_first_4_2);
  ap_fixed<32,7> f_angular_3_temp_4_yMinus = (f_angular_3_temp_4_yTimes1 - f_angular_3_temp_4_yTimes2);
  ap_fixed<32,7> f_angular_3_temp_4_zTimes1 = (act_inv_angular_4_0 * h_angular_first_4_1);
  ap_fixed<32,7> f_angular_3_temp_4_zTimes2 = (act_inv_angular_4_1 * h_angular_first_4_0);
  ap_fixed<32,8> f_angular_3_temp_4_zMinus = (f_angular_3_temp_4_zTimes1 - f_angular_3_temp_4_zTimes2);
  ap_fixed<32,7> f_angular_3_temp_4_0 = f_angular_3_temp_4_xMinus;
  ap_fixed<32,7> f_angular_3_temp_4_1 = f_angular_3_temp_4_yMinus;
  ap_fixed<32,8> f_angular_3_temp_4_2 = f_angular_3_temp_4_zMinus;
  ap_fixed<32,8> f_angular_3_4_2 = (f_angular_2_4_2 + f_angular_3_temp_4_2);
  ap_fixed<32,8> f_angular_3_4_1 = (f_angular_2_4_1 + f_angular_3_temp_4_1);
  ap_fixed<32,8> f_angular_3_4_0 = (f_angular_2_4_0 + f_angular_3_temp_4_0);
  ap_fixed<32,9> f_angular_4_temp_4_xTimes1 = (act_inv_linear_4_1 * h_linear_4_2);
  ap_fixed<32,9> f_angular_4_temp_4_xTimes2 = (act_inv_linear_4_2 * h_linear_4_1);
  ap_fixed<32,10> f_angular_4_temp_4_xMinus = (f_angular_4_temp_4_xTimes1 - f_angular_4_temp_4_xTimes2);
  ap_fixed<32,9> f_angular_4_temp_4_yTimes1 = (act_inv_linear_4_2 * h_linear_4_0);
  ap_fixed<32,9> f_angular_4_temp_4_yTimes2 = (act_inv_linear_4_0 * h_linear_4_2);
  ap_fixed<32,10> f_angular_4_temp_4_yMinus = (f_angular_4_temp_4_yTimes1 - f_angular_4_temp_4_yTimes2);
  ap_fixed<32,11> f_angular_4_temp_4_zTimes1 = (act_inv_linear_4_0 * h_linear_4_1);
  ap_fixed<32,11> f_angular_4_temp_4_zTimes2 = (act_inv_linear_4_1 * h_linear_4_0);
  ap_fixed<32,12> f_angular_4_temp_4_zMinus = (f_angular_4_temp_4_zTimes1 - f_angular_4_temp_4_zTimes2);
  ap_fixed<32,10> f_angular_4_temp_4_0 = f_angular_4_temp_4_xMinus;
  ap_fixed<32,10> f_angular_4_temp_4_1 = f_angular_4_temp_4_yMinus;
  ap_fixed<32,12> f_angular_4_temp_4_2 = f_angular_4_temp_4_zMinus;
  ap_fixed<32,12> f_angular_4_4_2 = (f_angular_3_4_2 + f_angular_4_temp_4_2);
  ap_fixed<32,10> f_angular_4_4_1 = (f_angular_3_4_1 + f_angular_4_temp_4_1);
  ap_fixed<32,10> f_angular_4_4_0 = (f_angular_3_4_0 + f_angular_4_temp_4_0);
  ap_fixed<32,3> h_rnea_firstpass4_5 = h_angular_4_2;
  ap_fixed<32,3> h_rnea_firstpass4_4 = h_angular_4_1;
  ap_fixed<32,3> h_rnea_firstpass4_3 = h_angular_4_0;
  ap_fixed<32,5> h_rnea_firstpass4_2 = h_linear_4_2;
  ap_fixed<32,6> h_rnea_firstpass4_1 = h_linear_4_1;
  ap_fixed<32,6> h_rnea_firstpass4_0 = h_linear_4_0;
  ap_fixed<32,12> f_rnea_firstpass4_5 = f_angular_4_4_2;
  ap_fixed<32,10> f_rnea_firstpass4_4 = f_angular_4_4_1;
  ap_fixed<32,10> f_rnea_firstpass4_3 = f_angular_4_4_0;
  ap_fixed<32,13> f_rnea_firstpass4_2 = f_linear_4_4_2;
  ap_fixed<32,12> f_rnea_firstpass4_1 = f_linear_4_4_1;
  ap_fixed<32,12> f_rnea_firstpass4_0 = f_linear_4_4_0;
  ap_fixed<32,6> new_v_4_5 = act_inv_angular_4_2;
  ap_fixed<32,7> new_v_4_4 = act_inv_angular_4_1;
  ap_fixed<32,7> new_v_4_3 = act_inv_angular_4_0;
  ap_fixed<32,4> new_v_4_2 = act_inv_linear_4_2;
  ap_fixed<32,6> new_v_4_1 = act_inv_linear_4_1;
  ap_fixed<32,6> new_v_4_0 = act_inv_linear_4_0;
  ap_fixed<32,2> rotation_matrix_5_2_2 = 1.0;
  ap_fixed<32,1> rotation_matrix_5_2_1 = 0.0;
  ap_fixed<32,1> rotation_matrix_5_2_0 = 0.0;
  ap_fixed<32,1> rotation_matrix_5_1_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_5_1_1 = qcos_5;
  ap_fixed<32,2> rotation_matrix_5_1_0 = qsin_5;
  ap_fixed<32,1> rotation_matrix_5_0_2 = 0.0;
  ap_fixed<32,2> rotation_matrix_5_0_1 = -(qsin_5);
  ap_fixed<32,2> rotation_matrix_5_0_0 = qcos_5;
  ap_fixed<32,1> limi_rotation_5_2_2 = 0.0;
  ap_fixed<32,2> limi_rotation_5_2_1 = rotation_matrix_5_1_1;
  ap_fixed<32,2> limi_rotation_5_2_0 = rotation_matrix_5_1_0;
  ap_fixed<32,2> limi_rotation_5_1_2 = -1.0;
  ap_fixed<32,1> limi_rotation_5_1_1 = 0.0;
  ap_fixed<32,1> limi_rotation_5_1_0 = 0.0;
  ap_fixed<32,1> limi_rotation_5_0_2 = 0.0;
  ap_fixed<32,2> limi_rotation_5_0_1 = rotation_matrix_5_0_1;
  ap_fixed<32,2> limi_rotation_5_0_0 = rotation_matrix_5_0_0;
  ap_fixed<32,1> v_linear_5_2 = data_v_5_2;
  ap_fixed<32,1> v_linear_5_1 = data_v_5_1;
  ap_fixed<32,1> v_linear_5_0 = data_v_5_0;
  ap_fixed<32,4> v_angular_5_2 = v_5;
  ap_fixed<32,1> v_angular_5_1 = data_v_5_4;
  ap_fixed<32,1> v_angular_5_0 = data_v_5_3;
  ap_fixed<32,4> parent_v_linear_5_2 = new_v_4_2;
  ap_fixed<32,6> parent_v_linear_5_1 = new_v_4_1;
  ap_fixed<32,6> parent_v_linear_5_0 = new_v_4_0;
  ap_fixed<32,6> parent_v_angular_5_2 = new_v_4_5;
  ap_fixed<32,7> parent_v_angular_5_1 = new_v_4_4;
  ap_fixed<32,7> parent_v_angular_5_0 = new_v_4_3;
  ap_fixed<32,8> parent_a_gf_linear_5_2 = new_a_gf_up3_4_2;
  ap_fixed<32,10> parent_a_gf_linear_5_1 = new_a_gf_up3_4_1;
  ap_fixed<32,10> parent_a_gf_linear_5_0 = new_a_gf_up3_4_0;
  ap_fixed<32,9> parent_a_gf_angular_5_2 = new_a_gf_up3_4_5;
  ap_fixed<32,10> parent_a_gf_angular_5_1 = new_a_gf_up3_4_4;
  ap_fixed<32,10> parent_a_gf_angular_5_0 = new_a_gf_up3_4_3;
  ap_fixed<32,1> actInv1_5_xTimes1 = (limi_translation_5_1 * parent_v_angular_5_2);
  ap_fixed<32,1> actInv1_5_xTimes2 = (limi_translation_5_2 * parent_v_angular_5_1);
  ap_fixed<32,1> actInv1_5_xMinus = (actInv1_5_xTimes1 - actInv1_5_xTimes2);
  ap_fixed<32,1> actInv1_5_yTimes1 = (limi_translation_5_2 * parent_v_angular_5_0);
  ap_fixed<32,1> actInv1_5_yTimes2 = (limi_translation_5_0 * parent_v_angular_5_2);
  ap_fixed<32,1> actInv1_5_yMinus = (actInv1_5_yTimes1 - actInv1_5_yTimes2);
  ap_fixed<32,1> actInv1_5_zTimes1 = (limi_translation_5_0 * parent_v_angular_5_1);
  ap_fixed<32,1> actInv1_5_zTimes2 = (limi_translation_5_1 * parent_v_angular_5_0);
  ap_fixed<32,1> actInv1_5_zMinus = (actInv1_5_zTimes1 - actInv1_5_zTimes2);
  ap_fixed<32,1> actInv1_5_0 = actInv1_5_xMinus;
  ap_fixed<32,1> actInv1_5_1 = actInv1_5_yMinus;
  ap_fixed<32,1> actInv1_5_2 = actInv1_5_zMinus;
  ap_fixed<32,4> actInv2_5_2 = (parent_v_linear_5_2 - actInv1_5_2);
  ap_fixed<32,6> actInv2_5_1 = (parent_v_linear_5_1 - actInv1_5_1);
  ap_fixed<32,6> actInv2_5_0 = (parent_v_linear_5_0 - actInv1_5_0);
  ap_fixed<32,1> actInv3_5_2_2 = limi_rotation_5_2_2;
  ap_fixed<32,2> actInv3_5_1_2 = limi_rotation_5_2_1;
  ap_fixed<32,2> actInv3_5_0_2 = limi_rotation_5_2_0;
  ap_fixed<32,2> actInv3_5_2_1 = limi_rotation_5_1_2;
  ap_fixed<32,1> actInv3_5_1_1 = limi_rotation_5_1_1;
  ap_fixed<32,1> actInv3_5_0_1 = limi_rotation_5_1_0;
  ap_fixed<32,1> actInv3_5_2_0 = limi_rotation_5_0_2;
  ap_fixed<32,2> actInv3_5_1_0 = limi_rotation_5_0_1;
  ap_fixed<32,2> actInv3_5_0_0 = limi_rotation_5_0_0;
  ap_fixed<32,6> actInv4_5_0_times_0 = (actInv3_5_0_0 * actInv2_5_0);
  ap_fixed<32,1> actInv4_5_0_times_1 = (actInv3_5_0_1 * actInv2_5_1);
  ap_fixed<32,4> actInv4_5_0_times_2 = (actInv3_5_0_2 * actInv2_5_2);
  ap_fixed<32,6> actInv4_5_0_sum_0 = actInv4_5_0_times_0;
  ap_fixed<32,6> actInv4_5_0_sum_1 = (actInv4_5_0_sum_0 + actInv4_5_0_times_1);
  ap_fixed<32,6> actInv4_5_0_sum_2 = (actInv4_5_0_sum_1 + actInv4_5_0_times_2);
  ap_fixed<32,6> actInv4_5_0 = actInv4_5_0_sum_2;
  ap_fixed<32,6> actInv4_5_1_times_0 = (actInv3_5_1_0 * actInv2_5_0);
  ap_fixed<32,1> actInv4_5_1_times_1 = (actInv3_5_1_1 * actInv2_5_1);
  ap_fixed<32,4> actInv4_5_1_times_2 = (actInv3_5_1_2 * actInv2_5_2);
  ap_fixed<32,6> actInv4_5_1_sum_0 = actInv4_5_1_times_0;
  ap_fixed<32,6> actInv4_5_1_sum_1 = (actInv4_5_1_sum_0 + actInv4_5_1_times_1);
  ap_fixed<32,6> actInv4_5_1_sum_2 = (actInv4_5_1_sum_1 + actInv4_5_1_times_2);
  ap_fixed<32,6> actInv4_5_1 = actInv4_5_1_sum_2;
  ap_fixed<32,1> actInv4_5_2_times_0 = (actInv3_5_2_0 * actInv2_5_0);
  ap_fixed<32,6> actInv4_5_2_times_1 = (actInv3_5_2_1 * actInv2_5_1);
  ap_fixed<32,1> actInv4_5_2_times_2 = (actInv3_5_2_2 * actInv2_5_2);
  ap_fixed<32,1> actInv4_5_2_sum_0 = actInv4_5_2_times_0;
  ap_fixed<32,6> actInv4_5_2_sum_1 = (actInv4_5_2_sum_0 + actInv4_5_2_times_1);
  ap_fixed<32,6> actInv4_5_2_sum_2 = (actInv4_5_2_sum_1 + actInv4_5_2_times_2);
  ap_fixed<32,6> actInv4_5_2 = actInv4_5_2_sum_2;
  ap_fixed<32,6> act_inv_linear_5_2 = (v_linear_5_2 + actInv4_5_2);
  ap_fixed<32,6> act_inv_linear_5_1 = (v_linear_5_1 + actInv4_5_1);
  ap_fixed<32,6> act_inv_linear_5_0 = (v_linear_5_0 + actInv4_5_0);
  ap_fixed<32,7> actInv5_5_0_times_0 = (actInv3_5_0_0 * parent_v_angular_5_0);
  ap_fixed<32,1> actInv5_5_0_times_1 = (actInv3_5_0_1 * parent_v_angular_5_1);
  ap_fixed<32,6> actInv5_5_0_times_2 = (actInv3_5_0_2 * parent_v_angular_5_2);
  ap_fixed<32,7> actInv5_5_0_sum_0 = actInv5_5_0_times_0;
  ap_fixed<32,7> actInv5_5_0_sum_1 = (actInv5_5_0_sum_0 + actInv5_5_0_times_1);
  ap_fixed<32,7> actInv5_5_0_sum_2 = (actInv5_5_0_sum_1 + actInv5_5_0_times_2);
  ap_fixed<32,7> actInv5_5_0 = actInv5_5_0_sum_2;
  ap_fixed<32,7> actInv5_5_1_times_0 = (actInv3_5_1_0 * parent_v_angular_5_0);
  ap_fixed<32,1> actInv5_5_1_times_1 = (actInv3_5_1_1 * parent_v_angular_5_1);
  ap_fixed<32,6> actInv5_5_1_times_2 = (actInv3_5_1_2 * parent_v_angular_5_2);
  ap_fixed<32,7> actInv5_5_1_sum_0 = actInv5_5_1_times_0;
  ap_fixed<32,7> actInv5_5_1_sum_1 = (actInv5_5_1_sum_0 + actInv5_5_1_times_1);
  ap_fixed<32,7> actInv5_5_1_sum_2 = (actInv5_5_1_sum_1 + actInv5_5_1_times_2);
  ap_fixed<32,7> actInv5_5_1 = actInv5_5_1_sum_2;
  ap_fixed<32,1> actInv5_5_2_times_0 = (actInv3_5_2_0 * parent_v_angular_5_0);
  ap_fixed<32,7> actInv5_5_2_times_1 = (actInv3_5_2_1 * parent_v_angular_5_1);
  ap_fixed<32,1> actInv5_5_2_times_2 = (actInv3_5_2_2 * parent_v_angular_5_2);
  ap_fixed<32,1> actInv5_5_2_sum_0 = actInv5_5_2_times_0;
  ap_fixed<32,7> actInv5_5_2_sum_1 = (actInv5_5_2_sum_0 + actInv5_5_2_times_1);
  ap_fixed<32,7> actInv5_5_2_sum_2 = (actInv5_5_2_sum_1 + actInv5_5_2_times_2);
  ap_fixed<32,7> actInv5_5_2 = actInv5_5_2_sum_2;
  ap_fixed<32,7> act_inv_angular_5_2 = (v_angular_5_2 + actInv5_5_2);
  ap_fixed<32,7> act_inv_angular_5_1 = (v_angular_5_1 + actInv5_5_1);
  ap_fixed<32,7> act_inv_angular_5_0 = (v_angular_5_0 + actInv5_5_0);
  ap_fixed<32,4> minus_m_w_5 = v_5;
  ap_fixed<32,4> temp122 = -(minus_m_w_5);
  ap_fixed<32,4> temp121 = -(temp122);
  ap_fixed<32,9> alpha_cross1_linear_5 = (temp121 * act_inv_linear_5_1);
  ap_fixed<32,4> temp123 = -(minus_m_w_5);
  ap_fixed<32,9> alpha_cross2_linear_5 = (temp123 * act_inv_linear_5_0);
  ap_fixed<32,1> alpha_cross_linear_5_2 = 0.0;
  ap_fixed<32,9> alpha_cross_linear_5_1 = alpha_cross2_linear_5;
  ap_fixed<32,9> alpha_cross_linear_5_0 = alpha_cross1_linear_5;
  ap_fixed<32,4> temp125 = -(minus_m_w_5);
  ap_fixed<32,4> temp124 = -(temp125);
  ap_fixed<32,10> alpha_cross1_angular_5 = (temp124 * act_inv_angular_5_1);
  ap_fixed<32,4> temp126 = -(minus_m_w_5);
  ap_fixed<32,10> alpha_cross2_angular_5 = (temp126 * act_inv_angular_5_0);
  ap_fixed<32,1> alpha_cross_angular_5_2 = 0.0;
  ap_fixed<32,10> alpha_cross_angular_5_1 = alpha_cross2_angular_5;
  ap_fixed<32,10> alpha_cross_angular_5_0 = alpha_cross1_angular_5;
  ap_fixed<32,1> new_a_gf_5_5 = alpha_cross_angular_5_2;
  ap_fixed<32,10> new_a_gf_5_4 = alpha_cross_angular_5_1;
  ap_fixed<32,10> new_a_gf_5_3 = alpha_cross_angular_5_0;
  ap_fixed<32,1> new_a_gf_5_2 = alpha_cross_linear_5_2;
  ap_fixed<32,9> new_a_gf_5_1 = alpha_cross_linear_5_1;
  ap_fixed<32,9> new_a_gf_5_0 = alpha_cross_linear_5_0;
  ap_fixed<32,4> new_a_gf_up1_5 = (a_5 + new_a_gf_5_5);
  ap_fixed<32,1> new_a_gf2_linear_5_2 = new_a_gf_5_2;
  ap_fixed<32,9> new_a_gf2_linear_5_1 = new_a_gf_5_1;
  ap_fixed<32,9> new_a_gf2_linear_5_0 = new_a_gf_5_0;
  ap_fixed<32,4> new_a_gf2_angular_5_2 = new_a_gf_up1_5;
  ap_fixed<32,10> new_a_gf2_angular_5_1 = new_a_gf_5_4;
  ap_fixed<32,10> new_a_gf2_angular_5_0 = new_a_gf_5_3;
  ap_fixed<32,1> r_64_actInv1_5_xTimes1 = (limi_translation_5_1 * parent_a_gf_angular_5_2);
  ap_fixed<32,1> r_64_actInv1_5_xTimes2 = (limi_translation_5_2 * parent_a_gf_angular_5_1);
  ap_fixed<32,1> r_64_actInv1_5_xMinus = (r_64_actInv1_5_xTimes1 - r_64_actInv1_5_xTimes2);
  ap_fixed<32,1> r_64_actInv1_5_yTimes1 = (limi_translation_5_2 * parent_a_gf_angular_5_0);
  ap_fixed<32,1> r_64_actInv1_5_yTimes2 = (limi_translation_5_0 * parent_a_gf_angular_5_2);
  ap_fixed<32,1> r_64_actInv1_5_yMinus = (r_64_actInv1_5_yTimes1 - r_64_actInv1_5_yTimes2);
  ap_fixed<32,1> r_64_actInv1_5_zTimes1 = (limi_translation_5_0 * parent_a_gf_angular_5_1);
  ap_fixed<32,1> r_64_actInv1_5_zTimes2 = (limi_translation_5_1 * parent_a_gf_angular_5_0);
  ap_fixed<32,1> r_64_actInv1_5_zMinus = (r_64_actInv1_5_zTimes1 - r_64_actInv1_5_zTimes2);
  ap_fixed<32,1> r_64_actInv1_5_0 = r_64_actInv1_5_xMinus;
  ap_fixed<32,1> r_64_actInv1_5_1 = r_64_actInv1_5_yMinus;
  ap_fixed<32,1> r_64_actInv1_5_2 = r_64_actInv1_5_zMinus;
  ap_fixed<32,8> r_65_actInv2_5_2 = (parent_a_gf_linear_5_2 - r_64_actInv1_5_2);
  ap_fixed<32,10> r_65_actInv2_5_1 = (parent_a_gf_linear_5_1 - r_64_actInv1_5_1);
  ap_fixed<32,10> r_65_actInv2_5_0 = (parent_a_gf_linear_5_0 - r_64_actInv1_5_0);
  ap_fixed<32,1> r_66_actInv3_5_2_2 = limi_rotation_5_2_2;
  ap_fixed<32,2> r_66_actInv3_5_1_2 = limi_rotation_5_2_1;
  ap_fixed<32,2> r_66_actInv3_5_0_2 = limi_rotation_5_2_0;
  ap_fixed<32,2> r_66_actInv3_5_2_1 = limi_rotation_5_1_2;
  ap_fixed<32,1> r_66_actInv3_5_1_1 = limi_rotation_5_1_1;
  ap_fixed<32,1> r_66_actInv3_5_0_1 = limi_rotation_5_1_0;
  ap_fixed<32,1> r_66_actInv3_5_2_0 = limi_rotation_5_0_2;
  ap_fixed<32,2> r_66_actInv3_5_1_0 = limi_rotation_5_0_1;
  ap_fixed<32,2> r_66_actInv3_5_0_0 = limi_rotation_5_0_0;
  ap_fixed<32,10> r_67_actInv4_5_0_times_0 = (r_66_actInv3_5_0_0 * r_65_actInv2_5_0);
  ap_fixed<32,1> r_67_actInv4_5_0_times_1 = (r_66_actInv3_5_0_1 * r_65_actInv2_5_1);
  ap_fixed<32,8> r_67_actInv4_5_0_times_2 = (r_66_actInv3_5_0_2 * r_65_actInv2_5_2);
  ap_fixed<32,10> r_67_actInv4_5_0_sum_0 = r_67_actInv4_5_0_times_0;
  ap_fixed<32,10> r_67_actInv4_5_0_sum_1 = (r_67_actInv4_5_0_sum_0 + r_67_actInv4_5_0_times_1);
  ap_fixed<32,10> r_67_actInv4_5_0_sum_2 = (r_67_actInv4_5_0_sum_1 + r_67_actInv4_5_0_times_2);
  ap_fixed<32,10> r_67_actInv4_5_0 = r_67_actInv4_5_0_sum_2;
  ap_fixed<32,10> r_67_actInv4_5_1_times_0 = (r_66_actInv3_5_1_0 * r_65_actInv2_5_0);
  ap_fixed<32,1> r_67_actInv4_5_1_times_1 = (r_66_actInv3_5_1_1 * r_65_actInv2_5_1);
  ap_fixed<32,8> r_67_actInv4_5_1_times_2 = (r_66_actInv3_5_1_2 * r_65_actInv2_5_2);
  ap_fixed<32,10> r_67_actInv4_5_1_sum_0 = r_67_actInv4_5_1_times_0;
  ap_fixed<32,10> r_67_actInv4_5_1_sum_1 = (r_67_actInv4_5_1_sum_0 + r_67_actInv4_5_1_times_1);
  ap_fixed<32,10> r_67_actInv4_5_1_sum_2 = (r_67_actInv4_5_1_sum_1 + r_67_actInv4_5_1_times_2);
  ap_fixed<32,10> r_67_actInv4_5_1 = r_67_actInv4_5_1_sum_2;
  ap_fixed<32,1> r_67_actInv4_5_2_times_0 = (r_66_actInv3_5_2_0 * r_65_actInv2_5_0);
  ap_fixed<32,10> r_67_actInv4_5_2_times_1 = (r_66_actInv3_5_2_1 * r_65_actInv2_5_1);
  ap_fixed<32,1> r_67_actInv4_5_2_times_2 = (r_66_actInv3_5_2_2 * r_65_actInv2_5_2);
  ap_fixed<32,1> r_67_actInv4_5_2_sum_0 = r_67_actInv4_5_2_times_0;
  ap_fixed<32,10> r_67_actInv4_5_2_sum_1 = (r_67_actInv4_5_2_sum_0 + r_67_actInv4_5_2_times_1);
  ap_fixed<32,10> r_67_actInv4_5_2_sum_2 = (r_67_actInv4_5_2_sum_1 + r_67_actInv4_5_2_times_2);
  ap_fixed<32,10> r_67_actInv4_5_2 = r_67_actInv4_5_2_sum_2;
  ap_fixed<32,10> r_68_act_inv_linear_5_2 = (new_a_gf2_linear_5_2 + r_67_actInv4_5_2);
  ap_fixed<32,11> r_68_act_inv_linear_5_1 = (new_a_gf2_linear_5_1 + r_67_actInv4_5_1);
  ap_fixed<32,11> r_68_act_inv_linear_5_0 = (new_a_gf2_linear_5_0 + r_67_actInv4_5_0);
  ap_fixed<32,10> r_69_actInv5_5_0_times_0 = (r_66_actInv3_5_0_0 * parent_a_gf_angular_5_0);
  ap_fixed<32,1> r_69_actInv5_5_0_times_1 = (r_66_actInv3_5_0_1 * parent_a_gf_angular_5_1);
  ap_fixed<32,9> r_69_actInv5_5_0_times_2 = (r_66_actInv3_5_0_2 * parent_a_gf_angular_5_2);
  ap_fixed<32,10> r_69_actInv5_5_0_sum_0 = r_69_actInv5_5_0_times_0;
  ap_fixed<32,10> r_69_actInv5_5_0_sum_1 = (r_69_actInv5_5_0_sum_0 + r_69_actInv5_5_0_times_1);
  ap_fixed<32,11> r_69_actInv5_5_0_sum_2 = (r_69_actInv5_5_0_sum_1 + r_69_actInv5_5_0_times_2);
  ap_fixed<32,11> r_69_actInv5_5_0 = r_69_actInv5_5_0_sum_2;
  ap_fixed<32,10> r_69_actInv5_5_1_times_0 = (r_66_actInv3_5_1_0 * parent_a_gf_angular_5_0);
  ap_fixed<32,1> r_69_actInv5_5_1_times_1 = (r_66_actInv3_5_1_1 * parent_a_gf_angular_5_1);
  ap_fixed<32,9> r_69_actInv5_5_1_times_2 = (r_66_actInv3_5_1_2 * parent_a_gf_angular_5_2);
  ap_fixed<32,10> r_69_actInv5_5_1_sum_0 = r_69_actInv5_5_1_times_0;
  ap_fixed<32,10> r_69_actInv5_5_1_sum_1 = (r_69_actInv5_5_1_sum_0 + r_69_actInv5_5_1_times_1);
  ap_fixed<32,11> r_69_actInv5_5_1_sum_2 = (r_69_actInv5_5_1_sum_1 + r_69_actInv5_5_1_times_2);
  ap_fixed<32,11> r_69_actInv5_5_1 = r_69_actInv5_5_1_sum_2;
  ap_fixed<32,1> r_69_actInv5_5_2_times_0 = (r_66_actInv3_5_2_0 * parent_a_gf_angular_5_0);
  ap_fixed<32,10> r_69_actInv5_5_2_times_1 = (r_66_actInv3_5_2_1 * parent_a_gf_angular_5_1);
  ap_fixed<32,1> r_69_actInv5_5_2_times_2 = (r_66_actInv3_5_2_2 * parent_a_gf_angular_5_2);
  ap_fixed<32,1> r_69_actInv5_5_2_sum_0 = r_69_actInv5_5_2_times_0;
  ap_fixed<32,10> r_69_actInv5_5_2_sum_1 = (r_69_actInv5_5_2_sum_0 + r_69_actInv5_5_2_times_1);
  ap_fixed<32,10> r_69_actInv5_5_2_sum_2 = (r_69_actInv5_5_2_sum_1 + r_69_actInv5_5_2_times_2);
  ap_fixed<32,10> r_69_actInv5_5_2 = r_69_actInv5_5_2_sum_2;
  ap_fixed<32,10> r_70_act_inv_angular_5_2 = (new_a_gf2_angular_5_2 + r_69_actInv5_5_2);
  ap_fixed<32,11> r_70_act_inv_angular_5_1 = (new_a_gf2_angular_5_1 + r_69_actInv5_5_1);
  ap_fixed<32,11> r_70_act_inv_angular_5_0 = (new_a_gf2_angular_5_0 + r_69_actInv5_5_0);
  ap_fixed<32,10> new_a_gf_up3_5_5 = r_70_act_inv_angular_5_2;
  ap_fixed<32,11> new_a_gf_up3_5_4 = r_70_act_inv_angular_5_1;
  ap_fixed<32,11> new_a_gf_up3_5_3 = r_70_act_inv_angular_5_0;
  ap_fixed<32,10> new_a_gf_up3_5_2 = r_68_act_inv_linear_5_2;
  ap_fixed<32,11> new_a_gf_up3_5_1 = r_68_act_inv_linear_5_1;
  ap_fixed<32,11> new_a_gf_up3_5_0 = r_68_act_inv_linear_5_0;
  ap_fixed<32,1> h_linear_1_5_xTimes1 = (lever_5_1 * act_inv_angular_5_2);
  ap_fixed<32,1> h_linear_1_5_xTimes2 = (lever_5_2 * act_inv_angular_5_1);
  ap_fixed<32,2> h_linear_1_5_xMinus = (h_linear_1_5_xTimes1 - h_linear_1_5_xTimes2);
  ap_fixed<32,1> h_linear_1_5_yTimes1 = (lever_5_2 * act_inv_angular_5_0);
  ap_fixed<32,3> h_linear_1_5_yTimes2 = (lever_5_0 * act_inv_angular_5_2);
  ap_fixed<32,3> h_linear_1_5_yMinus = (h_linear_1_5_yTimes1 - h_linear_1_5_yTimes2);
  ap_fixed<32,3> h_linear_1_5_zTimes1 = (lever_5_0 * act_inv_angular_5_1);
  ap_fixed<32,1> h_linear_1_5_zTimes2 = (lever_5_1 * act_inv_angular_5_0);
  ap_fixed<32,4> h_linear_1_5_zMinus = (h_linear_1_5_zTimes1 - h_linear_1_5_zTimes2);
  ap_fixed<32,2> h_linear_1_5_0 = h_linear_1_5_xMinus;
  ap_fixed<32,3> h_linear_1_5_1 = h_linear_1_5_yMinus;
  ap_fixed<32,4> h_linear_1_5_2 = h_linear_1_5_zMinus;
  ap_fixed<32,6> h_linear_2_5_2 = (act_inv_linear_5_2 - h_linear_1_5_2);
  ap_fixed<32,6> h_linear_2_5_1 = (act_inv_linear_5_1 - h_linear_1_5_1);
  ap_fixed<32,6> h_linear_2_5_0 = (act_inv_linear_5_0 - h_linear_1_5_0);
  ap_fixed<32,7> h_linear_5_2 = (h_linear_2_5_2 * masses_5);
  ap_fixed<32,7> h_linear_5_1 = (h_linear_2_5_1 * masses_5);
  ap_fixed<32,7> h_linear_5_0 = (h_linear_2_5_0 * masses_5);
  ap_fixed<32,1> temp127 = (act_inv_angular_5_0 * inertia_5_0_0);
  ap_fixed<32,1> temp128 = (act_inv_angular_5_1 * inertia_5_0_1);
  ap_fixed<32,1> rhsMult1_temp_5 = (temp127 + temp128);
  ap_fixed<32,1> temp129 = (act_inv_angular_5_2 * inertia_5_0_2);
  ap_fixed<32,1> rhsMult1_5 = (rhsMult1_temp_5 + temp129);
  ap_fixed<32,1> temp130 = (act_inv_angular_5_0 * inertia_5_0_1);
  ap_fixed<32,1> temp131 = (act_inv_angular_5_1 * inertia_5_1_1);
  ap_fixed<32,1> rhsMult2_temp_5 = (temp130 + temp131);
  ap_fixed<32,1> temp132 = (act_inv_angular_5_2 * inertia_5_1_2);
  ap_fixed<32,1> rhsMult2_5 = (rhsMult2_temp_5 + temp132);
  ap_fixed<32,1> temp133 = (act_inv_angular_5_0 * inertia_5_0_2);
  ap_fixed<32,1> temp134 = (act_inv_angular_5_1 * inertia_5_1_2);
  ap_fixed<32,1> rhsMult3_temp_5 = (temp133 + temp134);
  ap_fixed<32,1> temp135 = (act_inv_angular_5_2 * inertia_5_2_2);
  ap_fixed<32,1> rhsMult3_5 = (rhsMult3_temp_5 + temp135);
  ap_fixed<32,1> rhsMult_5_2 = rhsMult3_5;
  ap_fixed<32,1> rhsMult_5_1 = rhsMult2_5;
  ap_fixed<32,1> rhsMult_5_0 = rhsMult1_5;
  ap_fixed<32,1> h_angular_first_5_2 = rhsMult_5_2;
  ap_fixed<32,1> h_angular_first_5_1 = rhsMult_5_1;
  ap_fixed<32,1> h_angular_first_5_0 = rhsMult_5_0;
  ap_fixed<32,1> h_angular_1_5_xTimes1 = (lever_5_1 * h_linear_5_2);
  ap_fixed<32,1> h_angular_1_5_xTimes2 = (lever_5_2 * h_linear_5_1);
  ap_fixed<32,2> h_angular_1_5_xMinus = (h_angular_1_5_xTimes1 - h_angular_1_5_xTimes2);
  ap_fixed<32,1> h_angular_1_5_yTimes1 = (lever_5_2 * h_linear_5_0);
  ap_fixed<32,3> h_angular_1_5_yTimes2 = (lever_5_0 * h_linear_5_2);
  ap_fixed<32,3> h_angular_1_5_yMinus = (h_angular_1_5_yTimes1 - h_angular_1_5_yTimes2);
  ap_fixed<32,3> h_angular_1_5_zTimes1 = (lever_5_0 * h_linear_5_1);
  ap_fixed<32,1> h_angular_1_5_zTimes2 = (lever_5_1 * h_linear_5_0);
  ap_fixed<32,3> h_angular_1_5_zMinus = (h_angular_1_5_zTimes1 - h_angular_1_5_zTimes2);
  ap_fixed<32,2> h_angular_1_5_0 = h_angular_1_5_xMinus;
  ap_fixed<32,3> h_angular_1_5_1 = h_angular_1_5_yMinus;
  ap_fixed<32,3> h_angular_1_5_2 = h_angular_1_5_zMinus;
  ap_fixed<32,4> h_angular_5_2 = (h_angular_first_5_2 + h_angular_1_5_2);
  ap_fixed<32,3> h_angular_5_1 = (h_angular_first_5_1 + h_angular_1_5_1);
  ap_fixed<32,2> h_angular_5_0 = (h_angular_first_5_0 + h_angular_1_5_0);
  ap_fixed<32,4> f_linear_1_5_xTimes1 = (lever_5_1 * r_70_act_inv_angular_5_2);
  ap_fixed<32,5> f_linear_1_5_xTimes2 = (lever_5_2 * r_70_act_inv_angular_5_1);
  ap_fixed<32,6> f_linear_1_5_xMinus = (f_linear_1_5_xTimes1 - f_linear_1_5_xTimes2);
  ap_fixed<32,5> f_linear_1_5_yTimes1 = (lever_5_2 * r_70_act_inv_angular_5_0);
  ap_fixed<32,6> f_linear_1_5_yTimes2 = (lever_5_0 * r_70_act_inv_angular_5_2);
  ap_fixed<32,7> f_linear_1_5_yMinus = (f_linear_1_5_yTimes1 - f_linear_1_5_yTimes2);
  ap_fixed<32,7> f_linear_1_5_zTimes1 = (lever_5_0 * r_70_act_inv_angular_5_1);
  ap_fixed<32,5> f_linear_1_5_zTimes2 = (lever_5_1 * r_70_act_inv_angular_5_0);
  ap_fixed<32,8> f_linear_1_5_zMinus = (f_linear_1_5_zTimes1 - f_linear_1_5_zTimes2);
  ap_fixed<32,6> f_linear_1_5_0 = f_linear_1_5_xMinus;
  ap_fixed<32,7> f_linear_1_5_1 = f_linear_1_5_yMinus;
  ap_fixed<32,8> f_linear_1_5_2 = f_linear_1_5_zMinus;
  ap_fixed<32,10> f_linear_2_5_2 = (r_68_act_inv_linear_5_2 - f_linear_1_5_2);
  ap_fixed<32,11> f_linear_2_5_1 = (r_68_act_inv_linear_5_1 - f_linear_1_5_1);
  ap_fixed<32,11> f_linear_2_5_0 = (r_68_act_inv_linear_5_0 - f_linear_1_5_0);
  ap_fixed<32,11> f_linear_3_5_2 = (f_linear_2_5_2 * masses_5);
  ap_fixed<32,12> f_linear_3_5_1 = (f_linear_2_5_1 * masses_5);
  ap_fixed<32,11> f_linear_3_5_0 = (f_linear_2_5_0 * masses_5);
  ap_fixed<32,2> temp136 = (r_70_act_inv_angular_5_0 * inertia_5_0_0);
  ap_fixed<32,1> temp137 = (r_70_act_inv_angular_5_1 * inertia_5_0_1);
  ap_fixed<32,3> r_71_rhsMult1_temp_5 = (temp136 + temp137);
  ap_fixed<32,1> temp138 = (r_70_act_inv_angular_5_2 * inertia_5_0_2);
  ap_fixed<32,3> r_72_rhsMult1_5 = (r_71_rhsMult1_temp_5 + temp138);
  ap_fixed<32,1> temp139 = (r_70_act_inv_angular_5_0 * inertia_5_0_1);
  ap_fixed<32,4> temp140 = (r_70_act_inv_angular_5_1 * inertia_5_1_1);
  ap_fixed<32,4> r_73_rhsMult2_temp_5 = (temp139 + temp140);
  ap_fixed<32,1> temp141 = (r_70_act_inv_angular_5_2 * inertia_5_1_2);
  ap_fixed<32,4> r_74_rhsMult2_5 = (r_73_rhsMult2_temp_5 + temp141);
  ap_fixed<32,2> temp142 = (r_70_act_inv_angular_5_0 * inertia_5_0_2);
  ap_fixed<32,1> temp143 = (r_70_act_inv_angular_5_1 * inertia_5_1_2);
  ap_fixed<32,2> r_75_rhsMult3_temp_5 = (temp142 + temp143);
  ap_fixed<32,3> temp144 = (r_70_act_inv_angular_5_2 * inertia_5_2_2);
  ap_fixed<32,4> r_76_rhsMult3_5 = (r_75_rhsMult3_temp_5 + temp144);
  ap_fixed<32,4> r_77_rhsMult_5_2 = r_76_rhsMult3_5;
  ap_fixed<32,4> r_77_rhsMult_5_1 = r_74_rhsMult2_5;
  ap_fixed<32,3> r_77_rhsMult_5_0 = r_72_rhsMult1_5;
  ap_fixed<32,4> f_angular_first_5_2 = r_77_rhsMult_5_2;
  ap_fixed<32,4> f_angular_first_5_1 = r_77_rhsMult_5_1;
  ap_fixed<32,3> f_angular_first_5_0 = r_77_rhsMult_5_0;
  ap_fixed<32,5> f_angular_1_5_xTimes1 = (lever_5_1 * f_linear_3_5_2);
  ap_fixed<32,5> f_angular_1_5_xTimes2 = (lever_5_2 * f_linear_3_5_1);
  ap_fixed<32,6> f_angular_1_5_xMinus = (f_angular_1_5_xTimes1 - f_angular_1_5_xTimes2);
  ap_fixed<32,5> f_angular_1_5_yTimes1 = (lever_5_2 * f_linear_3_5_0);
  ap_fixed<32,7> f_angular_1_5_yTimes2 = (lever_5_0 * f_linear_3_5_2);
  ap_fixed<32,7> f_angular_1_5_yMinus = (f_angular_1_5_yTimes1 - f_angular_1_5_yTimes2);
  ap_fixed<32,7> f_angular_1_5_zTimes1 = (lever_5_0 * f_linear_3_5_1);
  ap_fixed<32,5> f_angular_1_5_zTimes2 = (lever_5_1 * f_linear_3_5_0);
  ap_fixed<32,8> f_angular_1_5_zMinus = (f_angular_1_5_zTimes1 - f_angular_1_5_zTimes2);
  ap_fixed<32,6> f_angular_1_5_0 = f_angular_1_5_xMinus;
  ap_fixed<32,7> f_angular_1_5_1 = f_angular_1_5_yMinus;
  ap_fixed<32,8> f_angular_1_5_2 = f_angular_1_5_zMinus;
  ap_fixed<32,8> f_angular_2_5_2 = (f_angular_first_5_2 + f_angular_1_5_2);
  ap_fixed<32,7> f_angular_2_5_1 = (f_angular_first_5_1 + f_angular_1_5_1);
  ap_fixed<32,6> f_angular_2_5_0 = (f_angular_first_5_0 + f_angular_1_5_0);
  ap_fixed<32,13> f_linear_4_temp_5_xTimes1 = (act_inv_angular_5_1 * h_linear_5_2);
  ap_fixed<32,13> f_linear_4_temp_5_xTimes2 = (act_inv_angular_5_2 * h_linear_5_1);
  ap_fixed<32,14> f_linear_4_temp_5_xMinus = (f_linear_4_temp_5_xTimes1 - f_linear_4_temp_5_xTimes2);
  ap_fixed<32,12> f_linear_4_temp_5_yTimes1 = (act_inv_angular_5_2 * h_linear_5_0);
  ap_fixed<32,13> f_linear_4_temp_5_yTimes2 = (act_inv_angular_5_0 * h_linear_5_2);
  ap_fixed<32,14> f_linear_4_temp_5_yMinus = (f_linear_4_temp_5_yTimes1 - f_linear_4_temp_5_yTimes2);
  ap_fixed<32,13> f_linear_4_temp_5_zTimes1 = (act_inv_angular_5_0 * h_linear_5_1);
  ap_fixed<32,13> f_linear_4_temp_5_zTimes2 = (act_inv_angular_5_1 * h_linear_5_0);
  ap_fixed<32,14> f_linear_4_temp_5_zMinus = (f_linear_4_temp_5_zTimes1 - f_linear_4_temp_5_zTimes2);
  ap_fixed<32,14> f_linear_4_temp_5_0 = f_linear_4_temp_5_xMinus;
  ap_fixed<32,14> f_linear_4_temp_5_1 = f_linear_4_temp_5_yMinus;
  ap_fixed<32,14> f_linear_4_temp_5_2 = f_linear_4_temp_5_zMinus;
  ap_fixed<32,14> f_linear_4_5_2 = (f_linear_3_5_2 + f_linear_4_temp_5_2);
  ap_fixed<32,14> f_linear_4_5_1 = (f_linear_3_5_1 + f_linear_4_temp_5_1);
  ap_fixed<32,14> f_linear_4_5_0 = (f_linear_3_5_0 + f_linear_4_temp_5_0);
  ap_fixed<32,6> f_angular_3_temp_5_xTimes1 = (act_inv_angular_5_1 * h_angular_first_5_2);
  ap_fixed<32,5> f_angular_3_temp_5_xTimes2 = (act_inv_angular_5_2 * h_angular_first_5_1);
  ap_fixed<32,6> f_angular_3_temp_5_xMinus = (f_angular_3_temp_5_xTimes1 - f_angular_3_temp_5_xTimes2);
  ap_fixed<32,4> f_angular_3_temp_5_yTimes1 = (act_inv_angular_5_2 * h_angular_first_5_0);
  ap_fixed<32,6> f_angular_3_temp_5_yTimes2 = (act_inv_angular_5_0 * h_angular_first_5_2);
  ap_fixed<32,6> f_angular_3_temp_5_yMinus = (f_angular_3_temp_5_yTimes1 - f_angular_3_temp_5_yTimes2);
  ap_fixed<32,6> f_angular_3_temp_5_zTimes1 = (act_inv_angular_5_0 * h_angular_first_5_1);
  ap_fixed<32,5> f_angular_3_temp_5_zTimes2 = (act_inv_angular_5_1 * h_angular_first_5_0);
  ap_fixed<32,6> f_angular_3_temp_5_zMinus = (f_angular_3_temp_5_zTimes1 - f_angular_3_temp_5_zTimes2);
  ap_fixed<32,6> f_angular_3_temp_5_0 = f_angular_3_temp_5_xMinus;
  ap_fixed<32,6> f_angular_3_temp_5_1 = f_angular_3_temp_5_yMinus;
  ap_fixed<32,6> f_angular_3_temp_5_2 = f_angular_3_temp_5_zMinus;
  ap_fixed<32,8> f_angular_3_5_2 = (f_angular_2_5_2 + f_angular_3_temp_5_2);
  ap_fixed<32,8> f_angular_3_5_1 = (f_angular_2_5_1 + f_angular_3_temp_5_1);
  ap_fixed<32,7> f_angular_3_5_0 = (f_angular_2_5_0 + f_angular_3_temp_5_0);
  ap_fixed<32,12> f_angular_4_temp_5_xTimes1 = (act_inv_linear_5_1 * h_linear_5_2);
  ap_fixed<32,12> f_angular_4_temp_5_xTimes2 = (act_inv_linear_5_2 * h_linear_5_1);
  ap_fixed<32,13> f_angular_4_temp_5_xMinus = (f_angular_4_temp_5_xTimes1 - f_angular_4_temp_5_xTimes2);
  ap_fixed<32,12> f_angular_4_temp_5_yTimes1 = (act_inv_linear_5_2 * h_linear_5_0);
  ap_fixed<32,12> f_angular_4_temp_5_yTimes2 = (act_inv_linear_5_0 * h_linear_5_2);
  ap_fixed<32,13> f_angular_4_temp_5_yMinus = (f_angular_4_temp_5_yTimes1 - f_angular_4_temp_5_yTimes2);
  ap_fixed<32,12> f_angular_4_temp_5_zTimes1 = (act_inv_linear_5_0 * h_linear_5_1);
  ap_fixed<32,12> f_angular_4_temp_5_zTimes2 = (act_inv_linear_5_1 * h_linear_5_0);
  ap_fixed<32,13> f_angular_4_temp_5_zMinus = (f_angular_4_temp_5_zTimes1 - f_angular_4_temp_5_zTimes2);
  ap_fixed<32,13> f_angular_4_temp_5_0 = f_angular_4_temp_5_xMinus;
  ap_fixed<32,13> f_angular_4_temp_5_1 = f_angular_4_temp_5_yMinus;
  ap_fixed<32,13> f_angular_4_temp_5_2 = f_angular_4_temp_5_zMinus;
  ap_fixed<32,13> f_angular_4_5_2 = (f_angular_3_5_2 + f_angular_4_temp_5_2);
  ap_fixed<32,13> f_angular_4_5_1 = (f_angular_3_5_1 + f_angular_4_temp_5_1);
  ap_fixed<32,13> f_angular_4_5_0 = (f_angular_3_5_0 + f_angular_4_temp_5_0);
  ap_fixed<32,4> h_rnea_firstpass5_5 = h_angular_5_2;
  ap_fixed<32,3> h_rnea_firstpass5_4 = h_angular_5_1;
  ap_fixed<32,2> h_rnea_firstpass5_3 = h_angular_5_0;
  ap_fixed<32,7> h_rnea_firstpass5_2 = h_linear_5_2;
  ap_fixed<32,7> h_rnea_firstpass5_1 = h_linear_5_1;
  ap_fixed<32,7> h_rnea_firstpass5_0 = h_linear_5_0;
  ap_fixed<32,13> f_rnea_firstpass5_5 = f_angular_4_5_2;
  ap_fixed<32,13> f_rnea_firstpass5_4 = f_angular_4_5_1;
  ap_fixed<32,13> f_rnea_firstpass5_3 = f_angular_4_5_0;
  ap_fixed<32,14> f_rnea_firstpass5_2 = f_linear_4_5_2;
  ap_fixed<32,14> f_rnea_firstpass5_1 = f_linear_4_5_1;
  ap_fixed<32,14> f_rnea_firstpass5_0 = f_linear_4_5_0;
  ap_fixed<32,7> new_v_5_5 = act_inv_angular_5_2;
  ap_fixed<32,7> new_v_5_4 = act_inv_angular_5_1;
  ap_fixed<32,7> new_v_5_3 = act_inv_angular_5_0;
  ap_fixed<32,6> new_v_5_2 = act_inv_linear_5_2;
  ap_fixed<32,6> new_v_5_1 = act_inv_linear_5_1;
  ap_fixed<32,6> new_v_5_0 = act_inv_linear_5_0;
  ap_fixed<32,13> data_tau_temp_5 = f_rnea_firstpass5_5;
  ap_fixed<32,14> f_linear_5_2 = f_rnea_firstpass5_2;
  ap_fixed<32,14> f_linear_5_1 = f_rnea_firstpass5_1;
  ap_fixed<32,14> f_linear_5_0 = f_rnea_firstpass5_0;
  ap_fixed<32,13> f_angular_5_2 = f_rnea_firstpass5_5;
  ap_fixed<32,13> f_angular_5_1 = f_rnea_firstpass5_4;
  ap_fixed<32,13> f_angular_5_0 = f_rnea_firstpass5_3;
  ap_fixed<32,14> new_f_linear_5_0_times_0 = (limi_rotation_5_0_0 * f_linear_5_0);
  ap_fixed<32,14> new_f_linear_5_0_times_1 = (limi_rotation_5_0_1 * f_linear_5_1);
  ap_fixed<32,1> new_f_linear_5_0_times_2 = (limi_rotation_5_0_2 * f_linear_5_2);
  ap_fixed<32,14> new_f_linear_5_0_sum_0 = new_f_linear_5_0_times_0;
  ap_fixed<32,15> new_f_linear_5_0_sum_1 = (new_f_linear_5_0_sum_0 + new_f_linear_5_0_times_1);
  ap_fixed<32,15> new_f_linear_5_0_sum_2 = (new_f_linear_5_0_sum_1 + new_f_linear_5_0_times_2);
  ap_fixed<32,15> new_f_linear_5_0 = new_f_linear_5_0_sum_2;
  ap_fixed<32,1> new_f_linear_5_1_times_0 = (limi_rotation_5_1_0 * f_linear_5_0);
  ap_fixed<32,1> new_f_linear_5_1_times_1 = (limi_rotation_5_1_1 * f_linear_5_1);
  ap_fixed<32,14> new_f_linear_5_1_times_2 = (limi_rotation_5_1_2 * f_linear_5_2);
  ap_fixed<32,1> new_f_linear_5_1_sum_0 = new_f_linear_5_1_times_0;
  ap_fixed<32,1> new_f_linear_5_1_sum_1 = (new_f_linear_5_1_sum_0 + new_f_linear_5_1_times_1);
  ap_fixed<32,14> new_f_linear_5_1_sum_2 = (new_f_linear_5_1_sum_1 + new_f_linear_5_1_times_2);
  ap_fixed<32,14> new_f_linear_5_1 = new_f_linear_5_1_sum_2;
  ap_fixed<32,14> new_f_linear_5_2_times_0 = (limi_rotation_5_2_0 * f_linear_5_0);
  ap_fixed<32,14> new_f_linear_5_2_times_1 = (limi_rotation_5_2_1 * f_linear_5_1);
  ap_fixed<32,1> new_f_linear_5_2_times_2 = (limi_rotation_5_2_2 * f_linear_5_2);
  ap_fixed<32,14> new_f_linear_5_2_sum_0 = new_f_linear_5_2_times_0;
  ap_fixed<32,15> new_f_linear_5_2_sum_1 = (new_f_linear_5_2_sum_0 + new_f_linear_5_2_times_1);
  ap_fixed<32,15> new_f_linear_5_2_sum_2 = (new_f_linear_5_2_sum_1 + new_f_linear_5_2_times_2);
  ap_fixed<32,15> new_f_linear_5_2 = new_f_linear_5_2_sum_2;
  ap_fixed<32,13> new_f_angular_temp_5_0_times_0 = (limi_rotation_5_0_0 * f_angular_5_0);
  ap_fixed<32,13> new_f_angular_temp_5_0_times_1 = (limi_rotation_5_0_1 * f_angular_5_1);
  ap_fixed<32,1> new_f_angular_temp_5_0_times_2 = (limi_rotation_5_0_2 * f_angular_5_2);
  ap_fixed<32,13> new_f_angular_temp_5_0_sum_0 = new_f_angular_temp_5_0_times_0;
  ap_fixed<32,14> new_f_angular_temp_5_0_sum_1 = (new_f_angular_temp_5_0_sum_0 + new_f_angular_temp_5_0_times_1);
  ap_fixed<32,14> new_f_angular_temp_5_0_sum_2 = (new_f_angular_temp_5_0_sum_1 + new_f_angular_temp_5_0_times_2);
  ap_fixed<32,14> new_f_angular_temp_5_0 = new_f_angular_temp_5_0_sum_2;
  ap_fixed<32,1> new_f_angular_temp_5_1_times_0 = (limi_rotation_5_1_0 * f_angular_5_0);
  ap_fixed<32,1> new_f_angular_temp_5_1_times_1 = (limi_rotation_5_1_1 * f_angular_5_1);
  ap_fixed<32,13> new_f_angular_temp_5_1_times_2 = (limi_rotation_5_1_2 * f_angular_5_2);
  ap_fixed<32,1> new_f_angular_temp_5_1_sum_0 = new_f_angular_temp_5_1_times_0;
  ap_fixed<32,1> new_f_angular_temp_5_1_sum_1 = (new_f_angular_temp_5_1_sum_0 + new_f_angular_temp_5_1_times_1);
  ap_fixed<32,13> new_f_angular_temp_5_1_sum_2 = (new_f_angular_temp_5_1_sum_1 + new_f_angular_temp_5_1_times_2);
  ap_fixed<32,13> new_f_angular_temp_5_1 = new_f_angular_temp_5_1_sum_2;
  ap_fixed<32,13> new_f_angular_temp_5_2_times_0 = (limi_rotation_5_2_0 * f_angular_5_0);
  ap_fixed<32,13> new_f_angular_temp_5_2_times_1 = (limi_rotation_5_2_1 * f_angular_5_1);
  ap_fixed<32,1> new_f_angular_temp_5_2_times_2 = (limi_rotation_5_2_2 * f_angular_5_2);
  ap_fixed<32,13> new_f_angular_temp_5_2_sum_0 = new_f_angular_temp_5_2_times_0;
  ap_fixed<32,14> new_f_angular_temp_5_2_sum_1 = (new_f_angular_temp_5_2_sum_0 + new_f_angular_temp_5_2_times_1);
  ap_fixed<32,14> new_f_angular_temp_5_2_sum_2 = (new_f_angular_temp_5_2_sum_1 + new_f_angular_temp_5_2_times_2);
  ap_fixed<32,14> new_f_angular_temp_5_2 = new_f_angular_temp_5_2_sum_2;
  ap_fixed<32,1> f_angular_cross_5_xTimes1 = (limi_translation_5_1 * new_f_linear_5_2);
  ap_fixed<32,1> f_angular_cross_5_xTimes2 = (limi_translation_5_2 * new_f_linear_5_1);
  ap_fixed<32,1> f_angular_cross_5_xMinus = (f_angular_cross_5_xTimes1 - f_angular_cross_5_xTimes2);
  ap_fixed<32,1> f_angular_cross_5_yTimes1 = (limi_translation_5_2 * new_f_linear_5_0);
  ap_fixed<32,1> f_angular_cross_5_yTimes2 = (limi_translation_5_0 * new_f_linear_5_2);
  ap_fixed<32,1> f_angular_cross_5_yMinus = (f_angular_cross_5_yTimes1 - f_angular_cross_5_yTimes2);
  ap_fixed<32,1> f_angular_cross_5_zTimes1 = (limi_translation_5_0 * new_f_linear_5_1);
  ap_fixed<32,1> f_angular_cross_5_zTimes2 = (limi_translation_5_1 * new_f_linear_5_0);
  ap_fixed<32,1> f_angular_cross_5_zMinus = (f_angular_cross_5_zTimes1 - f_angular_cross_5_zTimes2);
  ap_fixed<32,1> f_angular_cross_5_0 = f_angular_cross_5_xMinus;
  ap_fixed<32,1> f_angular_cross_5_1 = f_angular_cross_5_yMinus;
  ap_fixed<32,1> f_angular_cross_5_2 = f_angular_cross_5_zMinus;
  ap_fixed<32,14> new_f_angular_5_2 = (new_f_angular_temp_5_2 + f_angular_cross_5_2);
  ap_fixed<32,13> new_f_angular_5_1 = (new_f_angular_temp_5_1 + f_angular_cross_5_1);
  ap_fixed<32,14> new_f_angular_5_0 = (new_f_angular_temp_5_0 + f_angular_cross_5_0);
  ap_fixed<32,14> new_f_5_5 = new_f_angular_5_2;
  ap_fixed<32,13> new_f_5_4 = new_f_angular_5_1;
  ap_fixed<32,14> new_f_5_3 = new_f_angular_5_0;
  ap_fixed<32,15> new_f_5_2 = new_f_linear_5_2;
  ap_fixed<32,14> new_f_5_1 = new_f_linear_5_1;
  ap_fixed<32,15> new_f_5_0 = new_f_linear_5_0;
  ap_fixed<32,14> new_data_f_parent_5_5 = (f_rnea_firstpass4_5 + new_f_5_5);
  ap_fixed<32,13> new_data_f_parent_5_4 = (f_rnea_firstpass4_4 + new_f_5_4);
  ap_fixed<32,14> new_data_f_parent_5_3 = (f_rnea_firstpass4_3 + new_f_5_3);
  ap_fixed<32,15> new_data_f_parent_5_2 = (f_rnea_firstpass4_2 + new_f_5_2);
  ap_fixed<32,15> new_data_f_parent_5_1 = (f_rnea_firstpass4_1 + new_f_5_1);
  ap_fixed<32,15> new_data_f_parent_5_0 = (f_rnea_firstpass4_0 + new_f_5_0);
  ap_fixed<32,14> data_tau_temp_4 = new_data_f_parent_5_5;
  ap_fixed<32,15> f_linear_4_2 = new_data_f_parent_5_2;
  ap_fixed<32,15> f_linear_4_1 = new_data_f_parent_5_1;
  ap_fixed<32,15> f_linear_4_0 = new_data_f_parent_5_0;
  ap_fixed<32,14> f_angular_4_2 = new_data_f_parent_5_5;
  ap_fixed<32,13> f_angular_4_1 = new_data_f_parent_5_4;
  ap_fixed<32,14> f_angular_4_0 = new_data_f_parent_5_3;
  ap_fixed<32,15> new_f_linear_4_0_times_0 = (limi_rotation_4_0_0 * f_linear_4_0);
  ap_fixed<32,15> new_f_linear_4_0_times_1 = (limi_rotation_4_0_1 * f_linear_4_1);
  ap_fixed<32,1> new_f_linear_4_0_times_2 = (limi_rotation_4_0_2 * f_linear_4_2);
  ap_fixed<32,15> new_f_linear_4_0_sum_0 = new_f_linear_4_0_times_0;
  ap_fixed<32,16> new_f_linear_4_0_sum_1 = (new_f_linear_4_0_sum_0 + new_f_linear_4_0_times_1);
  ap_fixed<32,16> new_f_linear_4_0_sum_2 = (new_f_linear_4_0_sum_1 + new_f_linear_4_0_times_2);
  ap_fixed<32,16> new_f_linear_4_0 = new_f_linear_4_0_sum_2;
  ap_fixed<32,1> new_f_linear_4_1_times_0 = (limi_rotation_4_1_0 * f_linear_4_0);
  ap_fixed<32,1> new_f_linear_4_1_times_1 = (limi_rotation_4_1_1 * f_linear_4_1);
  ap_fixed<32,15> new_f_linear_4_1_times_2 = (limi_rotation_4_1_2 * f_linear_4_2);
  ap_fixed<32,1> new_f_linear_4_1_sum_0 = new_f_linear_4_1_times_0;
  ap_fixed<32,1> new_f_linear_4_1_sum_1 = (new_f_linear_4_1_sum_0 + new_f_linear_4_1_times_1);
  ap_fixed<32,15> new_f_linear_4_1_sum_2 = (new_f_linear_4_1_sum_1 + new_f_linear_4_1_times_2);
  ap_fixed<32,15> new_f_linear_4_1 = new_f_linear_4_1_sum_2;
  ap_fixed<32,15> new_f_linear_4_2_times_0 = (limi_rotation_4_2_0 * f_linear_4_0);
  ap_fixed<32,15> new_f_linear_4_2_times_1 = (limi_rotation_4_2_1 * f_linear_4_1);
  ap_fixed<32,1> new_f_linear_4_2_times_2 = (limi_rotation_4_2_2 * f_linear_4_2);
  ap_fixed<32,15> new_f_linear_4_2_sum_0 = new_f_linear_4_2_times_0;
  ap_fixed<32,16> new_f_linear_4_2_sum_1 = (new_f_linear_4_2_sum_0 + new_f_linear_4_2_times_1);
  ap_fixed<32,16> new_f_linear_4_2_sum_2 = (new_f_linear_4_2_sum_1 + new_f_linear_4_2_times_2);
  ap_fixed<32,16> new_f_linear_4_2 = new_f_linear_4_2_sum_2;
  ap_fixed<32,14> new_f_angular_temp_4_0_times_0 = (limi_rotation_4_0_0 * f_angular_4_0);
  ap_fixed<32,13> new_f_angular_temp_4_0_times_1 = (limi_rotation_4_0_1 * f_angular_4_1);
  ap_fixed<32,1> new_f_angular_temp_4_0_times_2 = (limi_rotation_4_0_2 * f_angular_4_2);
  ap_fixed<32,14> new_f_angular_temp_4_0_sum_0 = new_f_angular_temp_4_0_times_0;
  ap_fixed<32,15> new_f_angular_temp_4_0_sum_1 = (new_f_angular_temp_4_0_sum_0 + new_f_angular_temp_4_0_times_1);
  ap_fixed<32,15> new_f_angular_temp_4_0_sum_2 = (new_f_angular_temp_4_0_sum_1 + new_f_angular_temp_4_0_times_2);
  ap_fixed<32,15> new_f_angular_temp_4_0 = new_f_angular_temp_4_0_sum_2;
  ap_fixed<32,1> new_f_angular_temp_4_1_times_0 = (limi_rotation_4_1_0 * f_angular_4_0);
  ap_fixed<32,1> new_f_angular_temp_4_1_times_1 = (limi_rotation_4_1_1 * f_angular_4_1);
  ap_fixed<32,14> new_f_angular_temp_4_1_times_2 = (limi_rotation_4_1_2 * f_angular_4_2);
  ap_fixed<32,1> new_f_angular_temp_4_1_sum_0 = new_f_angular_temp_4_1_times_0;
  ap_fixed<32,1> new_f_angular_temp_4_1_sum_1 = (new_f_angular_temp_4_1_sum_0 + new_f_angular_temp_4_1_times_1);
  ap_fixed<32,14> new_f_angular_temp_4_1_sum_2 = (new_f_angular_temp_4_1_sum_1 + new_f_angular_temp_4_1_times_2);
  ap_fixed<32,14> new_f_angular_temp_4_1 = new_f_angular_temp_4_1_sum_2;
  ap_fixed<32,14> new_f_angular_temp_4_2_times_0 = (limi_rotation_4_2_0 * f_angular_4_0);
  ap_fixed<32,13> new_f_angular_temp_4_2_times_1 = (limi_rotation_4_2_1 * f_angular_4_1);
  ap_fixed<32,1> new_f_angular_temp_4_2_times_2 = (limi_rotation_4_2_2 * f_angular_4_2);
  ap_fixed<32,14> new_f_angular_temp_4_2_sum_0 = new_f_angular_temp_4_2_times_0;
  ap_fixed<32,15> new_f_angular_temp_4_2_sum_1 = (new_f_angular_temp_4_2_sum_0 + new_f_angular_temp_4_2_times_1);
  ap_fixed<32,15> new_f_angular_temp_4_2_sum_2 = (new_f_angular_temp_4_2_sum_1 + new_f_angular_temp_4_2_times_2);
  ap_fixed<32,15> new_f_angular_temp_4_2 = new_f_angular_temp_4_2_sum_2;
  ap_fixed<32,15> f_angular_cross_4_xTimes1 = (limi_translation_4_1 * new_f_linear_4_2);
  ap_fixed<32,1> f_angular_cross_4_xTimes2 = (limi_translation_4_2 * new_f_linear_4_1);
  ap_fixed<32,15> f_angular_cross_4_xMinus = (f_angular_cross_4_xTimes1 - f_angular_cross_4_xTimes2);
  ap_fixed<32,1> f_angular_cross_4_yTimes1 = (limi_translation_4_2 * new_f_linear_4_0);
  ap_fixed<32,12> f_angular_cross_4_yTimes2 = (limi_translation_4_0 * new_f_linear_4_2);
  ap_fixed<32,12> f_angular_cross_4_yMinus = (f_angular_cross_4_yTimes1 - f_angular_cross_4_yTimes2);
  ap_fixed<32,12> f_angular_cross_4_zTimes1 = (limi_translation_4_0 * new_f_linear_4_1);
  ap_fixed<32,15> f_angular_cross_4_zTimes2 = (limi_translation_4_1 * new_f_linear_4_0);
  ap_fixed<32,15> f_angular_cross_4_zMinus = (f_angular_cross_4_zTimes1 - f_angular_cross_4_zTimes2);
  ap_fixed<32,15> f_angular_cross_4_0 = f_angular_cross_4_xMinus;
  ap_fixed<32,12> f_angular_cross_4_1 = f_angular_cross_4_yMinus;
  ap_fixed<32,15> f_angular_cross_4_2 = f_angular_cross_4_zMinus;
  ap_fixed<32,16> new_f_angular_4_2 = (new_f_angular_temp_4_2 + f_angular_cross_4_2);
  ap_fixed<32,15> new_f_angular_4_1 = (new_f_angular_temp_4_1 + f_angular_cross_4_1);
  ap_fixed<32,16> new_f_angular_4_0 = (new_f_angular_temp_4_0 + f_angular_cross_4_0);
  ap_fixed<32,16> new_f_4_5 = new_f_angular_4_2;
  ap_fixed<32,15> new_f_4_4 = new_f_angular_4_1;
  ap_fixed<32,16> new_f_4_3 = new_f_angular_4_0;
  ap_fixed<32,16> new_f_4_2 = new_f_linear_4_2;
  ap_fixed<32,15> new_f_4_1 = new_f_linear_4_1;
  ap_fixed<32,16> new_f_4_0 = new_f_linear_4_0;
  ap_fixed<32,16> new_data_f_parent_4_5 = (f_rnea_firstpass3_5 + new_f_4_5);
  ap_fixed<32,15> new_data_f_parent_4_4 = (f_rnea_firstpass3_4 + new_f_4_4);
  ap_fixed<32,16> new_data_f_parent_4_3 = (f_rnea_firstpass3_3 + new_f_4_3);
  ap_fixed<32,16> new_data_f_parent_4_2 = (f_rnea_firstpass3_2 + new_f_4_2);
  ap_fixed<32,15> new_data_f_parent_4_1 = (f_rnea_firstpass3_1 + new_f_4_1);
  ap_fixed<32,16> new_data_f_parent_4_0 = (f_rnea_firstpass3_0 + new_f_4_0);
  ap_fixed<32,16> data_tau_temp_3 = new_data_f_parent_4_5;
  ap_fixed<32,16> f_linear_3_2 = new_data_f_parent_4_2;
  ap_fixed<32,15> f_linear_3_1 = new_data_f_parent_4_1;
  ap_fixed<32,16> f_linear_3_0 = new_data_f_parent_4_0;
  ap_fixed<32,16> f_angular_3_2 = new_data_f_parent_4_5;
  ap_fixed<32,15> f_angular_3_1 = new_data_f_parent_4_4;
  ap_fixed<32,16> f_angular_3_0 = new_data_f_parent_4_3;
  ap_fixed<32,16> new_f_linear_3_0_times_0 = (limi_rotation_3_0_0 * f_linear_3_0);
  ap_fixed<32,15> new_f_linear_3_0_times_1 = (limi_rotation_3_0_1 * f_linear_3_1);
  ap_fixed<32,1> new_f_linear_3_0_times_2 = (limi_rotation_3_0_2 * f_linear_3_2);
  ap_fixed<32,16> new_f_linear_3_0_sum_0 = new_f_linear_3_0_times_0;
  ap_fixed<32,17> new_f_linear_3_0_sum_1 = (new_f_linear_3_0_sum_0 + new_f_linear_3_0_times_1);
  ap_fixed<32,17> new_f_linear_3_0_sum_2 = (new_f_linear_3_0_sum_1 + new_f_linear_3_0_times_2);
  ap_fixed<32,17> new_f_linear_3_0 = new_f_linear_3_0_sum_2;
  ap_fixed<32,1> new_f_linear_3_1_times_0 = (limi_rotation_3_1_0 * f_linear_3_0);
  ap_fixed<32,1> new_f_linear_3_1_times_1 = (limi_rotation_3_1_1 * f_linear_3_1);
  ap_fixed<32,16> new_f_linear_3_1_times_2 = (limi_rotation_3_1_2 * f_linear_3_2);
  ap_fixed<32,1> new_f_linear_3_1_sum_0 = new_f_linear_3_1_times_0;
  ap_fixed<32,1> new_f_linear_3_1_sum_1 = (new_f_linear_3_1_sum_0 + new_f_linear_3_1_times_1);
  ap_fixed<32,16> new_f_linear_3_1_sum_2 = (new_f_linear_3_1_sum_1 + new_f_linear_3_1_times_2);
  ap_fixed<32,16> new_f_linear_3_1 = new_f_linear_3_1_sum_2;
  ap_fixed<32,16> new_f_linear_3_2_times_0 = (limi_rotation_3_2_0 * f_linear_3_0);
  ap_fixed<32,15> new_f_linear_3_2_times_1 = (limi_rotation_3_2_1 * f_linear_3_1);
  ap_fixed<32,1> new_f_linear_3_2_times_2 = (limi_rotation_3_2_2 * f_linear_3_2);
  ap_fixed<32,16> new_f_linear_3_2_sum_0 = new_f_linear_3_2_times_0;
  ap_fixed<32,17> new_f_linear_3_2_sum_1 = (new_f_linear_3_2_sum_0 + new_f_linear_3_2_times_1);
  ap_fixed<32,17> new_f_linear_3_2_sum_2 = (new_f_linear_3_2_sum_1 + new_f_linear_3_2_times_2);
  ap_fixed<32,17> new_f_linear_3_2 = new_f_linear_3_2_sum_2;
  ap_fixed<32,16> new_f_angular_temp_3_0_times_0 = (limi_rotation_3_0_0 * f_angular_3_0);
  ap_fixed<32,15> new_f_angular_temp_3_0_times_1 = (limi_rotation_3_0_1 * f_angular_3_1);
  ap_fixed<32,1> new_f_angular_temp_3_0_times_2 = (limi_rotation_3_0_2 * f_angular_3_2);
  ap_fixed<32,16> new_f_angular_temp_3_0_sum_0 = new_f_angular_temp_3_0_times_0;
  ap_fixed<32,16> new_f_angular_temp_3_0_sum_1 = (new_f_angular_temp_3_0_sum_0 + new_f_angular_temp_3_0_times_1);
  ap_fixed<32,16> new_f_angular_temp_3_0_sum_2 = (new_f_angular_temp_3_0_sum_1 + new_f_angular_temp_3_0_times_2);
  ap_fixed<32,16> new_f_angular_temp_3_0 = new_f_angular_temp_3_0_sum_2;
  ap_fixed<32,1> new_f_angular_temp_3_1_times_0 = (limi_rotation_3_1_0 * f_angular_3_0);
  ap_fixed<32,1> new_f_angular_temp_3_1_times_1 = (limi_rotation_3_1_1 * f_angular_3_1);
  ap_fixed<32,16> new_f_angular_temp_3_1_times_2 = (limi_rotation_3_1_2 * f_angular_3_2);
  ap_fixed<32,1> new_f_angular_temp_3_1_sum_0 = new_f_angular_temp_3_1_times_0;
  ap_fixed<32,1> new_f_angular_temp_3_1_sum_1 = (new_f_angular_temp_3_1_sum_0 + new_f_angular_temp_3_1_times_1);
  ap_fixed<32,16> new_f_angular_temp_3_1_sum_2 = (new_f_angular_temp_3_1_sum_1 + new_f_angular_temp_3_1_times_2);
  ap_fixed<32,16> new_f_angular_temp_3_1 = new_f_angular_temp_3_1_sum_2;
  ap_fixed<32,16> new_f_angular_temp_3_2_times_0 = (limi_rotation_3_2_0 * f_angular_3_0);
  ap_fixed<32,15> new_f_angular_temp_3_2_times_1 = (limi_rotation_3_2_1 * f_angular_3_1);
  ap_fixed<32,1> new_f_angular_temp_3_2_times_2 = (limi_rotation_3_2_2 * f_angular_3_2);
  ap_fixed<32,16> new_f_angular_temp_3_2_sum_0 = new_f_angular_temp_3_2_times_0;
  ap_fixed<32,16> new_f_angular_temp_3_2_sum_1 = (new_f_angular_temp_3_2_sum_0 + new_f_angular_temp_3_2_times_1);
  ap_fixed<32,16> new_f_angular_temp_3_2_sum_2 = (new_f_angular_temp_3_2_sum_1 + new_f_angular_temp_3_2_times_2);
  ap_fixed<32,16> new_f_angular_temp_3_2 = new_f_angular_temp_3_2_sum_2;
  ap_fixed<32,1> f_angular_cross_3_xTimes1 = (limi_translation_3_1 * new_f_linear_3_2);
  ap_fixed<32,1> f_angular_cross_3_xTimes2 = (limi_translation_3_2 * new_f_linear_3_1);
  ap_fixed<32,1> f_angular_cross_3_xMinus = (f_angular_cross_3_xTimes1 - f_angular_cross_3_xTimes2);
  ap_fixed<32,1> f_angular_cross_3_yTimes1 = (limi_translation_3_2 * new_f_linear_3_0);
  ap_fixed<32,13> f_angular_cross_3_yTimes2 = (limi_translation_3_0 * new_f_linear_3_2);
  ap_fixed<32,13> f_angular_cross_3_yMinus = (f_angular_cross_3_yTimes1 - f_angular_cross_3_yTimes2);
  ap_fixed<32,12> f_angular_cross_3_zTimes1 = (limi_translation_3_0 * new_f_linear_3_1);
  ap_fixed<32,1> f_angular_cross_3_zTimes2 = (limi_translation_3_1 * new_f_linear_3_0);
  ap_fixed<32,12> f_angular_cross_3_zMinus = (f_angular_cross_3_zTimes1 - f_angular_cross_3_zTimes2);
  ap_fixed<32,1> f_angular_cross_3_0 = f_angular_cross_3_xMinus;
  ap_fixed<32,13> f_angular_cross_3_1 = f_angular_cross_3_yMinus;
  ap_fixed<32,12> f_angular_cross_3_2 = f_angular_cross_3_zMinus;
  ap_fixed<32,16> new_f_angular_3_2 = (new_f_angular_temp_3_2 + f_angular_cross_3_2);
  ap_fixed<32,16> new_f_angular_3_1 = (new_f_angular_temp_3_1 + f_angular_cross_3_1);
  ap_fixed<32,16> new_f_angular_3_0 = (new_f_angular_temp_3_0 + f_angular_cross_3_0);
  ap_fixed<32,16> new_f_3_5 = new_f_angular_3_2;
  ap_fixed<32,16> new_f_3_4 = new_f_angular_3_1;
  ap_fixed<32,16> new_f_3_3 = new_f_angular_3_0;
  ap_fixed<32,17> new_f_3_2 = new_f_linear_3_2;
  ap_fixed<32,16> new_f_3_1 = new_f_linear_3_1;
  ap_fixed<32,17> new_f_3_0 = new_f_linear_3_0;
  ap_fixed<32,16> new_data_f_parent_3_5 = (f_rnea_firstpass2_5 + new_f_3_5);
  ap_fixed<32,16> new_data_f_parent_3_4 = (f_rnea_firstpass2_4 + new_f_3_4);
  ap_fixed<32,16> new_data_f_parent_3_3 = (f_rnea_firstpass2_3 + new_f_3_3);
  ap_fixed<32,17> new_data_f_parent_3_2 = (f_rnea_firstpass2_2 + new_f_3_2);
  ap_fixed<32,16> new_data_f_parent_3_1 = (f_rnea_firstpass2_1 + new_f_3_1);
  ap_fixed<32,17> new_data_f_parent_3_0 = (f_rnea_firstpass2_0 + new_f_3_0);
  ap_fixed<32,16> data_tau_temp_2 = new_data_f_parent_3_5;
  ap_fixed<32,17> f_linear_2_2 = new_data_f_parent_3_2;
  ap_fixed<32,16> f_linear_2_1 = new_data_f_parent_3_1;
  ap_fixed<32,17> f_linear_2_0 = new_data_f_parent_3_0;
  ap_fixed<32,16> f_angular_2_2 = new_data_f_parent_3_5;
  ap_fixed<32,16> f_angular_2_1 = new_data_f_parent_3_4;
  ap_fixed<32,16> f_angular_2_0 = new_data_f_parent_3_3;
  ap_fixed<32,17> new_f_linear_2_0_times_0 = (limi_rotation_2_0_0 * f_linear_2_0);
  ap_fixed<32,16> new_f_linear_2_0_times_1 = (limi_rotation_2_0_1 * f_linear_2_1);
  ap_fixed<32,1> new_f_linear_2_0_times_2 = (limi_rotation_2_0_2 * f_linear_2_2);
  ap_fixed<32,17> new_f_linear_2_0_sum_0 = new_f_linear_2_0_times_0;
  ap_fixed<32,17> new_f_linear_2_0_sum_1 = (new_f_linear_2_0_sum_0 + new_f_linear_2_0_times_1);
  ap_fixed<32,17> new_f_linear_2_0_sum_2 = (new_f_linear_2_0_sum_1 + new_f_linear_2_0_times_2);
  ap_fixed<32,17> new_f_linear_2_0 = new_f_linear_2_0_sum_2;
  ap_fixed<32,1> new_f_linear_2_1_times_0 = (limi_rotation_2_1_0 * f_linear_2_0);
  ap_fixed<32,1> new_f_linear_2_1_times_1 = (limi_rotation_2_1_1 * f_linear_2_1);
  ap_fixed<32,17> new_f_linear_2_1_times_2 = (limi_rotation_2_1_2 * f_linear_2_2);
  ap_fixed<32,1> new_f_linear_2_1_sum_0 = new_f_linear_2_1_times_0;
  ap_fixed<32,1> new_f_linear_2_1_sum_1 = (new_f_linear_2_1_sum_0 + new_f_linear_2_1_times_1);
  ap_fixed<32,17> new_f_linear_2_1_sum_2 = (new_f_linear_2_1_sum_1 + new_f_linear_2_1_times_2);
  ap_fixed<32,17> new_f_linear_2_1 = new_f_linear_2_1_sum_2;
  ap_fixed<32,17> new_f_linear_2_2_times_0 = (limi_rotation_2_2_0 * f_linear_2_0);
  ap_fixed<32,16> new_f_linear_2_2_times_1 = (limi_rotation_2_2_1 * f_linear_2_1);
  ap_fixed<32,1> new_f_linear_2_2_times_2 = (limi_rotation_2_2_2 * f_linear_2_2);
  ap_fixed<32,17> new_f_linear_2_2_sum_0 = new_f_linear_2_2_times_0;
  ap_fixed<32,17> new_f_linear_2_2_sum_1 = (new_f_linear_2_2_sum_0 + new_f_linear_2_2_times_1);
  ap_fixed<32,17> new_f_linear_2_2_sum_2 = (new_f_linear_2_2_sum_1 + new_f_linear_2_2_times_2);
  ap_fixed<32,17> new_f_linear_2_2 = new_f_linear_2_2_sum_2;
  ap_fixed<32,16> new_f_angular_temp_2_0_times_0 = (limi_rotation_2_0_0 * f_angular_2_0);
  ap_fixed<32,16> new_f_angular_temp_2_0_times_1 = (limi_rotation_2_0_1 * f_angular_2_1);
  ap_fixed<32,1> new_f_angular_temp_2_0_times_2 = (limi_rotation_2_0_2 * f_angular_2_2);
  ap_fixed<32,16> new_f_angular_temp_2_0_sum_0 = new_f_angular_temp_2_0_times_0;
  ap_fixed<32,17> new_f_angular_temp_2_0_sum_1 = (new_f_angular_temp_2_0_sum_0 + new_f_angular_temp_2_0_times_1);
  ap_fixed<32,17> new_f_angular_temp_2_0_sum_2 = (new_f_angular_temp_2_0_sum_1 + new_f_angular_temp_2_0_times_2);
  ap_fixed<32,17> new_f_angular_temp_2_0 = new_f_angular_temp_2_0_sum_2;
  ap_fixed<32,1> new_f_angular_temp_2_1_times_0 = (limi_rotation_2_1_0 * f_angular_2_0);
  ap_fixed<32,1> new_f_angular_temp_2_1_times_1 = (limi_rotation_2_1_1 * f_angular_2_1);
  ap_fixed<32,16> new_f_angular_temp_2_1_times_2 = (limi_rotation_2_1_2 * f_angular_2_2);
  ap_fixed<32,1> new_f_angular_temp_2_1_sum_0 = new_f_angular_temp_2_1_times_0;
  ap_fixed<32,1> new_f_angular_temp_2_1_sum_1 = (new_f_angular_temp_2_1_sum_0 + new_f_angular_temp_2_1_times_1);
  ap_fixed<32,16> new_f_angular_temp_2_1_sum_2 = (new_f_angular_temp_2_1_sum_1 + new_f_angular_temp_2_1_times_2);
  ap_fixed<32,16> new_f_angular_temp_2_1 = new_f_angular_temp_2_1_sum_2;
  ap_fixed<32,16> new_f_angular_temp_2_2_times_0 = (limi_rotation_2_2_0 * f_angular_2_0);
  ap_fixed<32,16> new_f_angular_temp_2_2_times_1 = (limi_rotation_2_2_1 * f_angular_2_1);
  ap_fixed<32,1> new_f_angular_temp_2_2_times_2 = (limi_rotation_2_2_2 * f_angular_2_2);
  ap_fixed<32,16> new_f_angular_temp_2_2_sum_0 = new_f_angular_temp_2_2_times_0;
  ap_fixed<32,17> new_f_angular_temp_2_2_sum_1 = (new_f_angular_temp_2_2_sum_0 + new_f_angular_temp_2_2_times_1);
  ap_fixed<32,17> new_f_angular_temp_2_2_sum_2 = (new_f_angular_temp_2_2_sum_1 + new_f_angular_temp_2_2_times_2);
  ap_fixed<32,17> new_f_angular_temp_2_2 = new_f_angular_temp_2_2_sum_2;
  ap_fixed<32,16> f_angular_cross_2_xTimes1 = (limi_translation_2_1 * new_f_linear_2_2);
  ap_fixed<32,1> f_angular_cross_2_xTimes2 = (limi_translation_2_2 * new_f_linear_2_1);
  ap_fixed<32,16> f_angular_cross_2_xMinus = (f_angular_cross_2_xTimes1 - f_angular_cross_2_xTimes2);
  ap_fixed<32,1> f_angular_cross_2_yTimes1 = (limi_translation_2_2 * new_f_linear_2_0);
  ap_fixed<32,1> f_angular_cross_2_yTimes2 = (limi_translation_2_0 * new_f_linear_2_2);
  ap_fixed<32,1> f_angular_cross_2_yMinus = (f_angular_cross_2_yTimes1 - f_angular_cross_2_yTimes2);
  ap_fixed<32,1> f_angular_cross_2_zTimes1 = (limi_translation_2_0 * new_f_linear_2_1);
  ap_fixed<32,16> f_angular_cross_2_zTimes2 = (limi_translation_2_1 * new_f_linear_2_0);
  ap_fixed<32,16> f_angular_cross_2_zMinus = (f_angular_cross_2_zTimes1 - f_angular_cross_2_zTimes2);
  ap_fixed<32,16> f_angular_cross_2_0 = f_angular_cross_2_xMinus;
  ap_fixed<32,1> f_angular_cross_2_1 = f_angular_cross_2_yMinus;
  ap_fixed<32,16> f_angular_cross_2_2 = f_angular_cross_2_zMinus;
  ap_fixed<32,18> new_f_angular_2_2 = (new_f_angular_temp_2_2 + f_angular_cross_2_2);
  ap_fixed<32,16> new_f_angular_2_1 = (new_f_angular_temp_2_1 + f_angular_cross_2_1);
  ap_fixed<32,18> new_f_angular_2_0 = (new_f_angular_temp_2_0 + f_angular_cross_2_0);
  ap_fixed<32,18> new_f_2_5 = new_f_angular_2_2;
  ap_fixed<32,16> new_f_2_4 = new_f_angular_2_1;
  ap_fixed<32,18> new_f_2_3 = new_f_angular_2_0;
  ap_fixed<32,17> new_f_2_2 = new_f_linear_2_2;
  ap_fixed<32,17> new_f_2_1 = new_f_linear_2_1;
  ap_fixed<32,17> new_f_2_0 = new_f_linear_2_0;
  ap_fixed<32,18> new_data_f_parent_2_5 = (f_rnea_firstpass1_5 + new_f_2_5);
  ap_fixed<32,16> new_data_f_parent_2_4 = (f_rnea_firstpass1_4 + new_f_2_4);
  ap_fixed<32,18> new_data_f_parent_2_3 = (f_rnea_firstpass1_3 + new_f_2_3);
  ap_fixed<32,17> new_data_f_parent_2_2 = (f_rnea_firstpass1_2 + new_f_2_2);
  ap_fixed<32,17> new_data_f_parent_2_1 = (f_rnea_firstpass1_1 + new_f_2_1);
  ap_fixed<32,17> new_data_f_parent_2_0 = (f_rnea_firstpass1_0 + new_f_2_0);
  ap_fixed<32,18> data_tau_temp_1 = new_data_f_parent_2_5;
  ap_fixed<32,17> f_linear_1_2 = new_data_f_parent_2_2;
  ap_fixed<32,17> f_linear_1_1 = new_data_f_parent_2_1;
  ap_fixed<32,17> f_linear_1_0 = new_data_f_parent_2_0;
  ap_fixed<32,18> f_angular_1_2 = new_data_f_parent_2_5;
  ap_fixed<32,16> f_angular_1_1 = new_data_f_parent_2_4;
  ap_fixed<32,18> f_angular_1_0 = new_data_f_parent_2_3;
  ap_fixed<32,17> new_f_linear_1_0_times_0 = (limi_rotation_1_0_0 * f_linear_1_0);
  ap_fixed<32,17> new_f_linear_1_0_times_1 = (limi_rotation_1_0_1 * f_linear_1_1);
  ap_fixed<32,1> new_f_linear_1_0_times_2 = (limi_rotation_1_0_2 * f_linear_1_2);
  ap_fixed<32,17> new_f_linear_1_0_sum_0 = new_f_linear_1_0_times_0;
  ap_fixed<32,18> new_f_linear_1_0_sum_1 = (new_f_linear_1_0_sum_0 + new_f_linear_1_0_times_1);
  ap_fixed<32,18> new_f_linear_1_0_sum_2 = (new_f_linear_1_0_sum_1 + new_f_linear_1_0_times_2);
  ap_fixed<32,18> new_f_linear_1_0 = new_f_linear_1_0_sum_2;
  ap_fixed<32,1> new_f_linear_1_1_times_0 = (limi_rotation_1_1_0 * f_linear_1_0);
  ap_fixed<32,1> new_f_linear_1_1_times_1 = (limi_rotation_1_1_1 * f_linear_1_1);
  ap_fixed<32,17> new_f_linear_1_1_times_2 = (limi_rotation_1_1_2 * f_linear_1_2);
  ap_fixed<32,1> new_f_linear_1_1_sum_0 = new_f_linear_1_1_times_0;
  ap_fixed<32,1> new_f_linear_1_1_sum_1 = (new_f_linear_1_1_sum_0 + new_f_linear_1_1_times_1);
  ap_fixed<32,17> new_f_linear_1_1_sum_2 = (new_f_linear_1_1_sum_1 + new_f_linear_1_1_times_2);
  ap_fixed<32,17> new_f_linear_1_1 = new_f_linear_1_1_sum_2;
  ap_fixed<32,17> new_f_linear_1_2_times_0 = (limi_rotation_1_2_0 * f_linear_1_0);
  ap_fixed<32,17> new_f_linear_1_2_times_1 = (limi_rotation_1_2_1 * f_linear_1_1);
  ap_fixed<32,1> new_f_linear_1_2_times_2 = (limi_rotation_1_2_2 * f_linear_1_2);
  ap_fixed<32,17> new_f_linear_1_2_sum_0 = new_f_linear_1_2_times_0;
  ap_fixed<32,18> new_f_linear_1_2_sum_1 = (new_f_linear_1_2_sum_0 + new_f_linear_1_2_times_1);
  ap_fixed<32,18> new_f_linear_1_2_sum_2 = (new_f_linear_1_2_sum_1 + new_f_linear_1_2_times_2);
  ap_fixed<32,18> new_f_linear_1_2 = new_f_linear_1_2_sum_2;
  ap_fixed<32,18> new_f_angular_temp_1_0_times_0 = (limi_rotation_1_0_0 * f_angular_1_0);
  ap_fixed<32,16> new_f_angular_temp_1_0_times_1 = (limi_rotation_1_0_1 * f_angular_1_1);
  ap_fixed<32,1> new_f_angular_temp_1_0_times_2 = (limi_rotation_1_0_2 * f_angular_1_2);
  ap_fixed<32,18> new_f_angular_temp_1_0_sum_0 = new_f_angular_temp_1_0_times_0;
  ap_fixed<32,18> new_f_angular_temp_1_0_sum_1 = (new_f_angular_temp_1_0_sum_0 + new_f_angular_temp_1_0_times_1);
  ap_fixed<32,18> new_f_angular_temp_1_0_sum_2 = (new_f_angular_temp_1_0_sum_1 + new_f_angular_temp_1_0_times_2);
  ap_fixed<32,18> new_f_angular_temp_1_0 = new_f_angular_temp_1_0_sum_2;
  ap_fixed<32,1> new_f_angular_temp_1_1_times_0 = (limi_rotation_1_1_0 * f_angular_1_0);
  ap_fixed<32,1> new_f_angular_temp_1_1_times_1 = (limi_rotation_1_1_1 * f_angular_1_1);
  ap_fixed<32,18> new_f_angular_temp_1_1_times_2 = (limi_rotation_1_1_2 * f_angular_1_2);
  ap_fixed<32,1> new_f_angular_temp_1_1_sum_0 = new_f_angular_temp_1_1_times_0;
  ap_fixed<32,1> new_f_angular_temp_1_1_sum_1 = (new_f_angular_temp_1_1_sum_0 + new_f_angular_temp_1_1_times_1);
  ap_fixed<32,18> new_f_angular_temp_1_1_sum_2 = (new_f_angular_temp_1_1_sum_1 + new_f_angular_temp_1_1_times_2);
  ap_fixed<32,18> new_f_angular_temp_1_1 = new_f_angular_temp_1_1_sum_2;
  ap_fixed<32,18> new_f_angular_temp_1_2_times_0 = (limi_rotation_1_2_0 * f_angular_1_0);
  ap_fixed<32,16> new_f_angular_temp_1_2_times_1 = (limi_rotation_1_2_1 * f_angular_1_1);
  ap_fixed<32,1> new_f_angular_temp_1_2_times_2 = (limi_rotation_1_2_2 * f_angular_1_2);
  ap_fixed<32,18> new_f_angular_temp_1_2_sum_0 = new_f_angular_temp_1_2_times_0;
  ap_fixed<32,18> new_f_angular_temp_1_2_sum_1 = (new_f_angular_temp_1_2_sum_0 + new_f_angular_temp_1_2_times_1);
  ap_fixed<32,18> new_f_angular_temp_1_2_sum_2 = (new_f_angular_temp_1_2_sum_1 + new_f_angular_temp_1_2_times_2);
  ap_fixed<32,18> new_f_angular_temp_1_2 = new_f_angular_temp_1_2_sum_2;
  ap_fixed<32,1> f_angular_cross_1_xTimes1 = (limi_translation_1_1 * new_f_linear_1_2);
  ap_fixed<32,1> f_angular_cross_1_xTimes2 = (limi_translation_1_2 * new_f_linear_1_1);
  ap_fixed<32,1> f_angular_cross_1_xMinus = (f_angular_cross_1_xTimes1 - f_angular_cross_1_xTimes2);
  ap_fixed<32,1> f_angular_cross_1_yTimes1 = (limi_translation_1_2 * new_f_linear_1_0);
  ap_fixed<32,1> f_angular_cross_1_yTimes2 = (limi_translation_1_0 * new_f_linear_1_2);
  ap_fixed<32,1> f_angular_cross_1_yMinus = (f_angular_cross_1_yTimes1 - f_angular_cross_1_yTimes2);
  ap_fixed<32,1> f_angular_cross_1_zTimes1 = (limi_translation_1_0 * new_f_linear_1_1);
  ap_fixed<32,1> f_angular_cross_1_zTimes2 = (limi_translation_1_1 * new_f_linear_1_0);
  ap_fixed<32,1> f_angular_cross_1_zMinus = (f_angular_cross_1_zTimes1 - f_angular_cross_1_zTimes2);
  ap_fixed<32,1> f_angular_cross_1_0 = f_angular_cross_1_xMinus;
  ap_fixed<32,1> f_angular_cross_1_1 = f_angular_cross_1_yMinus;
  ap_fixed<32,1> f_angular_cross_1_2 = f_angular_cross_1_zMinus;
  ap_fixed<32,18> new_f_angular_1_2 = (new_f_angular_temp_1_2 + f_angular_cross_1_2);
  ap_fixed<32,18> new_f_angular_1_1 = (new_f_angular_temp_1_1 + f_angular_cross_1_1);
  ap_fixed<32,18> new_f_angular_1_0 = (new_f_angular_temp_1_0 + f_angular_cross_1_0);
  ap_fixed<32,18> new_f_1_5 = new_f_angular_1_2;
  ap_fixed<32,18> new_f_1_4 = new_f_angular_1_1;
  ap_fixed<32,18> new_f_1_3 = new_f_angular_1_0;
  ap_fixed<32,18> new_f_1_2 = new_f_linear_1_2;
  ap_fixed<32,17> new_f_1_1 = new_f_linear_1_1;
  ap_fixed<32,18> new_f_1_0 = new_f_linear_1_0;
  ap_fixed<32,18> new_data_f_parent_1_5 = (f_rnea_firstpass0_5 + new_f_1_5);
  ap_fixed<32,18> new_data_f_parent_1_4 = (f_rnea_firstpass0_4 + new_f_1_4);
  ap_fixed<32,18> new_data_f_parent_1_3 = (f_rnea_firstpass0_3 + new_f_1_3);
  ap_fixed<32,18> new_data_f_parent_1_2 = (f_rnea_firstpass0_2 + new_f_1_2);
  ap_fixed<32,17> new_data_f_parent_1_1 = (f_rnea_firstpass0_1 + new_f_1_1);
  ap_fixed<32,18> new_data_f_parent_1_0 = (f_rnea_firstpass0_0 + new_f_1_0);
  ap_fixed<32,18> data_tau_temp_0 = new_data_f_parent_1_5;
  ap_fixed<32,13> data_tau_5 = data_tau_temp_5;
  ap_fixed<32,14> data_tau_4 = data_tau_temp_4;
  ap_fixed<32,16> data_tau_3 = data_tau_temp_3;
  ap_fixed<32,16> data_tau_2 = data_tau_temp_2;
  ap_fixed<32,18> data_tau_1 = data_tau_temp_1;
  ap_fixed<32,18> data_tau_0 = data_tau_temp_0;
  return data_tau_0;
} // [-95099.7648158179, 95099.7648158179] +/- 0.007697602002454718