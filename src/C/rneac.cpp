#include <math.h>
#include <iostream>
#include <vector>

/* @pre: ((qcos_0 > -1.0) && (qcos_0 < 1.0) && (qcos_1 > -1.0) && (qcos_1 < 1.0) && (qcos_2 > -1.0) && (qcos_2 < 1.0) && (qcos_3 > -1.0) && (qcos_3 < 1.0) && (qcos_4 > -1.0) && (qcos_4 < 1.0) && (qcos_5 > -1.0) && (qcos_5 < 1.0) && (qsin_0 > -1.0) && (qsin_0 < 1.0) && (qsin_1 > -1.0) && (qsin_1 < 1.0) && (qsin_2 > -1.0) && (qsin_2 < 1.0) && (qsin_3 > -1.0) && (qsin_3 < 1.0) && (qsin_4 > -1.0) && (qsin_4 < 1.0) && (qsin_5 > -1.0) && (qsin_5 < 1.0) && (v_0 > -20.0) && (v_0 < 20.0) && (v_1 > -20.0) && (v_1 < 20.0) && (v_2 > -20.0) && (v_2 < 20.0) && (v_3 > -20.0) && (v_3 < 20.0) && (v_4 > -20.0) && (v_4 < 20.0) && (v_5 > -20.0) && (v_5 < 20.0) && (a_0 > -20.0) && (a_0 < 20.0) && (a_1 > -20.0) && (a_1 < 20.0) && (a_2 > -20.0) && (a_2 < 20.0) && (a_3 > -20.0) && (a_3 < 20.0) && (a_4 > -20.0) && (a_4 < 20.0) && (a_5 > -20.0) && (a_5 < 20.0)) */
/* @post: (res) => (res +/- 1.0e-05) */
long long rand_func(
    long long qcos_0, long long qcos_1, long long qcos_2, long long qcos_3, long long qcos_4, long long qcos_5, 
    long long qsin_0, long long qsin_1, long long qsin_2, long long qsin_3, long long qsin_4, long long qsin_5, 
    long long v_0, long long v_1, long long v_2, long long v_3, long long v_4, long long v_5, 
    long long a_0, long long a_1, long long a_2, long long a_3, long long a_4, long long a_5
  ) {
  long long limi_translation_0_2 = 715112055;
  long long limi_translation_0_1 = 0;
  long long limi_translation_0_0 = 0;
  long long limi_translation_1_2 = 0;
  long long limi_translation_1_1 = 0;
  long long limi_translation_1_0 = 0;
  long long limi_translation_2_2 = 0;
  long long limi_translation_2_1 = -678604833;
  long long limi_translation_2_0 = 0;
  long long limi_translation_3_2 = 0;
  long long limi_translation_3_1 = 0;
  long long limi_translation_3_0 = 177167401;
  long long limi_translation_4_2 = 0;
  long long limi_translation_4_1 = 824633721;
  long long limi_translation_4_0 = -177167401;
  long long limi_translation_5_2 = 0;
  long long limi_translation_5_1 = 0;
  long long limi_translation_5_0 = 0;
  long long data_v_0_5 = 0;
  long long data_v_0_4 = 0;
  long long data_v_0_3 = 0;
  long long data_v_0_2 = 0;
  long long data_v_0_1 = 0;
  long long data_v_0_0 = 0;
  long long data_v_1_5 = 0;
  long long data_v_1_4 = 0;
  long long data_v_1_3 = 0;
  long long data_v_1_2 = 0;
  long long data_v_1_1 = 0;
  long long data_v_1_0 = 0;
  long long data_v_2_5 = 0;
  long long data_v_2_4 = 0;
  long long data_v_2_3 = 0;
  long long data_v_2_2 = 0;
  long long data_v_2_1 = 0;
  long long data_v_2_0 = 0;
  long long data_v_3_5 = 0;
  long long data_v_3_4 = 0;
  long long data_v_3_3 = 0;
  long long data_v_3_2 = 0;
  long long data_v_3_1 = 0;
  long long data_v_3_0 = 0;
  long long data_v_4_5 = 0;
  long long data_v_4_4 = 0;
  long long data_v_4_3 = 0;
  long long data_v_4_2 = 0;
  long long data_v_4_1 = 0;
  long long data_v_4_0 = 0;
  long long data_v_5_5 = 0;
  long long data_v_5_4 = 0;
  long long data_v_5_3 = 0;
  long long data_v_5_2 = 0;
  long long data_v_5_1 = 0;
  long long data_v_5_0 = 0;
  long long lever_0_2 = -102263172;
  long long lever_0_1 = 4468913;
  long long lever_0_0 = 8321499;
  long long lever_1_2 = 7505455;
  long long lever_1_1 = -61675731;
  long long lever_1_0 = -6745247;
  long long lever_2_2 = -142811958;
  long long lever_2_1 = 84293028;
  long long lever_2_0 = 59094455;
  long long lever_3_2 = 58957016;
  long long lever_3_1 = 224238095;
  long long lever_3_0 = -114181706;
  long long lever_4_2 = -82542829;
  long long lever_4_1 = 88186416;
  long long lever_4_0 = -25668873;
  long long lever_5_2 = -22585086;
  long long lever_5_1 = -30316027;
  long long lever_5_0 = 129168994;
  long long masses_5 = 1789455174;
  long long masses_4 = 1316349494;
  long long masses_3 = 1926236461;
  long long masses_2 = 1733343574;
  long long masses_1 = 1389263006;
  long long masses_0 = 1334307826;
  long long inertia_0_2_2 = 19578608;
  long long inertia_0_2_1 = 41165114;
  long long inertia_0_2_0 = 14542759;
  long long inertia_0_1_2 = 41165114;
  long long inertia_0_1_1 = 1517433421;
  long long inertia_0_1_0 = -298501;
  long long inertia_0_0_2 = 14542759;
  long long inertia_0_0_1 = -298501;
  long long inertia_0_0_0 = 1510475573;
  long long inertia_1_2_2 = 55823837;
  long long inertia_1_2_1 = 1511828;
  long long inertia_1_2_0 = 22020297;
  long long inertia_1_1_2 = 1511828;
  long long inertia_1_1_1 = 60365765;
  long long inertia_1_1_0 = -8428874;
  long long inertia_1_0_2 = 22020297;
  long long inertia_1_0_1 = -8428874;
  long long inertia_1_0_0 = 17098265;
  long long inertia_2_2_2 = 23257248;
  long long inertia_2_2_1 = -27498529;
  long long inertia_2_2_0 = -24472724;
  long long inertia_2_1_2 = -27498529;
  long long inertia_2_1_1 = 77642271;
  long long inertia_2_1_0 = -10224170;
  long long inertia_2_0_2 = -24472724;
  long long inertia_2_0_1 = -10224170;
  long long inertia_2_0_0 = 79976586;
  long long inertia_3_2_2 = 60823179;
  long long inertia_3_2_1 = 18556406;
  long long inertia_3_2_0 = -2860449;
  long long inertia_3_1_2 = 18556406;
  long long inertia_3_1_1 = 41987600;
  long long inertia_3_1_0 = 16741783;
  long long inertia_3_0_2 = -2860449;
  long long inertia_3_0_1 = 16741783;
  long long inertia_3_0_0 = 55518895;
  long long inertia_4_2_2 = 18526341;
  long long inertia_4_2_1 = 491774;
  long long inertia_4_2_0 = -8669392;
  long long inertia_4_1_2 = 491774;
  long long inertia_4_1_1 = 63294933;
  long long inertia_4_1_0 = -4546223;
  long long inertia_4_0_2 = -8669392;
  long long inertia_4_0_1 = -4546223;
  long long inertia_4_0_0 = 76340896;
  long long inertia_5_2_2 = 11667279;
  long long inertia_5_2_1 = 732292;
  long long inertia_5_2_0 = -2486787;
  long long inertia_5_1_2 = 732292;
  long long inertia_5_1_1 = 9350144;
  long long inertia_5_1_0 = 234076;
  long long inertia_5_0_2 = -2486787;
  long long inertia_5_0_1 = 234076;
  long long inertia_5_0_0 = 4217658;
  long long parent_v_5 = 0;
  long long parent_v_4 = 0;
  long long parent_v_3 = 0;
  long long parent_v_2 = 0;
  long long parent_v_1 = 0;
  long long parent_v_0 = 0;
  long long parent_a_gf_5 = 0;
  long long parent_a_gf_4 = 0;
  long long parent_a_gf_3 = 0;
  long long parent_a_gf_2 = 1316675912;
  long long parent_a_gf_1 = 0;
  long long parent_a_gf_0 = 0;
  long long new_v_5 = 0;
  long long new_v_4 = 0;
  long long new_v_3 = 0;
  long long new_v_2 = 0;
  long long new_v_1 = 0;
  long long new_v_0 = 0;
  long long new_a_gf_5 = 0;
  long long new_a_gf_4 = 0;
  long long new_a_gf_3 = 0;
  long long new_a_gf_2 = 0;
  long long new_a_gf_1 = 0;
  long long new_a_gf_0 = 0;
  long long new_h_5 = 0;
  long long new_h_4 = 0;
  long long new_h_3 = 0;
  long long new_h_2 = 0;
  long long new_h_1 = 0;
  long long new_h_0 = 0;
  long long new_f_5 = 0;
  long long new_f_4 = 0;
  long long new_f_3 = 0;
  long long new_f_2 = 0;
  long long new_f_1 = 0;
  long long new_f_0 = 0;
  long long rotation_matrix_0_2_2 = 1073741824;
  long long rotation_matrix_0_2_1 = 0;
  long long rotation_matrix_0_2_0 = 0;
  long long rotation_matrix_0_1_2 = 0;
  long long rotation_matrix_0_1_1 = qcos_0;
  long long rotation_matrix_0_1_0 = qsin_0;
  long long rotation_matrix_0_0_2 = 0;
  long long rotation_matrix_0_0_1 = -(qsin_0);
  long long rotation_matrix_0_0_0 = qcos_0;
  long long limi_rotation_0_2_2 = 1073741824;
  long long limi_rotation_0_2_1 = 0;
  long long limi_rotation_0_2_0 = 0;
  long long limi_rotation_0_1_2 = 0;
  long long limi_rotation_0_1_1 = rotation_matrix_0_1_1;
  long long limi_rotation_0_1_0 = rotation_matrix_0_1_0;
  long long limi_rotation_0_0_2 = 0;
  long long limi_rotation_0_0_1 = rotation_matrix_0_0_1;
  long long limi_rotation_0_0_0 = rotation_matrix_0_0_0;
  long long v_linear_0_2 = data_v_0_2;
  long long v_linear_0_1 = data_v_0_1;
  long long v_linear_0_0 = data_v_0_0;
  long long v_angular_0_2 = v_0;
  long long v_angular_0_1 = data_v_0_4;
  long long v_angular_0_0 = data_v_0_3;
  long long parent_v_linear_0_2 = parent_v_2;
  long long parent_v_linear_0_1 = parent_v_1;
  long long parent_v_linear_0_0 = parent_v_0;
  long long parent_v_angular_0_2 = parent_v_5;
  long long parent_v_angular_0_1 = parent_v_4;
  long long parent_v_angular_0_0 = parent_v_3;
  long long parent_a_gf_linear_0_2 = parent_a_gf_2;
  long long parent_a_gf_linear_0_1 = parent_a_gf_1;
  long long parent_a_gf_linear_0_0 = parent_a_gf_0;
  long long parent_a_gf_angular_0_2 = parent_a_gf_5;
  long long parent_a_gf_angular_0_1 = parent_a_gf_4;
  long long parent_a_gf_angular_0_0 = parent_a_gf_3;
  long long minus_m_w_0 = v_0;
  long long temp2 = -(minus_m_w_0);
  long long temp1 = -(temp2);
  long long alpha_cross1_linear_0 = ((temp1 * v_linear_0_1) >> 26);
  long long temp3 = -(minus_m_w_0);
  long long alpha_cross2_linear_0 = ((temp3 * v_linear_0_0) >> 26);
  long long alpha_cross_linear_0_2 = 0;
  long long alpha_cross_linear_0_1 = alpha_cross2_linear_0;
  long long alpha_cross_linear_0_0 = alpha_cross1_linear_0;
  long long temp5 = -(minus_m_w_0);
  long long temp4 = -(temp5);
  long long alpha_cross1_angular_0 = ((temp4 * v_angular_0_1) >> 26);
  long long temp6 = -(minus_m_w_0);
  long long alpha_cross2_angular_0 = ((temp6 * v_angular_0_0) >> 26);
  long long alpha_cross_angular_0_2 = 0;
  long long alpha_cross_angular_0_1 = alpha_cross2_angular_0;
  long long alpha_cross_angular_0_0 = alpha_cross1_angular_0;
  long long new_a_gf_0_5 = alpha_cross_angular_0_2;
  long long new_a_gf_0_4 = alpha_cross_angular_0_1;
  long long new_a_gf_0_3 = alpha_cross_angular_0_0;
  long long new_a_gf_0_2 = alpha_cross_linear_0_2;
  long long new_a_gf_0_1 = alpha_cross_linear_0_1;
  long long new_a_gf_0_0 = alpha_cross_linear_0_0;
  long long new_a_gf_up1_0 = (((a_0 << 5) + new_a_gf_0_5) >> 5);
  long long new_a_gf2_linear_0_2 = new_a_gf_0_2;
  long long new_a_gf2_linear_0_1 = new_a_gf_0_1;
  long long new_a_gf2_linear_0_0 = new_a_gf_0_0;
  long long new_a_gf2_angular_0_2 = new_a_gf_up1_0;
  long long new_a_gf2_angular_0_1 = new_a_gf_0_4;
  long long new_a_gf2_angular_0_0 = new_a_gf_0_3;
  long long actInv1_0_0 = (((limi_translation_0_1 * parent_a_gf_angular_0_2) >> 31) - ((limi_translation_0_2 * parent_a_gf_angular_0_1) >> 31));
  long long actInv1_0_1 = (((limi_translation_0_2 * parent_a_gf_angular_0_0) >> 31) - ((limi_translation_0_0 * parent_a_gf_angular_0_2) >> 31));
  long long actInv1_0_2 = (((limi_translation_0_0 * parent_a_gf_angular_0_1) >> 31) - ((limi_translation_0_1 * parent_a_gf_angular_0_0) >> 31));
  long long actInv2_0_2 = (((parent_a_gf_linear_0_2 << 4) - actInv1_0_2) >> 4);
  long long actInv2_0_1 = (parent_a_gf_linear_0_1 - actInv1_0_1);
  long long actInv2_0_0 = (parent_a_gf_linear_0_0 - actInv1_0_0);
  long long actInv3_0_2_2 = limi_rotation_0_2_2;
  long long actInv3_0_1_2 = limi_rotation_0_2_1;
  long long actInv3_0_0_2 = limi_rotation_0_2_0;
  long long actInv3_0_2_1 = limi_rotation_0_1_2;
  long long actInv3_0_1_1 = limi_rotation_0_1_1;
  long long actInv3_0_0_1 = limi_rotation_0_1_0;
  long long actInv3_0_2_0 = limi_rotation_0_0_2;
  long long actInv3_0_1_0 = limi_rotation_0_0_1;
  long long actInv3_0_0_0 = limi_rotation_0_0_0;
  long long actInv4_0_2 = ((((actInv3_0_2_0 * actInv2_0_0) >> 31) + (((((actInv3_0_2_1 * actInv2_0_1) >> 31) + (((actInv3_0_2_2 * actInv2_0_2) >> 30) << 4)) >> 4) << 4)) >> 4);
  long long actInv4_0_1 = (((actInv3_0_1_0 * actInv2_0_0) >> 30) + (((actInv3_0_1_1 * actInv2_0_1) >> 30) + ((actInv3_0_1_2 * actInv2_0_2) >> 27)));
  long long actInv4_0_0 = (((actInv3_0_0_0 * actInv2_0_0) >> 30) + (((actInv3_0_0_1 * actInv2_0_1) >> 30) + ((actInv3_0_0_2 * actInv2_0_2) >> 27)));
  long long act_inv_linear_0_2 = ((new_a_gf2_linear_0_2 + (actInv4_0_2 << 4)) >> 4);
  long long act_inv_linear_0_1 = (new_a_gf2_linear_0_1 + actInv4_0_1);
  long long act_inv_linear_0_0 = (new_a_gf2_linear_0_0 + actInv4_0_0);
  long long actInv5_0_2 = (((actInv3_0_2_0 * parent_a_gf_angular_0_0) >> 31) + (((actInv3_0_2_1 * parent_a_gf_angular_0_1) >> 31) + ((actInv3_0_2_2 * parent_a_gf_angular_0_2) >> 30)));
  long long actInv5_0_1 = (((actInv3_0_1_0 * parent_a_gf_angular_0_0) >> 30) + (((actInv3_0_1_1 * parent_a_gf_angular_0_1) >> 30) + ((actInv3_0_1_2 * parent_a_gf_angular_0_2) >> 31)));
  long long actInv5_0_0 = (((actInv3_0_0_0 * parent_a_gf_angular_0_0) >> 30) + (((actInv3_0_0_1 * parent_a_gf_angular_0_1) >> 30) + ((actInv3_0_0_2 * parent_a_gf_angular_0_2) >> 31)));
  long long act_inv_angular_0_2 = (((new_a_gf2_angular_0_2 << 5) + actInv5_0_2) >> 5);
  long long act_inv_angular_0_1 = (new_a_gf2_angular_0_1 + actInv5_0_1);
  long long act_inv_angular_0_0 = (new_a_gf2_angular_0_0 + actInv5_0_0);
  long long new_a_gf_up3_0_5 = act_inv_angular_0_2;
  long long new_a_gf_up3_0_4 = act_inv_angular_0_1;
  long long new_a_gf_up3_0_3 = act_inv_angular_0_0;
  long long new_a_gf_up3_0_2 = act_inv_linear_0_2;
  long long new_a_gf_up3_0_1 = act_inv_linear_0_1;
  long long new_a_gf_up3_0_0 = act_inv_linear_0_0;
  long long h_linear_1_0_0 = (((lever_0_1 * v_angular_0_2) >> 26) - ((lever_0_2 * v_angular_0_1) >> 31));
  long long h_linear_1_0_1 = (((lever_0_2 * v_angular_0_0) >> 31) - ((lever_0_0 * v_angular_0_2) >> 26));
  long long h_linear_1_0_2 = (((lever_0_0 * v_angular_0_1) >> 31) - ((lever_0_1 * v_angular_0_0) >> 31));
  long long h_linear_2_0_2 = (v_linear_0_2 - h_linear_1_0_2);
  long long h_linear_2_0_1 = (v_linear_0_1 - h_linear_1_0_1);
  long long h_linear_2_0_0 = (v_linear_0_0 - h_linear_1_0_0);
  long long h_linear_0_2 = ((h_linear_2_0_2 * masses_0) >> 28);
  long long h_linear_0_1 = ((h_linear_2_0_1 * masses_0) >> 28);
  long long h_linear_0_0 = ((h_linear_2_0_0 * masses_0) >> 28);
  long long temp7 = ((v_angular_0_0 * inertia_0_0_0) >> 31);
  long long temp8 = ((v_angular_0_1 * inertia_0_0_1) >> 31);
  long long rhsMult1_temp_0 = (temp7 + temp8);
  long long temp9 = ((v_angular_0_2 * inertia_0_0_2) >> 26);
  long long rhsMult1_0 = (rhsMult1_temp_0 + temp9);
  long long temp10 = ((v_angular_0_0 * inertia_0_0_1) >> 31);
  long long temp11 = ((v_angular_0_1 * inertia_0_1_1) >> 31);
  long long rhsMult2_temp_0 = (temp10 + temp11);
  long long temp12 = ((v_angular_0_2 * inertia_0_1_2) >> 26);
  long long rhsMult2_0 = (rhsMult2_temp_0 + temp12);
  long long temp13 = ((v_angular_0_0 * inertia_0_0_2) >> 31);
  long long temp14 = ((v_angular_0_1 * inertia_0_1_2) >> 31);
  long long rhsMult3_temp_0 = (temp13 + temp14);
  long long temp15 = ((v_angular_0_2 * inertia_0_2_2) >> 26);
  long long rhsMult3_0 = (rhsMult3_temp_0 + temp15);
  long long rhsMult_0_2 = rhsMult3_0;
  long long rhsMult_0_1 = rhsMult2_0;
  long long rhsMult_0_0 = rhsMult1_0;
  long long h_angular_first_0_2 = rhsMult_0_2;
  long long h_angular_first_0_1 = rhsMult_0_1;
  long long h_angular_first_0_0 = rhsMult_0_0;
  long long h_angular_1_0_0 = (((lever_0_1 * h_linear_0_2) >> 31) - ((lever_0_2 * h_linear_0_1) >> 31));
  long long h_angular_1_0_1 = (((lever_0_2 * h_linear_0_0) >> 31) - ((lever_0_0 * h_linear_0_2) >> 31));
  long long h_angular_1_0_2 = (((lever_0_0 * h_linear_0_1) >> 31) - ((lever_0_1 * h_linear_0_0) >> 31));
  long long h_angular_0_2 = (h_angular_first_0_2 + h_angular_1_0_2);
  long long h_angular_0_1 = (h_angular_first_0_1 + h_angular_1_0_1);
  long long h_angular_0_0 = (h_angular_first_0_0 + h_angular_1_0_0);
  long long f_linear_1_0_0 = (((lever_0_1 * act_inv_angular_0_2) >> 26) - ((lever_0_2 * act_inv_angular_0_1) >> 31));
  long long f_linear_1_0_1 = (((lever_0_2 * act_inv_angular_0_0) >> 31) - ((lever_0_0 * act_inv_angular_0_2) >> 26));
  long long f_linear_1_0_2 = (((lever_0_0 * act_inv_angular_0_1) >> 31) - ((lever_0_1 * act_inv_angular_0_0) >> 31));
  long long f_linear_2_0_2 = (((act_inv_linear_0_2 << 4) - f_linear_1_0_2) >> 4);
  long long f_linear_2_0_1 = (act_inv_linear_0_1 - f_linear_1_0_1);
  long long f_linear_2_0_0 = (act_inv_linear_0_0 - f_linear_1_0_0);
  long long f_linear_3_0_2 = ((f_linear_2_0_2 * masses_0) >> 30);
  long long f_linear_3_0_1 = ((f_linear_2_0_1 * masses_0) >> 28);
  long long f_linear_3_0_0 = ((f_linear_2_0_0 * masses_0) >> 28);
  long long temp16 = ((act_inv_angular_0_0 * inertia_0_0_0) >> 31);
  long long temp17 = ((act_inv_angular_0_1 * inertia_0_0_1) >> 31);
  long long r_1_rhsMult1_temp_0 = (temp16 + temp17);
  long long temp18 = ((act_inv_angular_0_2 * inertia_0_0_2) >> 26);
  long long r_2_rhsMult1_0 = (r_1_rhsMult1_temp_0 + temp18);
  long long temp19 = ((act_inv_angular_0_0 * inertia_0_0_1) >> 31);
  long long temp20 = ((act_inv_angular_0_1 * inertia_0_1_1) >> 31);
  long long r_3_rhsMult2_temp_0 = (temp19 + temp20);
  long long temp21 = ((act_inv_angular_0_2 * inertia_0_1_2) >> 26);
  long long r_4_rhsMult2_0 = (r_3_rhsMult2_temp_0 + temp21);
  long long temp22 = ((act_inv_angular_0_0 * inertia_0_0_2) >> 31);
  long long temp23 = ((act_inv_angular_0_1 * inertia_0_1_2) >> 31);
  long long r_5_rhsMult3_temp_0 = (temp22 + temp23);
  long long temp24 = ((act_inv_angular_0_2 * inertia_0_2_2) >> 26);
  long long r_6_rhsMult3_0 = (r_5_rhsMult3_temp_0 + temp24);
  long long r_7_rhsMult_0_2 = r_6_rhsMult3_0;
  long long r_7_rhsMult_0_1 = r_4_rhsMult2_0;
  long long r_7_rhsMult_0_0 = r_2_rhsMult1_0;
  long long f_angular_first_0_2 = r_7_rhsMult_0_2;
  long long f_angular_first_0_1 = r_7_rhsMult_0_1;
  long long f_angular_first_0_0 = r_7_rhsMult_0_0;
  long long f_angular_1_0_0 = (((lever_0_1 * f_linear_3_0_2) >> 25) - ((lever_0_2 * f_linear_3_0_1) >> 31));
  long long f_angular_1_0_1 = (((lever_0_2 * f_linear_3_0_0) >> 31) - ((lever_0_0 * f_linear_3_0_2) >> 25));
  long long f_angular_1_0_2 = (((lever_0_0 * f_linear_3_0_1) >> 31) - ((lever_0_1 * f_linear_3_0_0) >> 31));
  long long f_angular_2_0_2 = (f_angular_first_0_2 + f_angular_1_0_2);
  long long f_angular_2_0_1 = (f_angular_first_0_1 + f_angular_1_0_1);
  long long f_angular_2_0_0 = (f_angular_first_0_0 + f_angular_1_0_0);
  long long f_linear_4_temp_0_0 = ((((v_angular_0_1 * h_linear_0_2) >> 31) - (((v_angular_0_2 * h_linear_0_1) >> 29) << 3)) >> 3);
  long long f_linear_4_temp_0_1 = (((((v_angular_0_2 * h_linear_0_0) >> 29) << 3) - ((v_angular_0_0 * h_linear_0_2) >> 31)) >> 3);
  long long f_linear_4_temp_0_2 = (((v_angular_0_0 * h_linear_0_1) >> 31) - ((v_angular_0_1 * h_linear_0_0) >> 31));
  long long f_linear_4_0_2 = (((f_linear_3_0_2 << 6) + f_linear_4_temp_0_2) >> 6);
  long long f_linear_4_0_1 = ((f_linear_3_0_1 + (f_linear_4_temp_0_1 << 3)) >> 3);
  long long f_linear_4_0_0 = ((f_linear_3_0_0 + (f_linear_4_temp_0_0 << 3)) >> 3);
  long long f_angular_3_temp_0_0 = ((((v_angular_0_1 * h_angular_first_0_2) >> 31) - (((v_angular_0_2 * h_angular_first_0_1) >> 29) << 3)) >> 3);
  long long f_angular_3_temp_0_1 = (((((v_angular_0_2 * h_angular_first_0_0) >> 28) << 2) - ((v_angular_0_0 * h_angular_first_0_2) >> 31)) >> 2);
  long long f_angular_3_temp_0_2 = (((v_angular_0_0 * h_angular_first_0_1) >> 31) - ((v_angular_0_1 * h_angular_first_0_0) >> 31));
  long long f_angular_3_0_2 = (f_angular_2_0_2 + f_angular_3_temp_0_2);
  long long f_angular_3_0_1 = ((f_angular_2_0_1 + (f_angular_3_temp_0_1 << 2)) >> 2);
  long long f_angular_3_0_0 = ((f_angular_2_0_0 + (f_angular_3_temp_0_0 << 3)) >> 3);
  long long f_angular_4_temp_0_0 = (((v_linear_0_1 * h_linear_0_2) >> 31) - ((v_linear_0_2 * h_linear_0_1) >> 31));
  long long f_angular_4_temp_0_1 = (((v_linear_0_2 * h_linear_0_0) >> 31) - ((v_linear_0_0 * h_linear_0_2) >> 31));
  long long f_angular_4_temp_0_2 = (((v_linear_0_0 * h_linear_0_1) >> 31) - ((v_linear_0_1 * h_linear_0_0) >> 31));
  long long f_angular_4_0_2 = (f_angular_3_0_2 + f_angular_4_temp_0_2);
  long long f_angular_4_0_1 = (((f_angular_3_0_1 << 2) + f_angular_4_temp_0_1) >> 2);
  long long f_angular_4_0_0 = (((f_angular_3_0_0 << 3) + f_angular_4_temp_0_0) >> 3);
  long long h_rnea_firstpass0_5 = h_angular_0_2;
  long long h_rnea_firstpass0_4 = h_angular_0_1;
  long long h_rnea_firstpass0_3 = h_angular_0_0;
  long long h_rnea_firstpass0_2 = h_linear_0_2;
  long long h_rnea_firstpass0_1 = h_linear_0_1;
  long long h_rnea_firstpass0_0 = h_linear_0_0;
  long long f_rnea_firstpass0_5 = f_angular_4_0_2;
  long long f_rnea_firstpass0_4 = f_angular_4_0_1;
  long long f_rnea_firstpass0_3 = f_angular_4_0_0;
  long long f_rnea_firstpass0_2 = f_linear_4_0_2;
  long long f_rnea_firstpass0_1 = f_linear_4_0_1;
  long long f_rnea_firstpass0_0 = f_linear_4_0_0;
  long long new_v_0_5 = v_angular_0_2;
  long long new_v_0_4 = v_angular_0_1;
  long long new_v_0_3 = v_angular_0_0;
  long long new_v_0_2 = v_linear_0_2;
  long long new_v_0_1 = v_linear_0_1;
  long long new_v_0_0 = v_linear_0_0;
  long long rotation_matrix_1_2_2 = 1073741824;
  long long rotation_matrix_1_2_1 = 0;
  long long rotation_matrix_1_2_0 = 0;
  long long rotation_matrix_1_1_2 = 0;
  long long rotation_matrix_1_1_1 = qcos_1;
  long long rotation_matrix_1_1_0 = qsin_1;
  long long rotation_matrix_1_0_2 = 0;
  long long rotation_matrix_1_0_1 = -(qsin_1);
  long long rotation_matrix_1_0_0 = qcos_1;
  long long limi_rotation_1_2_2 = 0;
  long long limi_rotation_1_2_1 = -(rotation_matrix_1_1_1);
  long long limi_rotation_1_2_0 = -(rotation_matrix_1_1_0);
  long long limi_rotation_1_1_2 = 1073741824;
  long long limi_rotation_1_1_1 = 0;
  long long limi_rotation_1_1_0 = 0;
  long long limi_rotation_1_0_2 = 0;
  long long limi_rotation_1_0_1 = rotation_matrix_1_0_1;
  long long limi_rotation_1_0_0 = rotation_matrix_1_0_0;
  long long v_linear_1_2 = data_v_1_2;
  long long v_linear_1_1 = data_v_1_1;
  long long v_linear_1_0 = data_v_1_0;
  long long v_angular_1_2 = v_1;
  long long v_angular_1_1 = data_v_1_4;
  long long v_angular_1_0 = data_v_1_3;
  long long parent_v_linear_1_2 = new_v_0_2;
  long long parent_v_linear_1_1 = new_v_0_1;
  long long parent_v_linear_1_0 = new_v_0_0;
  long long parent_v_angular_1_2 = new_v_0_5;
  long long parent_v_angular_1_1 = new_v_0_4;
  long long parent_v_angular_1_0 = new_v_0_3;
  long long parent_a_gf_linear_1_2 = new_a_gf_up3_0_2;
  long long parent_a_gf_linear_1_1 = new_a_gf_up3_0_1;
  long long parent_a_gf_linear_1_0 = new_a_gf_up3_0_0;
  long long parent_a_gf_angular_1_2 = new_a_gf_up3_0_5;
  long long parent_a_gf_angular_1_1 = new_a_gf_up3_0_4;
  long long parent_a_gf_angular_1_0 = new_a_gf_up3_0_3;
  long long actInv1_1_0 = (((limi_translation_1_1 * parent_v_angular_1_2) >> 26) - ((limi_translation_1_2 * parent_v_angular_1_1) >> 31));
  long long actInv1_1_1 = (((limi_translation_1_2 * parent_v_angular_1_0) >> 31) - ((limi_translation_1_0 * parent_v_angular_1_2) >> 26));
  long long actInv1_1_2 = (((limi_translation_1_0 * parent_v_angular_1_1) >> 31) - ((limi_translation_1_1 * parent_v_angular_1_0) >> 31));
  long long actInv2_1_2 = (parent_v_linear_1_2 - actInv1_1_2);
  long long actInv2_1_1 = (parent_v_linear_1_1 - actInv1_1_1);
  long long actInv2_1_0 = (parent_v_linear_1_0 - actInv1_1_0);
  long long actInv3_1_2_2 = limi_rotation_1_2_2;
  long long actInv3_1_1_2 = limi_rotation_1_2_1;
  long long actInv3_1_0_2 = limi_rotation_1_2_0;
  long long actInv3_1_2_1 = limi_rotation_1_1_2;
  long long actInv3_1_1_1 = limi_rotation_1_1_1;
  long long actInv3_1_0_1 = limi_rotation_1_1_0;
  long long actInv3_1_2_0 = limi_rotation_1_0_2;
  long long actInv3_1_1_0 = limi_rotation_1_0_1;
  long long actInv3_1_0_0 = limi_rotation_1_0_0;
  long long actInv4_1_2 = (((actInv3_1_2_0 * actInv2_1_0) >> 31) + (((actInv3_1_2_1 * actInv2_1_1) >> 30) + ((actInv3_1_2_2 * actInv2_1_2) >> 31)));
  long long actInv4_1_1 = (((actInv3_1_1_0 * actInv2_1_0) >> 30) + (((actInv3_1_1_1 * actInv2_1_1) >> 31) + ((actInv3_1_1_2 * actInv2_1_2) >> 30)));
  long long actInv4_1_0 = (((actInv3_1_0_0 * actInv2_1_0) >> 30) + (((actInv3_1_0_1 * actInv2_1_1) >> 31) + ((actInv3_1_0_2 * actInv2_1_2) >> 30)));
  long long act_inv_linear_1_2 = (v_linear_1_2 + actInv4_1_2);
  long long act_inv_linear_1_1 = (v_linear_1_1 + actInv4_1_1);
  long long act_inv_linear_1_0 = (v_linear_1_0 + actInv4_1_0);
  long long actInv5_1_2 = (((actInv3_1_2_0 * parent_v_angular_1_0) >> 31) + (((actInv3_1_2_1 * parent_v_angular_1_1) >> 30) + ((actInv3_1_2_2 * parent_v_angular_1_2) >> 26)));
  long long actInv5_1_1 = ((((actInv3_1_1_0 * parent_v_angular_1_0) >> 30) + (((((actInv3_1_1_1 * parent_v_angular_1_1) >> 31) + (((actInv3_1_1_2 * parent_v_angular_1_2) >> 30) << 5)) >> 5) << 5)) >> 5);
  long long actInv5_1_0 = ((((actInv3_1_0_0 * parent_v_angular_1_0) >> 30) + (((((actInv3_1_0_1 * parent_v_angular_1_1) >> 31) + (((actInv3_1_0_2 * parent_v_angular_1_2) >> 30) << 5)) >> 5) << 5)) >> 5);
  long long act_inv_angular_1_2 = (((v_angular_1_2 << 5) + actInv5_1_2) >> 5);
  long long act_inv_angular_1_1 = ((v_angular_1_1 + (actInv5_1_1 << 5)) >> 5);
  long long act_inv_angular_1_0 = ((v_angular_1_0 + (actInv5_1_0 << 5)) >> 5);
  long long minus_m_w_1 = v_1;
  long long temp26 = -(minus_m_w_1);
  long long temp25 = -(temp26);
  long long alpha_cross1_linear_1 = ((temp25 * act_inv_linear_1_1) >> 26);
  long long temp27 = -(minus_m_w_1);
  long long alpha_cross2_linear_1 = ((temp27 * act_inv_linear_1_0) >> 26);
  long long alpha_cross_linear_1_2 = 0;
  long long alpha_cross_linear_1_1 = alpha_cross2_linear_1;
  long long alpha_cross_linear_1_0 = alpha_cross1_linear_1;
  long long temp29 = -(minus_m_w_1);
  long long temp28 = -(temp29);
  long long alpha_cross1_angular_1 = ((temp28 * act_inv_angular_1_1) >> 30);
  long long temp30 = -(minus_m_w_1);
  long long alpha_cross2_angular_1 = ((temp30 * act_inv_angular_1_0) >> 30);
  long long alpha_cross_angular_1_2 = 0;
  long long alpha_cross_angular_1_1 = alpha_cross2_angular_1;
  long long alpha_cross_angular_1_0 = alpha_cross1_angular_1;
  long long new_a_gf_1_5 = alpha_cross_angular_1_2;
  long long new_a_gf_1_4 = alpha_cross_angular_1_1;
  long long new_a_gf_1_3 = alpha_cross_angular_1_0;
  long long new_a_gf_1_2 = alpha_cross_linear_1_2;
  long long new_a_gf_1_1 = alpha_cross_linear_1_1;
  long long new_a_gf_1_0 = alpha_cross_linear_1_0;
  long long new_a_gf_up1_1 = (((a_1 << 5) + new_a_gf_1_5) >> 5);
  long long new_a_gf2_linear_1_2 = new_a_gf_1_2;
  long long new_a_gf2_linear_1_1 = new_a_gf_1_1;
  long long new_a_gf2_linear_1_0 = new_a_gf_1_0;
  long long new_a_gf2_angular_1_2 = new_a_gf_up1_1;
  long long new_a_gf2_angular_1_1 = new_a_gf_1_4;
  long long new_a_gf2_angular_1_0 = new_a_gf_1_3;
  long long r_8_actInv1_1_0 = (((limi_translation_1_1 * parent_a_gf_angular_1_2) >> 26) - ((limi_translation_1_2 * parent_a_gf_angular_1_1) >> 31));
  long long r_8_actInv1_1_1 = (((limi_translation_1_2 * parent_a_gf_angular_1_0) >> 31) - ((limi_translation_1_0 * parent_a_gf_angular_1_2) >> 26));
  long long r_8_actInv1_1_2 = (((limi_translation_1_0 * parent_a_gf_angular_1_1) >> 31) - ((limi_translation_1_1 * parent_a_gf_angular_1_0) >> 31));
  long long r_9_actInv2_1_2 = (((parent_a_gf_linear_1_2 << 4) - r_8_actInv1_1_2) >> 4);
  long long r_9_actInv2_1_1 = (parent_a_gf_linear_1_1 - r_8_actInv1_1_1);
  long long r_9_actInv2_1_0 = (parent_a_gf_linear_1_0 - r_8_actInv1_1_0);
  long long r_10_actInv3_1_2_2 = limi_rotation_1_2_2;
  long long r_10_actInv3_1_1_2 = limi_rotation_1_2_1;
  long long r_10_actInv3_1_0_2 = limi_rotation_1_2_0;
  long long r_10_actInv3_1_2_1 = limi_rotation_1_1_2;
  long long r_10_actInv3_1_1_1 = limi_rotation_1_1_1;
  long long r_10_actInv3_1_0_1 = limi_rotation_1_1_0;
  long long r_10_actInv3_1_2_0 = limi_rotation_1_0_2;
  long long r_10_actInv3_1_1_0 = limi_rotation_1_0_1;
  long long r_10_actInv3_1_0_0 = limi_rotation_1_0_0;
  long long r_11_actInv4_1_2 = (((r_10_actInv3_1_2_0 * r_9_actInv2_1_0) >> 31) + (((r_10_actInv3_1_2_1 * r_9_actInv2_1_1) >> 30) + ((r_10_actInv3_1_2_2 * r_9_actInv2_1_2) >> 27)));
  long long r_11_actInv4_1_1 = ((((r_10_actInv3_1_1_0 * r_9_actInv2_1_0) >> 30) + (((((r_10_actInv3_1_1_1 * r_9_actInv2_1_1) >> 31) + (((r_10_actInv3_1_1_2 * r_9_actInv2_1_2) >> 30) << 4)) >> 4) << 4)) >> 4);
  long long r_11_actInv4_1_0 = ((((r_10_actInv3_1_0_0 * r_9_actInv2_1_0) >> 30) + (((((r_10_actInv3_1_0_1 * r_9_actInv2_1_1) >> 31) + (((r_10_actInv3_1_0_2 * r_9_actInv2_1_2) >> 30) << 4)) >> 4) << 4)) >> 4);
  long long r_12_act_inv_linear_1_2 = (new_a_gf2_linear_1_2 + r_11_actInv4_1_2);
  long long r_12_act_inv_linear_1_1 = ((new_a_gf2_linear_1_1 + (r_11_actInv4_1_1 << 4)) >> 4);
  long long r_12_act_inv_linear_1_0 = ((new_a_gf2_linear_1_0 + (r_11_actInv4_1_0 << 4)) >> 4);
  long long r_13_actInv5_1_2 = (((r_10_actInv3_1_2_0 * parent_a_gf_angular_1_0) >> 31) + (((r_10_actInv3_1_2_1 * parent_a_gf_angular_1_1) >> 30) + ((r_10_actInv3_1_2_2 * parent_a_gf_angular_1_2) >> 26)));
  long long r_13_actInv5_1_1 = ((((r_10_actInv3_1_1_0 * parent_a_gf_angular_1_0) >> 30) + (((((r_10_actInv3_1_1_1 * parent_a_gf_angular_1_1) >> 31) + (((r_10_actInv3_1_1_2 * parent_a_gf_angular_1_2) >> 30) << 5)) >> 5) << 5)) >> 5);
  long long r_13_actInv5_1_0 = ((((r_10_actInv3_1_0_0 * parent_a_gf_angular_1_0) >> 30) + (((((r_10_actInv3_1_0_1 * parent_a_gf_angular_1_1) >> 31) + (((r_10_actInv3_1_0_2 * parent_a_gf_angular_1_2) >> 30) << 5)) >> 5) << 5)) >> 5);
  long long r_14_act_inv_angular_1_2 = (((new_a_gf2_angular_1_2 << 5) + r_13_actInv5_1_2) >> 5);
  long long r_14_act_inv_angular_1_1 = (((new_a_gf2_angular_1_1 << 4) + r_13_actInv5_1_1) >> 4);
  long long r_14_act_inv_angular_1_0 = (((new_a_gf2_angular_1_0 << 4) + r_13_actInv5_1_0) >> 4);
  long long new_a_gf_up3_1_5 = r_14_act_inv_angular_1_2;
  long long new_a_gf_up3_1_4 = r_14_act_inv_angular_1_1;
  long long new_a_gf_up3_1_3 = r_14_act_inv_angular_1_0;
  long long new_a_gf_up3_1_2 = r_12_act_inv_linear_1_2;
  long long new_a_gf_up3_1_1 = r_12_act_inv_linear_1_1;
  long long new_a_gf_up3_1_0 = r_12_act_inv_linear_1_0;
  long long h_linear_1_1_0 = (((lever_1_1 * act_inv_angular_1_2) >> 26) - ((lever_1_2 * act_inv_angular_1_1) >> 26));
  long long h_linear_1_1_1 = (((lever_1_2 * act_inv_angular_1_0) >> 26) - ((lever_1_0 * act_inv_angular_1_2) >> 26));
  long long h_linear_1_1_2 = (((lever_1_0 * act_inv_angular_1_1) >> 26) - ((lever_1_1 * act_inv_angular_1_0) >> 26));
  long long h_linear_2_1_2 = (act_inv_linear_1_2 - h_linear_1_1_2);
  long long h_linear_2_1_1 = (act_inv_linear_1_1 - h_linear_1_1_1);
  long long h_linear_2_1_0 = (act_inv_linear_1_0 - h_linear_1_1_0);
  long long h_linear_1_2 = ((h_linear_2_1_2 * masses_1) >> 31);
  long long h_linear_1_1 = ((h_linear_2_1_1 * masses_1) >> 31);
  long long h_linear_1_0 = ((h_linear_2_1_0 * masses_1) >> 31);
  long long temp31 = ((act_inv_angular_1_0 * inertia_1_0_0) >> 26);
  long long temp32 = ((act_inv_angular_1_1 * inertia_1_0_1) >> 26);
  long long rhsMult1_temp_1 = (temp31 + temp32);
  long long temp33 = ((act_inv_angular_1_2 * inertia_1_0_2) >> 26);
  long long rhsMult1_1 = (rhsMult1_temp_1 + temp33);
  long long temp34 = ((act_inv_angular_1_0 * inertia_1_0_1) >> 26);
  long long temp35 = ((act_inv_angular_1_1 * inertia_1_1_1) >> 26);
  long long rhsMult2_temp_1 = (temp34 + temp35);
  long long temp36 = ((act_inv_angular_1_2 * inertia_1_1_2) >> 26);
  long long rhsMult2_1 = (rhsMult2_temp_1 + temp36);
  long long temp37 = ((act_inv_angular_1_0 * inertia_1_0_2) >> 26);
  long long temp38 = ((act_inv_angular_1_1 * inertia_1_1_2) >> 26);
  long long rhsMult3_temp_1 = (temp37 + temp38);
  long long temp39 = ((act_inv_angular_1_2 * inertia_1_2_2) >> 26);
  long long rhsMult3_1 = (rhsMult3_temp_1 + temp39);
  long long rhsMult_1_2 = rhsMult3_1;
  long long rhsMult_1_1 = rhsMult2_1;
  long long rhsMult_1_0 = rhsMult1_1;
  long long h_angular_first_1_2 = rhsMult_1_2;
  long long h_angular_first_1_1 = rhsMult_1_1;
  long long h_angular_first_1_0 = rhsMult_1_0;
  long long h_angular_1_1_0 = (((lever_1_1 * h_linear_1_2) >> 31) - ((lever_1_2 * h_linear_1_1) >> 31));
  long long h_angular_1_1_1 = (((lever_1_2 * h_linear_1_0) >> 31) - ((lever_1_0 * h_linear_1_2) >> 31));
  long long h_angular_1_1_2 = (((lever_1_0 * h_linear_1_1) >> 31) - ((lever_1_1 * h_linear_1_0) >> 31));
  long long h_angular_1_2 = (h_angular_first_1_2 + h_angular_1_1_2);
  long long h_angular_1_1 = (h_angular_first_1_1 + h_angular_1_1_1);
  long long h_angular_1_0 = (h_angular_first_1_0 + h_angular_1_1_0);
  long long f_linear_1_1_0 = ((((lever_1_1 * r_14_act_inv_angular_1_2) >> 26) - (((lever_1_2 * r_14_act_inv_angular_1_1) >> 23) << 1)) >> 2);
  long long f_linear_1_1_1 = (((((lever_1_2 * r_14_act_inv_angular_1_0) >> 23) << 1) - ((lever_1_0 * r_14_act_inv_angular_1_2) >> 26)) >> 1);
  long long f_linear_1_1_2 = ((((lever_1_0 * r_14_act_inv_angular_1_1) >> 23) - (((lever_1_1 * r_14_act_inv_angular_1_0) >> 26) << 3)) >> 3);
  long long f_linear_2_1_2 = ((r_12_act_inv_linear_1_2 - (f_linear_1_1_2 << 4)) >> 4);
  long long f_linear_2_1_1 = (((r_12_act_inv_linear_1_1 << 3) - f_linear_1_1_1) >> 3);
  long long f_linear_2_1_0 = (((r_12_act_inv_linear_1_0 << 2) - f_linear_1_1_0) >> 2);
  long long f_linear_3_1_2 = ((f_linear_2_1_2 * masses_1) >> 31);
  long long f_linear_3_1_1 = ((f_linear_2_1_1 * masses_1) >> 30);
  long long f_linear_3_1_0 = ((f_linear_2_1_0 * masses_1) >> 30);
  long long temp40 = ((r_14_act_inv_angular_1_0 * inertia_1_0_0) >> 24);
  long long temp41 = ((r_14_act_inv_angular_1_1 * inertia_1_0_1) >> 23);
  long long r_15_rhsMult1_temp_1 = (((temp40 << 1) + temp41) >> 2);
  long long temp42 = ((r_14_act_inv_angular_1_2 * inertia_1_0_2) >> 26);
  long long r_16_rhsMult1_1 = (((r_15_rhsMult1_temp_1 << 3) + temp42) >> 3);
  long long temp43 = ((r_14_act_inv_angular_1_0 * inertia_1_0_1) >> 23);
  long long temp44 = ((r_14_act_inv_angular_1_1 * inertia_1_1_1) >> 26);
  long long r_17_rhsMult2_temp_1 = ((temp43 + (temp44 << 3)) >> 3);
  long long temp45 = ((r_14_act_inv_angular_1_2 * inertia_1_1_2) >> 26);
  long long r_18_rhsMult2_1 = (((r_17_rhsMult2_temp_1 << 4) + temp45) >> 4);
  long long temp46 = ((r_14_act_inv_angular_1_0 * inertia_1_0_2) >> 25);
  long long temp47 = ((r_14_act_inv_angular_1_1 * inertia_1_1_2) >> 22);
  long long r_19_rhsMult3_temp_1 = (((temp46 << 3) + temp47) >> 3);
  long long temp48 = ((r_14_act_inv_angular_1_2 * inertia_1_2_2) >> 26);
  long long r_20_rhsMult3_1 = (((r_19_rhsMult3_temp_1 << 3) + temp48) >> 3);
  long long r_21_rhsMult_1_2 = r_20_rhsMult3_1;
  long long r_21_rhsMult_1_1 = r_18_rhsMult2_1;
  long long r_21_rhsMult_1_0 = r_16_rhsMult1_1;
  long long f_angular_first_1_2 = r_21_rhsMult_1_2;
  long long f_angular_first_1_1 = r_21_rhsMult_1_1;
  long long f_angular_first_1_0 = r_21_rhsMult_1_0;
  long long f_angular_1_1_0 = (((lever_1_1 * f_linear_3_1_2) >> 27) - ((lever_1_2 * f_linear_3_1_1) >> 28));
  long long f_angular_1_1_1 = (((lever_1_2 * f_linear_3_1_0) >> 28) - ((lever_1_0 * f_linear_3_1_2) >> 27));
  long long f_angular_1_1_2 = (((lever_1_0 * f_linear_3_1_1) >> 28) - ((lever_1_1 * f_linear_3_1_0) >> 28));
  long long f_angular_2_1_2 = (((f_angular_first_1_2 << 3) + f_angular_1_1_2) >> 3);
  long long f_angular_2_1_1 = (((f_angular_first_1_1 << 4) + f_angular_1_1_1) >> 4);
  long long f_angular_2_1_0 = (((f_angular_first_1_0 << 3) + f_angular_1_1_0) >> 3);
  long long f_linear_4_temp_1_0 = (((((act_inv_angular_1_1 * h_linear_1_2) >> 30) << 3) - ((act_inv_angular_1_2 * h_linear_1_1) >> 27)) >> 3);
  long long f_linear_4_temp_1_1 = ((((act_inv_angular_1_2 * h_linear_1_0) >> 30) - ((act_inv_angular_1_0 * h_linear_1_2) >> 30)) >> 1);
  long long f_linear_4_temp_1_2 = ((((act_inv_angular_1_0 * h_linear_1_1) >> 27) - (((act_inv_angular_1_1 * h_linear_1_0) >> 30) << 3)) >> 3);
  long long f_linear_4_1_2 = ((f_linear_3_1_2 + f_linear_4_temp_1_2) >> 1);
  long long f_linear_4_1_1 = ((f_linear_3_1_1 + (f_linear_4_temp_1_1 << 2)) >> 2);
  long long f_linear_4_1_0 = ((f_linear_3_1_0 + (f_linear_4_temp_1_0 << 1)) >> 2);
  long long f_angular_3_temp_1_0 = ((((act_inv_angular_1_1 * h_angular_first_1_2) >> 30) - ((act_inv_angular_1_2 * h_angular_first_1_1) >> 30)) >> 1);
  long long f_angular_3_temp_1_1 = ((((act_inv_angular_1_2 * h_angular_first_1_0) >> 30) - ((act_inv_angular_1_0 * h_angular_first_1_2) >> 30)) >> 1);
  long long f_angular_3_temp_1_2 = ((((act_inv_angular_1_0 * h_angular_first_1_1) >> 30) - ((act_inv_angular_1_1 * h_angular_first_1_0) >> 30)) >> 1);
  long long f_angular_3_1_2 = ((f_angular_2_1_2 + (f_angular_3_temp_1_2 << 2)) >> 2);
  long long f_angular_3_1_1 = ((f_angular_2_1_1 + (f_angular_3_temp_1_1 << 1)) >> 2);
  long long f_angular_3_1_0 = ((f_angular_2_1_0 + (f_angular_3_temp_1_0 << 2)) >> 3);
  long long f_angular_4_temp_1_0 = (((act_inv_linear_1_1 * h_linear_1_2) >> 31) - ((act_inv_linear_1_2 * h_linear_1_1) >> 31));
  long long f_angular_4_temp_1_1 = (((act_inv_linear_1_2 * h_linear_1_0) >> 31) - ((act_inv_linear_1_0 * h_linear_1_2) >> 31));
  long long f_angular_4_temp_1_2 = (((act_inv_linear_1_0 * h_linear_1_1) >> 31) - ((act_inv_linear_1_1 * h_linear_1_0) >> 31));
  long long f_angular_4_1_2 = (((f_angular_3_1_2 << 5) + f_angular_4_temp_1_2) >> 5);
  long long f_angular_4_1_1 = (((f_angular_3_1_1 << 6) + f_angular_4_temp_1_1) >> 6);
  long long f_angular_4_1_0 = (((f_angular_3_1_0 << 6) + f_angular_4_temp_1_0) >> 6);
  long long h_rnea_firstpass1_5 = h_angular_1_2;
  long long h_rnea_firstpass1_4 = h_angular_1_1;
  long long h_rnea_firstpass1_3 = h_angular_1_0;
  long long h_rnea_firstpass1_2 = h_linear_1_2;
  long long h_rnea_firstpass1_1 = h_linear_1_1;
  long long h_rnea_firstpass1_0 = h_linear_1_0;
  long long f_rnea_firstpass1_5 = f_angular_4_1_2;
  long long f_rnea_firstpass1_4 = f_angular_4_1_1;
  long long f_rnea_firstpass1_3 = f_angular_4_1_0;
  long long f_rnea_firstpass1_2 = f_linear_4_1_2;
  long long f_rnea_firstpass1_1 = f_linear_4_1_1;
  long long f_rnea_firstpass1_0 = f_linear_4_1_0;
  long long new_v_1_5 = act_inv_angular_1_2;
  long long new_v_1_4 = act_inv_angular_1_1;
  long long new_v_1_3 = act_inv_angular_1_0;
  long long new_v_1_2 = act_inv_linear_1_2;
  long long new_v_1_1 = act_inv_linear_1_1;
  long long new_v_1_0 = act_inv_linear_1_0;
  long long rotation_matrix_2_2_2 = 1073741824;
  long long rotation_matrix_2_2_1 = 0;
  long long rotation_matrix_2_2_0 = 0;
  long long rotation_matrix_2_1_2 = 0;
  long long rotation_matrix_2_1_1 = qcos_2;
  long long rotation_matrix_2_1_0 = qsin_2;
  long long rotation_matrix_2_0_2 = 0;
  long long rotation_matrix_2_0_1 = -(qsin_2);
  long long rotation_matrix_2_0_0 = qcos_2;
  long long limi_rotation_2_2_2 = 0;
  long long limi_rotation_2_2_1 = rotation_matrix_2_1_1;
  long long limi_rotation_2_2_0 = rotation_matrix_2_1_0;
  long long limi_rotation_2_1_2 = -1073741825;
  long long limi_rotation_2_1_1 = 0;
  long long limi_rotation_2_1_0 = 0;
  long long limi_rotation_2_0_2 = 0;
  long long limi_rotation_2_0_1 = rotation_matrix_2_0_1;
  long long limi_rotation_2_0_0 = rotation_matrix_2_0_0;
  long long v_linear_2_2 = data_v_2_2;
  long long v_linear_2_1 = data_v_2_1;
  long long v_linear_2_0 = data_v_2_0;
  long long v_angular_2_2 = v_2;
  long long v_angular_2_1 = data_v_2_4;
  long long v_angular_2_0 = data_v_2_3;
  long long parent_v_linear_2_2 = new_v_1_2;
  long long parent_v_linear_2_1 = new_v_1_1;
  long long parent_v_linear_2_0 = new_v_1_0;
  long long parent_v_angular_2_2 = new_v_1_5;
  long long parent_v_angular_2_1 = new_v_1_4;
  long long parent_v_angular_2_0 = new_v_1_3;
  long long parent_a_gf_linear_2_2 = new_a_gf_up3_1_2;
  long long parent_a_gf_linear_2_1 = new_a_gf_up3_1_1;
  long long parent_a_gf_linear_2_0 = new_a_gf_up3_1_0;
  long long parent_a_gf_angular_2_2 = new_a_gf_up3_1_5;
  long long parent_a_gf_angular_2_1 = new_a_gf_up3_1_4;
  long long parent_a_gf_angular_2_0 = new_a_gf_up3_1_3;
  long long actInv1_2_0 = (((((limi_translation_2_1 * parent_v_angular_2_2) >> 29) << 3) - ((limi_translation_2_2 * parent_v_angular_2_1) >> 26)) >> 3);
  long long actInv1_2_1 = (((limi_translation_2_2 * parent_v_angular_2_0) >> 26) - ((limi_translation_2_0 * parent_v_angular_2_2) >> 26));
  long long actInv1_2_2 = ((((limi_translation_2_0 * parent_v_angular_2_1) >> 26) - (((limi_translation_2_1 * parent_v_angular_2_0) >> 29) << 3)) >> 3);
  long long actInv2_2_2 = ((parent_v_linear_2_2 - (actInv1_2_2 << 3)) >> 3);
  long long actInv2_2_1 = (parent_v_linear_2_1 - actInv1_2_1);
  long long actInv2_2_0 = ((parent_v_linear_2_0 - (actInv1_2_0 << 3)) >> 3);
  long long actInv3_2_2_2 = limi_rotation_2_2_2;
  long long actInv3_2_1_2 = limi_rotation_2_2_1;
  long long actInv3_2_0_2 = limi_rotation_2_2_0;
  long long actInv3_2_2_1 = limi_rotation_2_1_2;
  long long actInv3_2_1_1 = limi_rotation_2_1_1;
  long long actInv3_2_0_1 = limi_rotation_2_1_0;
  long long actInv3_2_2_0 = limi_rotation_2_0_2;
  long long actInv3_2_1_0 = limi_rotation_2_0_1;
  long long actInv3_2_0_0 = limi_rotation_2_0_0;
  long long actInv4_2_2 = (((actInv3_2_2_0 * actInv2_2_0) >> 28) + (((actInv3_2_2_1 * actInv2_2_1) >> 30) + ((actInv3_2_2_2 * actInv2_2_2) >> 28)));
  long long actInv4_2_1 = ((((actInv3_2_1_0 * actInv2_2_0) >> 30) + ((((actInv3_2_1_1 * actInv2_2_1) >> 31) + (((actInv3_2_1_2 * actInv2_2_2) >> 30) << 3)) >> 3)) >> 1);
  long long actInv4_2_0 = ((((actInv3_2_0_0 * actInv2_2_0) >> 30) + ((((actInv3_2_0_1 * actInv2_2_1) >> 31) + (((actInv3_2_0_2 * actInv2_2_2) >> 30) << 3)) >> 3)) >> 1);
  long long act_inv_linear_2_2 = (v_linear_2_2 + actInv4_2_2);
  long long act_inv_linear_2_1 = ((v_linear_2_1 + (actInv4_2_1 << 4)) >> 4);
  long long act_inv_linear_2_0 = ((v_linear_2_0 + (actInv4_2_0 << 4)) >> 4);
  long long actInv5_2_2 = ((((actInv3_2_2_0 * parent_v_angular_2_0) >> 26) + ((((((actInv3_2_2_1 * parent_v_angular_2_1) >> 30) << 5) + ((actInv3_2_2_2 * parent_v_angular_2_2) >> 26)) >> 5) << 5)) >> 5);
  long long actInv5_2_1 = ((((actInv3_2_1_0 * parent_v_angular_2_0) >> 30) + ((((actInv3_2_1_1 * parent_v_angular_2_1) >> 26) + (((actInv3_2_1_2 * parent_v_angular_2_2) >> 30) << 5)) >> 5)) >> 1);
  long long actInv5_2_0 = ((((actInv3_2_0_0 * parent_v_angular_2_0) >> 30) + ((((actInv3_2_0_1 * parent_v_angular_2_1) >> 26) + (((actInv3_2_0_2 * parent_v_angular_2_2) >> 30) << 5)) >> 5)) >> 1);
  long long act_inv_angular_2_2 = ((v_angular_2_2 + actInv5_2_2) >> 1);
  long long act_inv_angular_2_1 = ((v_angular_2_1 + (actInv5_2_1 << 6)) >> 6);
  long long act_inv_angular_2_0 = ((v_angular_2_0 + (actInv5_2_0 << 6)) >> 6);
  long long minus_m_w_2 = v_2;
  long long temp50 = -(minus_m_w_2);
  long long temp49 = -(temp50);
  long long alpha_cross1_linear_2 = ((temp49 * act_inv_linear_2_1) >> 30);
  long long temp51 = -(minus_m_w_2);
  long long alpha_cross2_linear_2 = ((temp51 * act_inv_linear_2_0) >> 30);
  long long alpha_cross_linear_2_2 = 0;
  long long alpha_cross_linear_2_1 = alpha_cross2_linear_2;
  long long alpha_cross_linear_2_0 = alpha_cross1_linear_2;
  long long temp53 = -(minus_m_w_2);
  long long temp52 = -(temp53);
  long long alpha_cross1_angular_2 = ((temp52 * act_inv_angular_2_1) >> 30);
  long long temp54 = -(minus_m_w_2);
  long long alpha_cross2_angular_2 = ((temp54 * act_inv_angular_2_0) >> 30);
  long long alpha_cross_angular_2_2 = 0;
  long long alpha_cross_angular_2_1 = alpha_cross2_angular_2;
  long long alpha_cross_angular_2_0 = alpha_cross1_angular_2;
  long long new_a_gf_2_5 = alpha_cross_angular_2_2;
  long long new_a_gf_2_4 = alpha_cross_angular_2_1;
  long long new_a_gf_2_3 = alpha_cross_angular_2_0;
  long long new_a_gf_2_2 = alpha_cross_linear_2_2;
  long long new_a_gf_2_1 = alpha_cross_linear_2_1;
  long long new_a_gf_2_0 = alpha_cross_linear_2_0;
  long long new_a_gf_up1_2 = (((a_2 << 5) + new_a_gf_2_5) >> 5);
  long long new_a_gf2_linear_2_2 = new_a_gf_2_2;
  long long new_a_gf2_linear_2_1 = new_a_gf_2_1;
  long long new_a_gf2_linear_2_0 = new_a_gf_2_0;
  long long new_a_gf2_angular_2_2 = new_a_gf_up1_2;
  long long new_a_gf2_angular_2_1 = new_a_gf_2_4;
  long long new_a_gf2_angular_2_0 = new_a_gf_2_3;
  long long r_22_actInv1_2_0 = (((((limi_translation_2_1 * parent_a_gf_angular_2_2) >> 29) << 3) - ((limi_translation_2_2 * parent_a_gf_angular_2_1) >> 22)) >> 3);
  long long r_22_actInv1_2_1 = (((limi_translation_2_2 * parent_a_gf_angular_2_0) >> 22) - ((limi_translation_2_0 * parent_a_gf_angular_2_2) >> 26));
  long long r_22_actInv1_2_2 = ((((limi_translation_2_0 * parent_a_gf_angular_2_1) >> 22) - (((limi_translation_2_1 * parent_a_gf_angular_2_0) >> 30) << 8)) >> 8);
  long long r_23_actInv2_2_2 = ((parent_a_gf_linear_2_2 - (r_22_actInv1_2_2 << 8)) >> 8);
  long long r_23_actInv2_2_1 = (((parent_a_gf_linear_2_1 << 4) - r_22_actInv1_2_1) >> 4);
  long long r_23_actInv2_2_0 = (((parent_a_gf_linear_2_0 << 1) - r_22_actInv1_2_0) >> 2);
  long long r_24_actInv3_2_2_2 = limi_rotation_2_2_2;
  long long r_24_actInv3_2_1_2 = limi_rotation_2_2_1;
  long long r_24_actInv3_2_0_2 = limi_rotation_2_2_0;
  long long r_24_actInv3_2_2_1 = limi_rotation_2_1_2;
  long long r_24_actInv3_2_1_1 = limi_rotation_2_1_1;
  long long r_24_actInv3_2_0_1 = limi_rotation_2_1_0;
  long long r_24_actInv3_2_2_0 = limi_rotation_2_0_2;
  long long r_24_actInv3_2_1_0 = limi_rotation_2_0_1;
  long long r_24_actInv3_2_0_0 = limi_rotation_2_0_0;
  long long r_25_actInv4_2_2 = ((((r_24_actInv3_2_2_0 * r_23_actInv2_2_0) >> 26) + ((((((r_24_actInv3_2_2_1 * r_23_actInv2_2_1) >> 30) << 4) + ((r_24_actInv3_2_2_2 * r_23_actInv2_2_2) >> 23)) >> 4) << 4)) >> 4);
  long long r_25_actInv4_2_1 = ((((r_24_actInv3_2_1_0 * r_23_actInv2_2_0) >> 30) + (((((r_24_actInv3_2_1_1 * r_23_actInv2_2_1) >> 27) + (((r_24_actInv3_2_1_2 * r_23_actInv2_2_2) >> 30) << 8)) >> 8) << 3)) >> 3);
  long long r_25_actInv4_2_0 = ((((r_24_actInv3_2_0_0 * r_23_actInv2_2_0) >> 30) + (((((r_24_actInv3_2_0_1 * r_23_actInv2_2_1) >> 27) + (((r_24_actInv3_2_0_2 * r_23_actInv2_2_2) >> 30) << 8)) >> 8) << 3)) >> 3);
  long long r_26_act_inv_linear_2_2 = ((new_a_gf2_linear_2_2 + (r_25_actInv4_2_2 << 4)) >> 4);
  long long r_26_act_inv_linear_2_1 = ((new_a_gf2_linear_2_1 + r_25_actInv4_2_1) >> 1);
  long long r_26_act_inv_linear_2_0 = ((new_a_gf2_linear_2_0 + r_25_actInv4_2_0) >> 1);
  long long r_27_actInv5_2_2 = ((((r_24_actInv3_2_2_0 * parent_a_gf_angular_2_0) >> 22) + ((((((r_24_actInv3_2_2_1 * parent_a_gf_angular_2_1) >> 30) << 9) + ((r_24_actInv3_2_2_2 * parent_a_gf_angular_2_2) >> 26)) >> 9) << 9)) >> 9);
  long long r_27_actInv5_2_1 = (((((r_24_actInv3_2_1_0 * parent_a_gf_angular_2_0) >> 30) << 4) + ((((r_24_actInv3_2_1_1 * parent_a_gf_angular_2_1) >> 22) + (((r_24_actInv3_2_1_2 * parent_a_gf_angular_2_2) >> 30) << 5)) >> 5)) >> 4);
  long long r_27_actInv5_2_0 = (((((r_24_actInv3_2_0_0 * parent_a_gf_angular_2_0) >> 30) << 4) + ((((r_24_actInv3_2_0_1 * parent_a_gf_angular_2_1) >> 22) + (((r_24_actInv3_2_0_2 * parent_a_gf_angular_2_2) >> 30) << 5)) >> 5)) >> 4);
  long long r_28_act_inv_angular_2_2 = ((new_a_gf2_angular_2_2 + (r_27_actInv5_2_2 << 4)) >> 4);
  long long r_28_act_inv_angular_2_1 = (((new_a_gf2_angular_2_1 << 1) + r_27_actInv5_2_1) >> 2);
  long long r_28_act_inv_angular_2_0 = (((new_a_gf2_angular_2_0 << 1) + r_27_actInv5_2_0) >> 2);
  long long new_a_gf_up3_2_5 = r_28_act_inv_angular_2_2;
  long long new_a_gf_up3_2_4 = r_28_act_inv_angular_2_1;
  long long new_a_gf_up3_2_3 = r_28_act_inv_angular_2_0;
  long long new_a_gf_up3_2_2 = r_26_act_inv_linear_2_2;
  long long new_a_gf_up3_2_1 = r_26_act_inv_linear_2_1;
  long long new_a_gf_up3_2_0 = r_26_act_inv_linear_2_0;
  long long h_linear_1_2_0 = ((((lever_2_1 * act_inv_angular_2_2) >> 26) - (((lever_2_2 * act_inv_angular_2_1) >> 27) << 1)) >> 2);
  long long h_linear_1_2_1 = (((((lever_2_2 * act_inv_angular_2_0) >> 27) << 1) - ((lever_2_0 * act_inv_angular_2_2) >> 26)) >> 1);
  long long h_linear_1_2_2 = ((((lever_2_0 * act_inv_angular_2_1) >> 26) - ((lever_2_1 * act_inv_angular_2_0) >> 26)) >> 1);
  long long h_linear_2_2_2 = ((act_inv_linear_2_2 - (h_linear_1_2_2 << 2)) >> 2);
  long long h_linear_2_2_1 = (((act_inv_linear_2_1 << 2) - h_linear_1_2_1) >> 3);
  long long h_linear_2_2_0 = (((act_inv_linear_2_0 << 1) - h_linear_1_2_0) >> 2);
  long long h_linear_2_2 = ((h_linear_2_2_2 * masses_2) >> 31);
  long long h_linear_2_1 = ((h_linear_2_2_1 * masses_2) >> 30);
  long long h_linear_2_0 = ((h_linear_2_2_0 * masses_2) >> 30);
  long long temp55 = ((act_inv_angular_2_0 * inertia_2_0_0) >> 26);
  long long temp56 = ((act_inv_angular_2_1 * inertia_2_0_1) >> 25);
  long long rhsMult1_temp_2 = (((temp55 << 1) + temp56) >> 1);
  long long temp57 = ((act_inv_angular_2_2 * inertia_2_0_2) >> 25);
  long long rhsMult1_2 = (((rhsMult1_temp_2 << 1) + temp57) >> 2);
  long long temp58 = ((act_inv_angular_2_0 * inertia_2_0_1) >> 25);
  long long temp59 = ((act_inv_angular_2_1 * inertia_2_1_1) >> 26);
  long long rhsMult2_temp_2 = ((temp58 + (temp59 << 1)) >> 1);
  long long temp60 = ((act_inv_angular_2_2 * inertia_2_1_2) >> 25);
  long long rhsMult2_2 = (((rhsMult2_temp_2 << 1) + temp60) >> 2);
  long long temp61 = ((act_inv_angular_2_0 * inertia_2_0_2) >> 25);
  long long temp62 = ((act_inv_angular_2_1 * inertia_2_1_2) >> 25);
  long long rhsMult3_temp_2 = (temp61 + temp62);
  long long temp63 = ((act_inv_angular_2_2 * inertia_2_2_2) >> 25);
  long long rhsMult3_2 = ((rhsMult3_temp_2 + temp63) >> 1);
  long long rhsMult_2_2 = rhsMult3_2;
  long long rhsMult_2_1 = rhsMult2_2;
  long long rhsMult_2_0 = rhsMult1_2;
  long long h_angular_first_2_2 = rhsMult_2_2;
  long long h_angular_first_2_1 = rhsMult_2_1;
  long long h_angular_first_2_0 = rhsMult_2_0;
  long long h_angular_1_2_0 = ((((lever_2_1 * h_linear_2_2) >> 27) - (((lever_2_2 * h_linear_2_1) >> 27) << 2)) >> 2);
  long long h_angular_1_2_1 = (((((lever_2_2 * h_linear_2_0) >> 27) << 2) - ((lever_2_0 * h_linear_2_2) >> 27)) >> 2);
  long long h_angular_1_2_2 = ((((lever_2_0 * h_linear_2_1) >> 26) - (((lever_2_1 * h_linear_2_0) >> 27) << 1)) >> 1);
  long long h_angular_2_2 = ((h_angular_first_2_2 + (h_angular_1_2_2 << 1)) >> 2);
  long long h_angular_2_1 = ((h_angular_first_2_1 + h_angular_1_2_1) >> 1);
  long long h_angular_2_0 = ((h_angular_first_2_0 + h_angular_1_2_0) >> 1);
  long long f_linear_1_2_0 = ((((lever_2_1 * r_28_act_inv_angular_2_2) >> 27) - (((lever_2_2 * r_28_act_inv_angular_2_1) >> 27) << 2)) >> 2);
  long long f_linear_1_2_1 = (((((lever_2_2 * r_28_act_inv_angular_2_0) >> 27) << 3) - ((lever_2_0 * r_28_act_inv_angular_2_2) >> 26)) >> 3);
  long long f_linear_1_2_2 = ((((lever_2_0 * r_28_act_inv_angular_2_1) >> 26) - ((lever_2_1 * r_28_act_inv_angular_2_0) >> 26)) >> 1);
  long long f_linear_2_2_2 = ((r_26_act_inv_linear_2_2 - (f_linear_1_2_2 << 3)) >> 3);
  long long f_linear_2_2_1 = (((r_26_act_inv_linear_2_1 << 2) - f_linear_1_2_1) >> 2);
  long long f_linear_2_2_0 = (((r_26_act_inv_linear_2_0 << 2) - f_linear_1_2_0) >> 2);
  long long f_linear_3_2_2 = ((f_linear_2_2_2 * masses_2) >> 31);
  long long f_linear_3_2_1 = ((f_linear_2_2_1 * masses_2) >> 31);
  long long f_linear_3_2_0 = ((f_linear_2_2_0 * masses_2) >> 31);
  long long temp64 = ((r_28_act_inv_angular_2_0 * inertia_2_0_0) >> 26);
  long long temp65 = ((r_28_act_inv_angular_2_1 * inertia_2_0_1) >> 23);
  long long r_29_rhsMult1_temp_2 = (((temp64 << 3) + temp65) >> 3);
  long long temp66 = ((r_28_act_inv_angular_2_2 * inertia_2_0_2) >> 25);
  long long r_30_rhsMult1_2 = (((r_29_rhsMult1_temp_2 << 3) + temp66) >> 3);
  long long temp67 = ((r_28_act_inv_angular_2_0 * inertia_2_0_1) >> 23);
  long long temp68 = ((r_28_act_inv_angular_2_1 * inertia_2_1_1) >> 26);
  long long r_31_rhsMult2_temp_2 = ((temp67 + (temp68 << 3)) >> 3);
  long long temp69 = ((r_28_act_inv_angular_2_2 * inertia_2_1_2) >> 25);
  long long r_32_rhsMult2_2 = (((r_31_rhsMult2_temp_2 << 3) + temp69) >> 3);
  long long temp70 = ((r_28_act_inv_angular_2_0 * inertia_2_0_2) >> 24);
  long long temp71 = ((r_28_act_inv_angular_2_1 * inertia_2_1_2) >> 24);
  long long r_33_rhsMult3_temp_2 = ((temp70 + temp71) >> 1);
  long long temp72 = ((r_28_act_inv_angular_2_2 * inertia_2_2_2) >> 25);
  long long r_34_rhsMult3_2 = (((r_33_rhsMult3_temp_2 << 2) + temp72) >> 3);
  long long r_35_rhsMult_2_2 = r_34_rhsMult3_2;
  long long r_35_rhsMult_2_1 = r_32_rhsMult2_2;
  long long r_35_rhsMult_2_0 = r_30_rhsMult1_2;
  long long f_angular_first_2_2 = r_35_rhsMult_2_2;
  long long f_angular_first_2_1 = r_35_rhsMult_2_1;
  long long f_angular_first_2_0 = r_35_rhsMult_2_0;
  long long f_angular_1_2_0 = ((((lever_2_1 * f_linear_3_2_2) >> 26) - (((lever_2_2 * f_linear_3_2_1) >> 27) << 3)) >> 3);
  long long f_angular_1_2_1 = (((((lever_2_2 * f_linear_3_2_0) >> 27) << 3) - ((lever_2_0 * f_linear_3_2_2) >> 26)) >> 3);
  long long f_angular_1_2_2 = ((((lever_2_0 * f_linear_3_2_1) >> 26) - ((lever_2_1 * f_linear_3_2_0) >> 26)) >> 1);
  long long f_angular_2_2_2 = ((f_angular_first_2_2 + (f_angular_1_2_2 << 1)) >> 2);
  long long f_angular_2_2_1 = ((f_angular_first_2_1 + (f_angular_1_2_1 << 1)) >> 2);
  long long f_angular_2_2_0 = ((f_angular_first_2_0 + (f_angular_1_2_0 << 1)) >> 2);
  long long f_linear_4_temp_2_0 = ((((act_inv_angular_2_1 * h_linear_2_2) >> 30) - (((act_inv_angular_2_2 * h_linear_2_1) >> 31) << 3)) >> 3);
  long long f_linear_4_temp_2_1 = (((((act_inv_angular_2_2 * h_linear_2_0) >> 31) << 3) - ((act_inv_angular_2_0 * h_linear_2_2) >> 30)) >> 3);
  long long f_linear_4_temp_2_2 = ((((act_inv_angular_2_0 * h_linear_2_1) >> 31) - ((act_inv_angular_2_1 * h_linear_2_0) >> 31)) >> 1);
  long long f_linear_4_2_2 = ((f_linear_3_2_2 + (f_linear_4_temp_2_2 << 4)) >> 4);
  long long f_linear_4_2_1 = ((f_linear_3_2_1 + (f_linear_4_temp_2_1 << 1)) >> 2);
  long long f_linear_4_2_0 = ((f_linear_3_2_0 + (f_linear_4_temp_2_0 << 1)) >> 1);
  long long f_angular_3_temp_2_0 = ((((act_inv_angular_2_1 * h_angular_first_2_2) >> 30) - (((act_inv_angular_2_2 * h_angular_first_2_1) >> 30) << 1)) >> 2);
  long long f_angular_3_temp_2_1 = (((((act_inv_angular_2_2 * h_angular_first_2_0) >> 30) << 1) - ((act_inv_angular_2_0 * h_angular_first_2_2) >> 30)) >> 2);
  long long f_angular_3_temp_2_2 = ((((act_inv_angular_2_0 * h_angular_first_2_1) >> 30) - ((act_inv_angular_2_1 * h_angular_first_2_0) >> 30)) >> 1);
  long long f_angular_3_2_2 = ((f_angular_2_2_2 + f_angular_3_temp_2_2) >> 1);
  long long f_angular_3_2_1 = ((f_angular_2_2_1 + f_angular_3_temp_2_1) >> 1);
  long long f_angular_3_2_0 = ((f_angular_2_2_0 + f_angular_3_temp_2_0) >> 1);
  long long f_angular_4_temp_2_0 = (((((act_inv_linear_2_1 * h_linear_2_2) >> 30) << 7) - ((act_inv_linear_2_2 * h_linear_2_1) >> 25)) >> 7);
  long long f_angular_4_temp_2_1 = ((((act_inv_linear_2_2 * h_linear_2_0) >> 25) - (((act_inv_linear_2_0 * h_linear_2_2) >> 30) << 7)) >> 7);
  long long f_angular_4_temp_2_2 = ((((act_inv_linear_2_0 * h_linear_2_1) >> 31) - ((act_inv_linear_2_1 * h_linear_2_0) >> 31)) >> 1);
  long long f_angular_4_2_2 = ((f_angular_3_2_2 + (f_angular_4_temp_2_2 << 2)) >> 2);
  long long f_angular_4_2_1 = (((f_angular_3_2_1 << 2) + f_angular_4_temp_2_1) >> 2);
  long long f_angular_4_2_0 = (((f_angular_3_2_0 << 2) + f_angular_4_temp_2_0) >> 2);
  long long h_rnea_firstpass2_5 = h_angular_2_2;
  long long h_rnea_firstpass2_4 = h_angular_2_1;
  long long h_rnea_firstpass2_3 = h_angular_2_0;
  long long h_rnea_firstpass2_2 = h_linear_2_2;
  long long h_rnea_firstpass2_1 = h_linear_2_1;
  long long h_rnea_firstpass2_0 = h_linear_2_0;
  long long f_rnea_firstpass2_5 = f_angular_4_2_2;
  long long f_rnea_firstpass2_4 = f_angular_4_2_1;
  long long f_rnea_firstpass2_3 = f_angular_4_2_0;
  long long f_rnea_firstpass2_2 = f_linear_4_2_2;
  long long f_rnea_firstpass2_1 = f_linear_4_2_1;
  long long f_rnea_firstpass2_0 = f_linear_4_2_0;
  long long new_v_2_5 = act_inv_angular_2_2;
  long long new_v_2_4 = act_inv_angular_2_1;
  long long new_v_2_3 = act_inv_angular_2_0;
  long long new_v_2_2 = act_inv_linear_2_2;
  long long new_v_2_1 = act_inv_linear_2_1;
  long long new_v_2_0 = act_inv_linear_2_0;
  long long rotation_matrix_3_2_2 = 1073741824;
  long long rotation_matrix_3_2_1 = 0;
  long long rotation_matrix_3_2_0 = 0;
  long long rotation_matrix_3_1_2 = 0;
  long long rotation_matrix_3_1_1 = qcos_3;
  long long rotation_matrix_3_1_0 = qsin_3;
  long long rotation_matrix_3_0_2 = 0;
  long long rotation_matrix_3_0_1 = -(qsin_3);
  long long rotation_matrix_3_0_0 = qcos_3;
  long long limi_rotation_3_2_2 = 0;
  long long limi_rotation_3_2_1 = rotation_matrix_3_1_1;
  long long limi_rotation_3_2_0 = rotation_matrix_3_1_0;
  long long limi_rotation_3_1_2 = -1073741825;
  long long limi_rotation_3_1_1 = 0;
  long long limi_rotation_3_1_0 = 0;
  long long limi_rotation_3_0_2 = 0;
  long long limi_rotation_3_0_1 = rotation_matrix_3_0_1;
  long long limi_rotation_3_0_0 = rotation_matrix_3_0_0;
  long long v_linear_3_2 = data_v_3_2;
  long long v_linear_3_1 = data_v_3_1;
  long long v_linear_3_0 = data_v_3_0;
  long long v_angular_3_2 = v_3;
  long long v_angular_3_1 = data_v_3_4;
  long long v_angular_3_0 = data_v_3_3;
  long long parent_v_linear_3_2 = new_v_2_2;
  long long parent_v_linear_3_1 = new_v_2_1;
  long long parent_v_linear_3_0 = new_v_2_0;
  long long parent_v_angular_3_2 = new_v_2_5;
  long long parent_v_angular_3_1 = new_v_2_4;
  long long parent_v_angular_3_0 = new_v_2_3;
  long long parent_a_gf_linear_3_2 = new_a_gf_up3_2_2;
  long long parent_a_gf_linear_3_1 = new_a_gf_up3_2_1;
  long long parent_a_gf_linear_3_0 = new_a_gf_up3_2_0;
  long long parent_a_gf_angular_3_2 = new_a_gf_up3_2_5;
  long long parent_a_gf_angular_3_1 = new_a_gf_up3_2_4;
  long long parent_a_gf_angular_3_0 = new_a_gf_up3_2_3;
  long long actInv1_3_0 = (((limi_translation_3_1 * parent_v_angular_3_2) >> 25) - ((limi_translation_3_2 * parent_v_angular_3_1) >> 25));
  long long actInv1_3_1 = ((((limi_translation_3_2 * parent_v_angular_3_0) >> 25) - (((limi_translation_3_0 * parent_v_angular_3_2) >> 27) << 2)) >> 2);
  long long actInv1_3_2 = (((((limi_translation_3_0 * parent_v_angular_3_1) >> 27) << 2) - ((limi_translation_3_1 * parent_v_angular_3_0) >> 25)) >> 2);
  long long actInv2_3_2 = ((parent_v_linear_3_2 - (actInv1_3_2 << 2)) >> 2);
  long long actInv2_3_1 = (((parent_v_linear_3_1 << 2) - actInv1_3_1) >> 2);
  long long actInv2_3_0 = (((parent_v_linear_3_0 << 4) - actInv1_3_0) >> 4);
  long long actInv3_3_2_2 = limi_rotation_3_2_2;
  long long actInv3_3_1_2 = limi_rotation_3_2_1;
  long long actInv3_3_0_2 = limi_rotation_3_2_0;
  long long actInv3_3_2_1 = limi_rotation_3_1_2;
  long long actInv3_3_1_1 = limi_rotation_3_1_1;
  long long actInv3_3_0_1 = limi_rotation_3_1_0;
  long long actInv3_3_2_0 = limi_rotation_3_0_2;
  long long actInv3_3_1_0 = limi_rotation_3_0_1;
  long long actInv3_3_0_0 = limi_rotation_3_0_0;
  long long actInv4_3_2 = ((((actInv3_3_2_0 * actInv2_3_0) >> 27) + ((((((actInv3_3_2_1 * actInv2_3_1) >> 30) << 4) + ((actInv3_3_2_2 * actInv2_3_2) >> 29)) >> 4) << 4)) >> 4);
  long long actInv4_3_1 = (((((actInv3_3_1_0 * actInv2_3_0) >> 30) << 2) + ((((actInv3_3_1_1 * actInv2_3_1) >> 27) + (((actInv3_3_1_2 * actInv2_3_2) >> 30) << 2)) >> 2)) >> 2);
  long long actInv4_3_0 = (((((actInv3_3_0_0 * actInv2_3_0) >> 30) << 2) + ((((actInv3_3_0_1 * actInv2_3_1) >> 27) + (((actInv3_3_0_2 * actInv2_3_2) >> 30) << 2)) >> 2)) >> 2);
  long long act_inv_linear_3_2 = ((v_linear_3_2 + (actInv4_3_2 << 4)) >> 4);
  long long act_inv_linear_3_1 = ((v_linear_3_1 + (actInv4_3_1 << 4)) >> 4);
  long long act_inv_linear_3_0 = ((v_linear_3_0 + (actInv4_3_0 << 4)) >> 4);
  long long actInv5_3_2 = ((((actInv3_3_2_0 * parent_v_angular_3_0) >> 25) + ((((((actInv3_3_2_1 * parent_v_angular_3_1) >> 30) << 6) + ((actInv3_3_2_2 * parent_v_angular_3_2) >> 25)) >> 6) << 6)) >> 6);
  long long actInv5_3_1 = ((((actInv3_3_1_0 * parent_v_angular_3_0) >> 30) + ((((actInv3_3_1_1 * parent_v_angular_3_1) >> 25) + (((actInv3_3_1_2 * parent_v_angular_3_2) >> 30) << 6)) >> 6)) >> 1);
  long long actInv5_3_0 = ((((actInv3_3_0_0 * parent_v_angular_3_0) >> 30) + ((((actInv3_3_0_1 * parent_v_angular_3_1) >> 25) + (((actInv3_3_0_2 * parent_v_angular_3_2) >> 30) << 6)) >> 6)) >> 1);
  long long act_inv_angular_3_2 = ((v_angular_3_2 + (actInv5_3_2 << 1)) >> 1);
  long long act_inv_angular_3_1 = ((v_angular_3_1 + (actInv5_3_1 << 7)) >> 7);
  long long act_inv_angular_3_0 = ((v_angular_3_0 + (actInv5_3_0 << 7)) >> 7);
  long long minus_m_w_3 = v_3;
  long long temp74 = -(minus_m_w_3);
  long long temp73 = -(temp74);
  long long alpha_cross1_linear_3 = ((temp73 * act_inv_linear_3_1) >> 31);
  long long temp75 = -(minus_m_w_3);
  long long alpha_cross2_linear_3 = ((temp75 * act_inv_linear_3_0) >> 31);
  long long alpha_cross_linear_3_2 = 0;
  long long alpha_cross_linear_3_1 = alpha_cross2_linear_3;
  long long alpha_cross_linear_3_0 = alpha_cross1_linear_3;
  long long temp77 = -(minus_m_w_3);
  long long temp76 = -(temp77);
  long long alpha_cross1_angular_3 = ((temp76 * act_inv_angular_3_1) >> 30);
  long long temp78 = -(minus_m_w_3);
  long long alpha_cross2_angular_3 = ((temp78 * act_inv_angular_3_0) >> 30);
  long long alpha_cross_angular_3_2 = 0;
  long long alpha_cross_angular_3_1 = alpha_cross2_angular_3;
  long long alpha_cross_angular_3_0 = alpha_cross1_angular_3;
  long long new_a_gf_3_5 = alpha_cross_angular_3_2;
  long long new_a_gf_3_4 = alpha_cross_angular_3_1;
  long long new_a_gf_3_3 = alpha_cross_angular_3_0;
  long long new_a_gf_3_2 = alpha_cross_linear_3_2;
  long long new_a_gf_3_1 = alpha_cross_linear_3_1;
  long long new_a_gf_3_0 = alpha_cross_linear_3_0;
  long long new_a_gf_up1_3 = (((a_3 << 5) + new_a_gf_3_5) >> 5);
  long long new_a_gf2_linear_3_2 = new_a_gf_3_2;
  long long new_a_gf2_linear_3_1 = new_a_gf_3_1;
  long long new_a_gf2_linear_3_0 = new_a_gf_3_0;
  long long new_a_gf2_angular_3_2 = new_a_gf_up1_3;
  long long new_a_gf2_angular_3_1 = new_a_gf_3_4;
  long long new_a_gf2_angular_3_0 = new_a_gf_3_3;
  long long r_36_actInv1_3_0 = (((limi_translation_3_1 * parent_a_gf_angular_3_2) >> 22) - ((limi_translation_3_2 * parent_a_gf_angular_3_1) >> 20));
  long long r_36_actInv1_3_1 = ((((limi_translation_3_2 * parent_a_gf_angular_3_0) >> 20) - (((limi_translation_3_0 * parent_a_gf_angular_3_2) >> 28) << 6)) >> 6);
  long long r_36_actInv1_3_2 = (((((limi_translation_3_0 * parent_a_gf_angular_3_1) >> 27) << 7) - ((limi_translation_3_1 * parent_a_gf_angular_3_0) >> 20)) >> 7);
  long long r_37_actInv2_3_2 = ((parent_a_gf_linear_3_2 - (r_36_actInv1_3_2 << 3)) >> 3);
  long long r_37_actInv2_3_1 = (((parent_a_gf_linear_3_1 << 3) - r_36_actInv1_3_1) >> 3);
  long long r_37_actInv2_3_0 = (((parent_a_gf_linear_3_0 << 9) - r_36_actInv1_3_0) >> 9);
  long long r_38_actInv3_3_2_2 = limi_rotation_3_2_2;
  long long r_38_actInv3_3_1_2 = limi_rotation_3_2_1;
  long long r_38_actInv3_3_0_2 = limi_rotation_3_2_0;
  long long r_38_actInv3_3_2_1 = limi_rotation_3_1_2;
  long long r_38_actInv3_3_1_1 = limi_rotation_3_1_1;
  long long r_38_actInv3_3_0_1 = limi_rotation_3_1_0;
  long long r_38_actInv3_3_2_0 = limi_rotation_3_0_2;
  long long r_38_actInv3_3_1_0 = limi_rotation_3_0_1;
  long long r_38_actInv3_3_0_0 = limi_rotation_3_0_0;
  long long r_39_actInv4_3_2 = ((((r_38_actInv3_3_2_0 * r_37_actInv2_3_0) >> 22) + ((((((r_38_actInv3_3_2_1 * r_37_actInv2_3_1) >> 30) << 9) + ((r_38_actInv3_3_2_2 * r_37_actInv2_3_2) >> 24)) >> 9) << 9)) >> 9);
  long long r_39_actInv4_3_1 = (((((r_38_actInv3_3_1_0 * r_37_actInv2_3_0) >> 30) << 2) + ((((r_38_actInv3_3_1_1 * r_37_actInv2_3_1) >> 22) + (((r_38_actInv3_3_1_2 * r_37_actInv2_3_2) >> 30) << 7)) >> 7)) >> 3);
  long long r_39_actInv4_3_0 = (((((r_38_actInv3_3_0_0 * r_37_actInv2_3_0) >> 30) << 2) + ((((r_38_actInv3_3_0_1 * r_37_actInv2_3_1) >> 22) + (((r_38_actInv3_3_0_2 * r_37_actInv2_3_2) >> 30) << 7)) >> 7)) >> 3);
  long long r_40_act_inv_linear_3_2 = ((new_a_gf2_linear_3_2 + (r_39_actInv4_3_2 << 9)) >> 9);
  long long r_40_act_inv_linear_3_1 = ((new_a_gf2_linear_3_1 + (r_39_actInv4_3_1 << 1)) >> 1);
  long long r_40_act_inv_linear_3_0 = ((new_a_gf2_linear_3_0 + (r_39_actInv4_3_0 << 1)) >> 1);
  long long r_41_actInv5_3_2 = ((((r_38_actInv3_3_2_0 * parent_a_gf_angular_3_0) >> 20) + ((((((r_38_actInv3_3_2_1 * parent_a_gf_angular_3_1) >> 30) << 11) + ((r_38_actInv3_3_2_2 * parent_a_gf_angular_3_2) >> 22)) >> 11) << 11)) >> 11);
  long long r_41_actInv5_3_1 = (((((r_38_actInv3_3_1_0 * parent_a_gf_angular_3_0) >> 30) << 2) + ((((r_38_actInv3_3_1_1 * parent_a_gf_angular_3_1) >> 20) + (((r_38_actInv3_3_1_2 * parent_a_gf_angular_3_2) >> 30) << 9)) >> 9)) >> 2);
  long long r_41_actInv5_3_0 = (((((r_38_actInv3_3_0_0 * parent_a_gf_angular_3_0) >> 30) << 2) + ((((r_38_actInv3_3_0_1 * parent_a_gf_angular_3_1) >> 20) + (((r_38_actInv3_3_0_2 * parent_a_gf_angular_3_2) >> 30) << 9)) >> 9)) >> 2);
  long long r_42_act_inv_angular_3_2 = ((new_a_gf2_angular_3_2 + (r_41_actInv5_3_2 << 6)) >> 6);
  long long r_42_act_inv_angular_3_1 = ((new_a_gf2_angular_3_1 + r_41_actInv5_3_1) >> 1);
  long long r_42_act_inv_angular_3_0 = ((new_a_gf2_angular_3_0 + r_41_actInv5_3_0) >> 1);
  long long new_a_gf_up3_3_5 = r_42_act_inv_angular_3_2;
  long long new_a_gf_up3_3_4 = r_42_act_inv_angular_3_1;
  long long new_a_gf_up3_3_3 = r_42_act_inv_angular_3_0;
  long long new_a_gf_up3_3_2 = r_40_act_inv_linear_3_2;
  long long new_a_gf_up3_3_1 = r_40_act_inv_linear_3_1;
  long long new_a_gf_up3_3_0 = r_40_act_inv_linear_3_0;
  long long h_linear_1_3_0 = (((((lever_3_1 * act_inv_angular_3_2) >> 28) << 1) - ((lever_3_2 * act_inv_angular_3_1) >> 26)) >> 2);
  long long h_linear_1_3_1 = ((((lever_3_2 * act_inv_angular_3_0) >> 26) - ((lever_3_0 * act_inv_angular_3_2) >> 27)) >> 1);
  long long h_linear_1_3_2 = ((((lever_3_0 * act_inv_angular_3_1) >> 27) - (((lever_3_1 * act_inv_angular_3_0) >> 28) << 1)) >> 1);
  long long h_linear_2_3_2 = ((act_inv_linear_3_2 - h_linear_1_3_2) >> 1);
  long long h_linear_2_3_1 = (((act_inv_linear_3_1 << 1) - h_linear_1_3_1) >> 2);
  long long h_linear_2_3_0 = ((act_inv_linear_3_0 - h_linear_1_3_0) >> 1);
  long long h_linear_3_2 = ((h_linear_2_3_2 * masses_3) >> 31);
  long long h_linear_3_1 = ((h_linear_2_3_1 * masses_3) >> 31);
  long long h_linear_3_0 = ((h_linear_2_3_0 * masses_3) >> 31);
  long long temp79 = ((act_inv_angular_3_0 * inertia_3_0_0) >> 26);
  long long temp80 = ((act_inv_angular_3_1 * inertia_3_0_1) >> 24);
  long long rhsMult1_temp_3 = (((temp79 << 2) + temp80) >> 2);
  long long temp81 = ((act_inv_angular_3_2 * inertia_3_0_2) >> 25);
  long long rhsMult1_3 = (((rhsMult1_temp_3 << 2) + temp81) >> 2);
  long long temp82 = ((act_inv_angular_3_0 * inertia_3_0_1) >> 24);
  long long temp83 = ((act_inv_angular_3_1 * inertia_3_1_1) >> 25);
  long long rhsMult2_temp_3 = ((temp82 + (temp83 << 1)) >> 2);
  long long temp84 = ((act_inv_angular_3_2 * inertia_3_1_2) >> 25);
  long long rhsMult2_3 = (((rhsMult2_temp_3 << 2) + temp84) >> 2);
  long long temp85 = ((act_inv_angular_3_0 * inertia_3_0_2) >> 24);
  long long temp86 = ((act_inv_angular_3_1 * inertia_3_1_2) >> 24);
  long long rhsMult3_temp_3 = (temp85 + temp86);
  long long temp87 = ((act_inv_angular_3_2 * inertia_3_2_2) >> 26);
  long long rhsMult3_3 = ((rhsMult3_temp_3 + (temp87 << 1)) >> 2);
  long long rhsMult_3_2 = rhsMult3_3;
  long long rhsMult_3_1 = rhsMult2_3;
  long long rhsMult_3_0 = rhsMult1_3;
  long long h_angular_first_3_2 = rhsMult_3_2;
  long long h_angular_first_3_1 = rhsMult_3_1;
  long long h_angular_first_3_0 = rhsMult_3_0;
  long long h_angular_1_3_0 = (((((lever_3_1 * h_linear_3_2) >> 28) << 2) - ((lever_3_2 * h_linear_3_1) >> 26)) >> 2);
  long long h_angular_1_3_1 = ((((lever_3_2 * h_linear_3_0) >> 26) - (((lever_3_0 * h_linear_3_2) >> 27) << 1)) >> 1);
  long long h_angular_1_3_2 = ((((lever_3_0 * h_linear_3_1) >> 27) - (((lever_3_1 * h_linear_3_0) >> 28) << 1)) >> 1);
  long long h_angular_3_2 = ((h_angular_first_3_2 + (h_angular_1_3_2 << 2)) >> 2);
  long long h_angular_3_1 = ((h_angular_first_3_1 + (h_angular_1_3_1 << 1)) >> 2);
  long long h_angular_3_0 = ((h_angular_first_3_0 + (h_angular_1_3_0 << 2)) >> 2);
  long long f_linear_1_3_0 = (((((lever_3_1 * r_42_act_inv_angular_3_2) >> 28) << 1) - ((lever_3_2 * r_42_act_inv_angular_3_1) >> 26)) >> 1);
  long long f_linear_1_3_1 = ((((lever_3_2 * r_42_act_inv_angular_3_0) >> 26) - ((lever_3_0 * r_42_act_inv_angular_3_2) >> 27)) >> 1);
  long long f_linear_1_3_2 = ((((lever_3_0 * r_42_act_inv_angular_3_1) >> 27) - (((lever_3_1 * r_42_act_inv_angular_3_0) >> 28) << 1)) >> 2);
  long long f_linear_2_3_2 = ((r_40_act_inv_linear_3_2 - (f_linear_1_3_2 << 1)) >> 1);
  long long f_linear_2_3_1 = (((r_40_act_inv_linear_3_1 << 2) - f_linear_1_3_1) >> 2);
  long long f_linear_2_3_0 = (((r_40_act_inv_linear_3_0 << 2) - f_linear_1_3_0) >> 3);
  long long f_linear_3_3_2 = ((f_linear_2_3_2 * masses_3) >> 31);
  long long f_linear_3_3_1 = ((f_linear_2_3_1 * masses_3) >> 31);
  long long f_linear_3_3_0 = ((f_linear_2_3_0 * masses_3) >> 30);
  long long temp88 = ((r_42_act_inv_angular_3_0 * inertia_3_0_0) >> 26);
  long long temp89 = ((r_42_act_inv_angular_3_1 * inertia_3_0_1) >> 24);
  long long r_43_rhsMult1_temp_3 = (((temp88 << 2) + temp89) >> 2);
  long long temp90 = ((r_42_act_inv_angular_3_2 * inertia_3_0_2) >> 21);
  long long r_44_rhsMult1_3 = (((r_43_rhsMult1_temp_3 << 6) + temp90) >> 6);
  long long temp91 = ((r_42_act_inv_angular_3_0 * inertia_3_0_1) >> 24);
  long long temp92 = ((r_42_act_inv_angular_3_1 * inertia_3_1_1) >> 26);
  long long r_45_rhsMult2_temp_3 = ((temp91 + (temp92 << 2)) >> 2);
  long long temp93 = ((r_42_act_inv_angular_3_2 * inertia_3_1_2) >> 24);
  long long r_46_rhsMult2_3 = (((r_45_rhsMult2_temp_3 << 3) + temp93) >> 3);
  long long temp94 = ((r_42_act_inv_angular_3_0 * inertia_3_0_2) >> 22);
  long long temp95 = ((r_42_act_inv_angular_3_1 * inertia_3_1_2) >> 24);
  long long r_47_rhsMult3_temp_3 = ((temp94 + (temp95 << 2)) >> 3);
  long long temp96 = ((r_42_act_inv_angular_3_2 * inertia_3_2_2) >> 26);
  long long r_48_rhsMult3_3 = ((r_47_rhsMult3_temp_3 + temp96) >> 1);
  long long r_49_rhsMult_3_2 = r_48_rhsMult3_3;
  long long r_49_rhsMult_3_1 = r_46_rhsMult2_3;
  long long r_49_rhsMult_3_0 = r_44_rhsMult1_3;
  long long f_angular_first_3_2 = r_49_rhsMult_3_2;
  long long f_angular_first_3_1 = r_49_rhsMult_3_1;
  long long f_angular_first_3_0 = r_49_rhsMult_3_0;
  long long f_angular_1_3_0 = (((((lever_3_1 * f_linear_3_3_2) >> 28) << 2) - ((lever_3_2 * f_linear_3_3_1) >> 26)) >> 2);
  long long f_angular_1_3_1 = ((((lever_3_2 * f_linear_3_3_0) >> 26) - (((lever_3_0 * f_linear_3_3_2) >> 27) << 1)) >> 2);
  long long f_angular_1_3_2 = ((((lever_3_0 * f_linear_3_3_1) >> 27) - (((lever_3_1 * f_linear_3_3_0) >> 28) << 1)) >> 2);
  long long f_angular_2_3_2 = ((f_angular_first_3_2 + (f_angular_1_3_2 << 3)) >> 3);
  long long f_angular_2_3_1 = ((f_angular_first_3_1 + (f_angular_1_3_1 << 2)) >> 2);
  long long f_angular_2_3_0 = ((f_angular_first_3_0 + (f_angular_1_3_0 << 2)) >> 3);
  long long f_linear_4_temp_3_0 = (((((act_inv_angular_3_1 * h_linear_3_2) >> 31) << 1) - ((act_inv_angular_3_2 * h_linear_3_1) >> 31)) >> 1);
  long long f_linear_4_temp_3_1 = ((((act_inv_angular_3_2 * h_linear_3_0) >> 31) - (((act_inv_angular_3_0 * h_linear_3_2) >> 31) << 1)) >> 1);
  long long f_linear_4_temp_3_2 = ((((act_inv_angular_3_0 * h_linear_3_1) >> 30) - ((act_inv_angular_3_1 * h_linear_3_0) >> 30)) >> 1);
  long long f_linear_4_3_2 = ((f_linear_3_3_2 + (f_linear_4_temp_3_2 << 2)) >> 3);
  long long f_linear_4_3_1 = ((f_linear_3_3_1 + (f_linear_4_temp_3_1 << 2)) >> 3);
  long long f_linear_4_3_0 = ((f_linear_3_3_0 + (f_linear_4_temp_3_0 << 2)) >> 3);
  long long f_angular_3_temp_3_0 = ((((act_inv_angular_3_1 * h_angular_first_3_2) >> 30) - ((act_inv_angular_3_2 * h_angular_first_3_1) >> 31)) >> 1);
  long long f_angular_3_temp_3_1 = ((((act_inv_angular_3_2 * h_angular_first_3_0) >> 31) - ((act_inv_angular_3_0 * h_angular_first_3_2) >> 30)) >> 1);
  long long f_angular_3_temp_3_2 = ((((act_inv_angular_3_0 * h_angular_first_3_1) >> 30) - ((act_inv_angular_3_1 * h_angular_first_3_0) >> 30)) >> 1);
  long long f_angular_3_3_2 = (((f_angular_2_3_2 << 1) + f_angular_3_temp_3_2) >> 2);
  long long f_angular_3_3_1 = ((f_angular_2_3_1 + f_angular_3_temp_3_1) >> 1);
  long long f_angular_3_3_0 = (((f_angular_2_3_0 << 1) + f_angular_3_temp_3_0) >> 1);
  long long f_angular_4_temp_3_0 = ((((act_inv_linear_3_1 * h_linear_3_2) >> 31) - ((act_inv_linear_3_2 * h_linear_3_1) >> 31)) >> 1);
  long long f_angular_4_temp_3_1 = ((((act_inv_linear_3_2 * h_linear_3_0) >> 31) - ((act_inv_linear_3_0 * h_linear_3_2) >> 31)) >> 1);
  long long f_angular_4_temp_3_2 = ((((act_inv_linear_3_0 * h_linear_3_1) >> 31) - ((act_inv_linear_3_1 * h_linear_3_0) >> 31)) >> 1);
  long long f_angular_4_3_2 = ((f_angular_3_3_2 + (f_angular_4_temp_3_2 << 1)) >> 1);
  long long f_angular_4_3_1 = ((f_angular_3_3_1 + (f_angular_4_temp_3_1 << 2)) >> 2);
  long long f_angular_4_3_0 = ((f_angular_3_3_0 + (f_angular_4_temp_3_0 << 2)) >> 2);
  long long h_rnea_firstpass3_5 = h_angular_3_2;
  long long h_rnea_firstpass3_4 = h_angular_3_1;
  long long h_rnea_firstpass3_3 = h_angular_3_0;
  long long h_rnea_firstpass3_2 = h_linear_3_2;
  long long h_rnea_firstpass3_1 = h_linear_3_1;
  long long h_rnea_firstpass3_0 = h_linear_3_0;
  long long f_rnea_firstpass3_5 = f_angular_4_3_2;
  long long f_rnea_firstpass3_4 = f_angular_4_3_1;
  long long f_rnea_firstpass3_3 = f_angular_4_3_0;
  long long f_rnea_firstpass3_2 = f_linear_4_3_2;
  long long f_rnea_firstpass3_1 = f_linear_4_3_1;
  long long f_rnea_firstpass3_0 = f_linear_4_3_0;
  long long new_v_3_5 = act_inv_angular_3_2;
  long long new_v_3_4 = act_inv_angular_3_1;
  long long new_v_3_3 = act_inv_angular_3_0;
  long long new_v_3_2 = act_inv_linear_3_2;
  long long new_v_3_1 = act_inv_linear_3_1;
  long long new_v_3_0 = act_inv_linear_3_0;
  long long rotation_matrix_4_2_2 = 1073741824;
  long long rotation_matrix_4_2_1 = 0;
  long long rotation_matrix_4_2_0 = 0;
  long long rotation_matrix_4_1_2 = 0;
  long long rotation_matrix_4_1_1 = qcos_4;
  long long rotation_matrix_4_1_0 = qsin_4;
  long long rotation_matrix_4_0_2 = 0;
  long long rotation_matrix_4_0_1 = -(qsin_4);
  long long rotation_matrix_4_0_0 = qcos_4;
  long long limi_rotation_4_2_2 = 0;
  long long limi_rotation_4_2_1 = -(rotation_matrix_4_1_1);
  long long limi_rotation_4_2_0 = -(rotation_matrix_4_1_0);
  long long limi_rotation_4_1_2 = 1073741824;
  long long limi_rotation_4_1_1 = 0;
  long long limi_rotation_4_1_0 = 0;
  long long limi_rotation_4_0_2 = 0;
  long long limi_rotation_4_0_1 = rotation_matrix_4_0_1;
  long long limi_rotation_4_0_0 = rotation_matrix_4_0_0;
  long long v_linear_4_2 = data_v_4_2;
  long long v_linear_4_1 = data_v_4_1;
  long long v_linear_4_0 = data_v_4_0;
  long long v_angular_4_2 = v_4;
  long long v_angular_4_1 = data_v_4_4;
  long long v_angular_4_0 = data_v_4_3;
  long long parent_v_linear_4_2 = new_v_3_2;
  long long parent_v_linear_4_1 = new_v_3_1;
  long long parent_v_linear_4_0 = new_v_3_0;
  long long parent_v_angular_4_2 = new_v_3_5;
  long long parent_v_angular_4_1 = new_v_3_4;
  long long parent_v_angular_4_0 = new_v_3_3;
  long long parent_a_gf_linear_4_2 = new_a_gf_up3_3_2;
  long long parent_a_gf_linear_4_1 = new_a_gf_up3_3_1;
  long long parent_a_gf_linear_4_0 = new_a_gf_up3_3_0;
  long long parent_a_gf_angular_4_2 = new_a_gf_up3_3_5;
  long long parent_a_gf_angular_4_1 = new_a_gf_up3_3_4;
  long long parent_a_gf_angular_4_0 = new_a_gf_up3_3_3;
  long long actInv1_4_0 = (((((limi_translation_4_1 * parent_v_angular_4_2) >> 30) << 5) - ((limi_translation_4_2 * parent_v_angular_4_1) >> 24)) >> 5);
  long long actInv1_4_1 = ((((limi_translation_4_2 * parent_v_angular_4_0) >> 24) - (((limi_translation_4_0 * parent_v_angular_4_2) >> 28) << 3)) >> 3);
  long long actInv1_4_2 = ((((limi_translation_4_0 * parent_v_angular_4_1) >> 27) - (((limi_translation_4_1 * parent_v_angular_4_0) >> 29) << 2)) >> 3);
  long long actInv2_4_2 = ((parent_v_linear_4_2 - (actInv1_4_2 << 2)) >> 2);
  long long actInv2_4_1 = (((parent_v_linear_4_1 << 1) - actInv1_4_1) >> 2);
  long long actInv2_4_0 = ((parent_v_linear_4_0 - (actInv1_4_0 << 1)) >> 2);
  long long actInv3_4_2_2 = limi_rotation_4_2_2;
  long long actInv3_4_1_2 = limi_rotation_4_2_1;
  long long actInv3_4_0_2 = limi_rotation_4_2_0;
  long long actInv3_4_2_1 = limi_rotation_4_1_2;
  long long actInv3_4_1_1 = limi_rotation_4_1_1;
  long long actInv3_4_0_1 = limi_rotation_4_1_0;
  long long actInv3_4_2_0 = limi_rotation_4_0_2;
  long long actInv3_4_1_0 = limi_rotation_4_0_1;
  long long actInv3_4_0_0 = limi_rotation_4_0_0;
  long long actInv4_4_2 = ((((actInv3_4_2_0 * actInv2_4_0) >> 25) + ((((((actInv3_4_2_1 * actInv2_4_1) >> 30) << 5) + ((actInv3_4_2_2 * actInv2_4_2) >> 25)) >> 5) << 5)) >> 5);
  long long actInv4_4_1 = ((((actInv3_4_1_0 * actInv2_4_0) >> 30) + ((((actInv3_4_1_1 * actInv2_4_1) >> 26) + (((actInv3_4_1_2 * actInv2_4_2) >> 30) << 6)) >> 6)) >> 1);
  long long actInv4_4_0 = ((((actInv3_4_0_0 * actInv2_4_0) >> 30) + ((((actInv3_4_0_1 * actInv2_4_1) >> 26) + (((actInv3_4_0_2 * actInv2_4_2) >> 30) << 6)) >> 6)) >> 1);
  long long act_inv_linear_4_2 = ((v_linear_4_2 + (actInv4_4_2 << 5)) >> 5);
  long long act_inv_linear_4_1 = ((v_linear_4_1 + (actInv4_4_1 << 7)) >> 7);
  long long act_inv_linear_4_0 = ((v_linear_4_0 + (actInv4_4_0 << 7)) >> 7);
  long long actInv5_4_2 = ((((actInv3_4_2_0 * parent_v_angular_4_0) >> 24) + ((((((actInv3_4_2_1 * parent_v_angular_4_1) >> 30) << 7) + ((actInv3_4_2_2 * parent_v_angular_4_2) >> 25)) >> 7) << 7)) >> 7);
  long long actInv5_4_1 = (((((actInv3_4_1_0 * parent_v_angular_4_0) >> 30) << 1) + ((((actInv3_4_1_1 * parent_v_angular_4_1) >> 24) + (((actInv3_4_1_2 * parent_v_angular_4_2) >> 30) << 6)) >> 6)) >> 2);
  long long actInv5_4_0 = (((((actInv3_4_0_0 * parent_v_angular_4_0) >> 30) << 1) + ((((actInv3_4_0_1 * parent_v_angular_4_1) >> 24) + (((actInv3_4_0_2 * parent_v_angular_4_2) >> 30) << 6)) >> 6)) >> 2);
  long long act_inv_angular_4_2 = ((v_angular_4_2 + (actInv5_4_2 << 2)) >> 2);
  long long act_inv_angular_4_1 = ((v_angular_4_1 + (actInv5_4_1 << 8)) >> 8);
  long long act_inv_angular_4_0 = ((v_angular_4_0 + (actInv5_4_0 << 8)) >> 8);
  long long minus_m_w_4 = v_4;
  long long temp98 = -(minus_m_w_4);
  long long temp97 = -(temp98);
  long long alpha_cross1_linear_4 = ((temp97 * act_inv_linear_4_1) >> 30);
  long long temp99 = -(minus_m_w_4);
  long long alpha_cross2_linear_4 = ((temp99 * act_inv_linear_4_0) >> 30);
  long long alpha_cross_linear_4_2 = 0;
  long long alpha_cross_linear_4_1 = alpha_cross2_linear_4;
  long long alpha_cross_linear_4_0 = alpha_cross1_linear_4;
  long long temp101 = -(minus_m_w_4);
  long long temp100 = -(temp101);
  long long alpha_cross1_angular_4 = ((temp100 * act_inv_angular_4_1) >> 30);
  long long temp102 = -(minus_m_w_4);
  long long alpha_cross2_angular_4 = ((temp102 * act_inv_angular_4_0) >> 30);
  long long alpha_cross_angular_4_2 = 0;
  long long alpha_cross_angular_4_1 = alpha_cross2_angular_4;
  long long alpha_cross_angular_4_0 = alpha_cross1_angular_4;
  long long new_a_gf_4_5 = alpha_cross_angular_4_2;
  long long new_a_gf_4_4 = alpha_cross_angular_4_1;
  long long new_a_gf_4_3 = alpha_cross_angular_4_0;
  long long new_a_gf_4_2 = alpha_cross_linear_4_2;
  long long new_a_gf_4_1 = alpha_cross_linear_4_1;
  long long new_a_gf_4_0 = alpha_cross_linear_4_0;
  long long new_a_gf_up1_4 = (((a_4 << 5) + new_a_gf_4_5) >> 5);
  long long new_a_gf2_linear_4_2 = new_a_gf_4_2;
  long long new_a_gf2_linear_4_1 = new_a_gf_4_1;
  long long new_a_gf2_linear_4_0 = new_a_gf_4_0;
  long long new_a_gf2_angular_4_2 = new_a_gf_up1_4;
  long long new_a_gf2_angular_4_1 = new_a_gf_4_4;
  long long new_a_gf2_angular_4_0 = new_a_gf_4_3;
  long long r_50_actInv1_4_0 = (((((limi_translation_4_1 * parent_a_gf_angular_4_2) >> 29) << 9) - ((limi_translation_4_2 * parent_a_gf_angular_4_1) >> 19)) >> 9);
  long long r_50_actInv1_4_1 = ((((limi_translation_4_2 * parent_a_gf_angular_4_0) >> 19) - (((limi_translation_4_0 * parent_a_gf_angular_4_2) >> 27) << 7)) >> 7);
  long long r_50_actInv1_4_2 = ((((limi_translation_4_0 * parent_a_gf_angular_4_1) >> 28) - (((limi_translation_4_1 * parent_a_gf_angular_4_0) >> 30) << 2)) >> 2);
  long long r_51_actInv2_4_2 = ((parent_a_gf_linear_4_2 - (r_50_actInv1_4_2 << 2)) >> 2);
  long long r_51_actInv2_4_1 = (((parent_a_gf_linear_4_1 << 3) - r_50_actInv1_4_1) >> 3);
  long long r_51_actInv2_4_0 = (((parent_a_gf_linear_4_0 << 1) - r_50_actInv1_4_0) >> 2);
  long long r_52_actInv3_4_2_2 = limi_rotation_4_2_2;
  long long r_52_actInv3_4_1_2 = limi_rotation_4_2_1;
  long long r_52_actInv3_4_0_2 = limi_rotation_4_2_0;
  long long r_52_actInv3_4_2_1 = limi_rotation_4_1_2;
  long long r_52_actInv3_4_1_1 = limi_rotation_4_1_1;
  long long r_52_actInv3_4_0_1 = limi_rotation_4_1_0;
  long long r_52_actInv3_4_2_0 = limi_rotation_4_0_2;
  long long r_52_actInv3_4_1_0 = limi_rotation_4_0_1;
  long long r_52_actInv3_4_0_0 = limi_rotation_4_0_0;
  long long r_53_actInv4_4_2 = ((((r_52_actInv3_4_2_0 * r_51_actInv2_4_0) >> 20) + ((((((r_52_actInv3_4_2_1 * r_51_actInv2_4_1) >> 30) << 10) + ((r_52_actInv3_4_2_2 * r_51_actInv2_4_2) >> 20)) >> 10) << 10)) >> 10);
  long long r_53_actInv4_4_1 = ((((r_52_actInv3_4_1_0 * r_51_actInv2_4_0) >> 30) + ((((r_52_actInv3_4_1_1 * r_51_actInv2_4_1) >> 21) + (((r_52_actInv3_4_1_2 * r_51_actInv2_4_2) >> 30) << 11)) >> 11)) >> 1);
  long long r_53_actInv4_4_0 = ((((r_52_actInv3_4_0_0 * r_51_actInv2_4_0) >> 30) + ((((r_52_actInv3_4_0_1 * r_51_actInv2_4_1) >> 21) + (((r_52_actInv3_4_0_2 * r_51_actInv2_4_2) >> 30) << 11)) >> 11)) >> 1);
  long long r_54_act_inv_linear_4_2 = ((new_a_gf2_linear_4_2 + (r_53_actInv4_4_2 << 10)) >> 10);
  long long r_54_act_inv_linear_4_1 = ((new_a_gf2_linear_4_1 + (r_53_actInv4_4_1 << 1)) >> 2);
  long long r_54_act_inv_linear_4_0 = ((new_a_gf2_linear_4_0 + (r_53_actInv4_4_0 << 1)) >> 2);
  long long r_55_actInv5_4_2 = ((((r_52_actInv3_4_2_0 * parent_a_gf_angular_4_0) >> 19) + ((((((r_52_actInv3_4_2_1 * parent_a_gf_angular_4_1) >> 30) << 12) + ((r_52_actInv3_4_2_2 * parent_a_gf_angular_4_2) >> 20)) >> 12) << 12)) >> 12);
  long long r_55_actInv5_4_1 = (((((r_52_actInv3_4_1_0 * parent_a_gf_angular_4_0) >> 30) << 1) + ((((r_52_actInv3_4_1_1 * parent_a_gf_angular_4_1) >> 19) + (((r_52_actInv3_4_1_2 * parent_a_gf_angular_4_2) >> 30) << 11)) >> 11)) >> 2);
  long long r_55_actInv5_4_0 = (((((r_52_actInv3_4_0_0 * parent_a_gf_angular_4_0) >> 30) << 1) + ((((r_52_actInv3_4_0_1 * parent_a_gf_angular_4_1) >> 19) + (((r_52_actInv3_4_0_2 * parent_a_gf_angular_4_2) >> 30) << 11)) >> 11)) >> 2);
  long long r_56_act_inv_angular_4_2 = ((new_a_gf2_angular_4_2 + (r_55_actInv5_4_2 << 7)) >> 7);
  long long r_56_act_inv_angular_4_1 = ((new_a_gf2_angular_4_1 + (r_55_actInv5_4_1 << 1)) >> 1);
  long long r_56_act_inv_angular_4_0 = ((new_a_gf2_angular_4_0 + (r_55_actInv5_4_0 << 1)) >> 1);
  long long new_a_gf_up3_4_5 = r_56_act_inv_angular_4_2;
  long long new_a_gf_up3_4_4 = r_56_act_inv_angular_4_1;
  long long new_a_gf_up3_4_3 = r_56_act_inv_angular_4_0;
  long long new_a_gf_up3_4_2 = r_54_act_inv_linear_4_2;
  long long new_a_gf_up3_4_1 = r_54_act_inv_linear_4_1;
  long long new_a_gf_up3_4_0 = r_54_act_inv_linear_4_0;
  long long h_linear_1_4_0 = ((((lever_4_1 * act_inv_angular_4_2) >> 27) - ((lever_4_2 * act_inv_angular_4_1) >> 26)) >> 1);
  long long h_linear_1_4_1 = (((((lever_4_2 * act_inv_angular_4_0) >> 26) << 2) - ((lever_4_0 * act_inv_angular_4_2) >> 25)) >> 2);
  long long h_linear_1_4_2 = ((((lever_4_0 * act_inv_angular_4_1) >> 24) - (((lever_4_1 * act_inv_angular_4_0) >> 26) << 2)) >> 2);
  long long h_linear_2_4_2 = (((act_inv_linear_4_2 << 2) - h_linear_1_4_2) >> 2);
  long long h_linear_2_4_1 = (((act_inv_linear_4_1 << 4) - h_linear_1_4_1) >> 4);
  long long h_linear_2_4_0 = (((act_inv_linear_4_0 << 3) - h_linear_1_4_0) >> 3);
  long long h_linear_4_2 = ((h_linear_2_4_2 * masses_4) >> 31);
  long long h_linear_4_1 = ((h_linear_2_4_1 * masses_4) >> 30);
  long long h_linear_4_0 = ((h_linear_2_4_0 * masses_4) >> 30);
  long long temp103 = ((act_inv_angular_4_0 * inertia_4_0_0) >> 26);
  long long temp104 = ((act_inv_angular_4_1 * inertia_4_0_1) >> 23);
  long long rhsMult1_temp_4 = (((temp103 << 3) + temp104) >> 3);
  long long temp105 = ((act_inv_angular_4_2 * inertia_4_0_2) >> 24);
  long long rhsMult1_4 = (((rhsMult1_temp_4 << 3) + temp105) >> 3);
  long long temp106 = ((act_inv_angular_4_0 * inertia_4_0_1) >> 23);
  long long temp107 = ((act_inv_angular_4_1 * inertia_4_1_1) >> 26);
  long long rhsMult2_temp_4 = ((temp106 + (temp107 << 3)) >> 3);
  long long temp108 = ((act_inv_angular_4_2 * inertia_4_1_2) >> 24);
  long long rhsMult2_4 = (((rhsMult2_temp_4 << 3) + temp108) >> 3);
  long long temp109 = ((act_inv_angular_4_0 * inertia_4_0_2) >> 23);
  long long temp110 = ((act_inv_angular_4_1 * inertia_4_1_2) >> 23);
  long long rhsMult3_temp_4 = (temp109 + temp110);
  long long temp111 = ((act_inv_angular_4_2 * inertia_4_2_2) >> 24);
  long long rhsMult3_4 = ((rhsMult3_temp_4 + temp111) >> 1);
  long long rhsMult_4_2 = rhsMult3_4;
  long long rhsMult_4_1 = rhsMult2_4;
  long long rhsMult_4_0 = rhsMult1_4;
  long long h_angular_first_4_2 = rhsMult_4_2;
  long long h_angular_first_4_1 = rhsMult_4_1;
  long long h_angular_first_4_0 = rhsMult_4_0;
  long long h_angular_1_4_0 = ((((lever_4_1 * h_linear_4_2) >> 26) - (((lever_4_2 * h_linear_4_1) >> 27) << 2)) >> 2);
  long long h_angular_1_4_1 = (((((lever_4_2 * h_linear_4_0) >> 27) << 3) - ((lever_4_0 * h_linear_4_2) >> 25)) >> 3);
  long long h_angular_1_4_2 = ((((lever_4_0 * h_linear_4_1) >> 25) - (((lever_4_1 * h_linear_4_0) >> 27) << 2)) >> 2);
  long long h_angular_4_2 = ((h_angular_first_4_2 + (h_angular_1_4_2 << 2)) >> 3);
  long long h_angular_4_1 = ((h_angular_first_4_1 + h_angular_1_4_1) >> 1);
  long long h_angular_4_0 = ((h_angular_first_4_0 + h_angular_1_4_0) >> 1);
  long long f_linear_1_4_0 = ((((lever_4_1 * r_56_act_inv_angular_4_2) >> 27) - (((lever_4_2 * r_56_act_inv_angular_4_1) >> 27) << 1)) >> 1);
  long long f_linear_1_4_1 = (((((lever_4_2 * r_56_act_inv_angular_4_0) >> 27) << 3) - ((lever_4_0 * r_56_act_inv_angular_4_2) >> 25)) >> 3);
  long long f_linear_1_4_2 = ((((lever_4_0 * r_56_act_inv_angular_4_1) >> 25) - (((lever_4_1 * r_56_act_inv_angular_4_0) >> 27) << 2)) >> 2);
  long long f_linear_2_4_2 = (((r_54_act_inv_linear_4_2 << 1) - f_linear_1_4_2) >> 2);
  long long f_linear_2_4_1 = (((r_54_act_inv_linear_4_1 << 4) - f_linear_1_4_1) >> 4);
  long long f_linear_2_4_0 = (((r_54_act_inv_linear_4_0 << 4) - f_linear_1_4_0) >> 4);
  long long f_linear_3_4_2 = ((f_linear_2_4_2 * masses_4) >> 30);
  long long f_linear_3_4_1 = ((f_linear_2_4_1 * masses_4) >> 30);
  long long f_linear_3_4_0 = ((f_linear_2_4_0 * masses_4) >> 30);
  long long temp112 = ((r_56_act_inv_angular_4_0 * inertia_4_0_0) >> 27);
  long long temp113 = ((r_56_act_inv_angular_4_1 * inertia_4_0_1) >> 22);
  long long r_57_rhsMult1_temp_4 = (((temp112 << 5) + temp113) >> 5);
  long long temp114 = ((r_56_act_inv_angular_4_2 * inertia_4_0_2) >> 23);
  long long r_58_rhsMult1_4 = (((r_57_rhsMult1_temp_4 << 5) + temp114) >> 5);
  long long temp115 = ((r_56_act_inv_angular_4_0 * inertia_4_0_1) >> 22);
  long long temp116 = ((r_56_act_inv_angular_4_1 * inertia_4_1_1) >> 26);
  long long r_59_rhsMult2_temp_4 = ((temp115 + (temp116 << 4)) >> 4);
  long long temp117 = ((r_56_act_inv_angular_4_2 * inertia_4_1_2) >> 19);
  long long r_60_rhsMult2_4 = (((r_59_rhsMult2_temp_4 << 8) + temp117) >> 8);
  long long temp118 = ((r_56_act_inv_angular_4_0 * inertia_4_0_2) >> 23);
  long long temp119 = ((r_56_act_inv_angular_4_1 * inertia_4_1_2) >> 19);
  long long r_61_rhsMult3_temp_4 = (((temp118 << 4) + temp119) >> 4);
  long long temp120 = ((r_56_act_inv_angular_4_2 * inertia_4_2_2) >> 24);
  long long r_62_rhsMult3_4 = ((r_61_rhsMult3_temp_4 + temp120) >> 1);
  long long r_63_rhsMult_4_2 = r_62_rhsMult3_4;
  long long r_63_rhsMult_4_1 = r_60_rhsMult2_4;
  long long r_63_rhsMult_4_0 = r_58_rhsMult1_4;
  long long f_angular_first_4_2 = r_63_rhsMult_4_2;
  long long f_angular_first_4_1 = r_63_rhsMult_4_1;
  long long f_angular_first_4_0 = r_63_rhsMult_4_0;
  long long f_angular_1_4_0 = ((((lever_4_1 * f_linear_3_4_2) >> 27) - (((lever_4_2 * f_linear_3_4_1) >> 27) << 2)) >> 2);
  long long f_angular_1_4_1 = (((((lever_4_2 * f_linear_3_4_0) >> 27) << 4) - ((lever_4_0 * f_linear_3_4_2) >> 25)) >> 4);
  long long f_angular_1_4_2 = ((((lever_4_0 * f_linear_3_4_1) >> 25) - (((lever_4_1 * f_linear_3_4_0) >> 27) << 2)) >> 2);
  long long f_angular_2_4_2 = ((f_angular_first_4_2 + (f_angular_1_4_2 << 3)) >> 3);
  long long f_angular_2_4_1 = ((f_angular_first_4_1 + (f_angular_1_4_1 << 1)) >> 2);
  long long f_angular_2_4_0 = ((f_angular_first_4_0 + f_angular_1_4_0) >> 1);
  long long f_linear_4_temp_4_0 = ((((act_inv_angular_4_1 * h_linear_4_2) >> 30) - (((act_inv_angular_4_2 * h_linear_4_1) >> 31) << 1)) >> 2);
  long long f_linear_4_temp_4_1 = (((((act_inv_angular_4_2 * h_linear_4_0) >> 31) << 1) - ((act_inv_angular_4_0 * h_linear_4_2) >> 30)) >> 2);
  long long f_linear_4_temp_4_2 = ((((act_inv_angular_4_0 * h_linear_4_1) >> 31) - ((act_inv_angular_4_1 * h_linear_4_0) >> 31)) >> 1);
  long long f_linear_4_4_2 = ((f_linear_3_4_2 + (f_linear_4_temp_4_2 << 5)) >> 5);
  long long f_linear_4_4_1 = ((f_linear_3_4_1 + (f_linear_4_temp_4_1 << 2)) >> 2);
  long long f_linear_4_4_0 = ((f_linear_3_4_0 + (f_linear_4_temp_4_0 << 2)) >> 2);
  long long f_angular_3_temp_4_0 = ((((act_inv_angular_4_1 * h_angular_first_4_2) >> 30) - (((act_inv_angular_4_2 * h_angular_first_4_1) >> 30) << 1)) >> 2);
  long long f_angular_3_temp_4_1 = (((((act_inv_angular_4_2 * h_angular_first_4_0) >> 31) << 2) - ((act_inv_angular_4_0 * h_angular_first_4_2) >> 30)) >> 2);
  long long f_angular_3_temp_4_2 = ((((act_inv_angular_4_0 * h_angular_first_4_1) >> 30) - ((act_inv_angular_4_1 * h_angular_first_4_0) >> 30)) >> 1);
  long long f_angular_3_4_2 = ((f_angular_2_4_2 + (f_angular_3_temp_4_2 << 2)) >> 2);
  long long f_angular_3_4_1 = ((f_angular_2_4_1 + f_angular_3_temp_4_1) >> 1);
  long long f_angular_3_4_0 = ((f_angular_2_4_0 + f_angular_3_temp_4_0) >> 1);
  long long f_angular_4_temp_4_0 = ((((act_inv_linear_4_1 * h_linear_4_2) >> 30) - ((act_inv_linear_4_2 * h_linear_4_1) >> 31)) >> 1);
  long long f_angular_4_temp_4_1 = ((((act_inv_linear_4_2 * h_linear_4_0) >> 31) - ((act_inv_linear_4_0 * h_linear_4_2) >> 30)) >> 1);
  long long f_angular_4_temp_4_2 = ((((act_inv_linear_4_0 * h_linear_4_1) >> 31) - ((act_inv_linear_4_1 * h_linear_4_0) >> 31)) >> 1);
  long long f_angular_4_4_2 = ((f_angular_3_4_2 + (f_angular_4_temp_4_2 << 4)) >> 4);
  long long f_angular_4_4_1 = ((f_angular_3_4_1 + (f_angular_4_temp_4_1 << 2)) >> 2);
  long long f_angular_4_4_0 = ((f_angular_3_4_0 + (f_angular_4_temp_4_0 << 2)) >> 2);
  long long h_rnea_firstpass4_5 = h_angular_4_2;
  long long h_rnea_firstpass4_4 = h_angular_4_1;
  long long h_rnea_firstpass4_3 = h_angular_4_0;
  long long h_rnea_firstpass4_2 = h_linear_4_2;
  long long h_rnea_firstpass4_1 = h_linear_4_1;
  long long h_rnea_firstpass4_0 = h_linear_4_0;
  long long f_rnea_firstpass4_5 = f_angular_4_4_2;
  long long f_rnea_firstpass4_4 = f_angular_4_4_1;
  long long f_rnea_firstpass4_3 = f_angular_4_4_0;
  long long f_rnea_firstpass4_2 = f_linear_4_4_2;
  long long f_rnea_firstpass4_1 = f_linear_4_4_1;
  long long f_rnea_firstpass4_0 = f_linear_4_4_0;
  long long new_v_4_5 = act_inv_angular_4_2;
  long long new_v_4_4 = act_inv_angular_4_1;
  long long new_v_4_3 = act_inv_angular_4_0;
  long long new_v_4_2 = act_inv_linear_4_2;
  long long new_v_4_1 = act_inv_linear_4_1;
  long long new_v_4_0 = act_inv_linear_4_0;
  long long rotation_matrix_5_2_2 = 1073741824;
  long long rotation_matrix_5_2_1 = 0;
  long long rotation_matrix_5_2_0 = 0;
  long long rotation_matrix_5_1_2 = 0;
  long long rotation_matrix_5_1_1 = qcos_5;
  long long rotation_matrix_5_1_0 = qsin_5;
  long long rotation_matrix_5_0_2 = 0;
  long long rotation_matrix_5_0_1 = -(qsin_5);
  long long rotation_matrix_5_0_0 = qcos_5;
  long long limi_rotation_5_2_2 = 0;
  long long limi_rotation_5_2_1 = rotation_matrix_5_1_1;
  long long limi_rotation_5_2_0 = rotation_matrix_5_1_0;
  long long limi_rotation_5_1_2 = -1073741825;
  long long limi_rotation_5_1_1 = 0;
  long long limi_rotation_5_1_0 = 0;
  long long limi_rotation_5_0_2 = 0;
  long long limi_rotation_5_0_1 = rotation_matrix_5_0_1;
  long long limi_rotation_5_0_0 = rotation_matrix_5_0_0;
  long long v_linear_5_2 = data_v_5_2;
  long long v_linear_5_1 = data_v_5_1;
  long long v_linear_5_0 = data_v_5_0;
  long long v_angular_5_2 = v_5;
  long long v_angular_5_1 = data_v_5_4;
  long long v_angular_5_0 = data_v_5_3;
  long long parent_v_linear_5_2 = new_v_4_2;
  long long parent_v_linear_5_1 = new_v_4_1;
  long long parent_v_linear_5_0 = new_v_4_0;
  long long parent_v_angular_5_2 = new_v_4_5;
  long long parent_v_angular_5_1 = new_v_4_4;
  long long parent_v_angular_5_0 = new_v_4_3;
  long long parent_a_gf_linear_5_2 = new_a_gf_up3_4_2;
  long long parent_a_gf_linear_5_1 = new_a_gf_up3_4_1;
  long long parent_a_gf_linear_5_0 = new_a_gf_up3_4_0;
  long long parent_a_gf_angular_5_2 = new_a_gf_up3_4_5;
  long long parent_a_gf_angular_5_1 = new_a_gf_up3_4_4;
  long long parent_a_gf_angular_5_0 = new_a_gf_up3_4_3;
  long long actInv1_5_0 = (((limi_translation_5_1 * parent_v_angular_5_2) >> 24) - ((limi_translation_5_2 * parent_v_angular_5_1) >> 23));
  long long actInv1_5_1 = (((limi_translation_5_2 * parent_v_angular_5_0) >> 23) - ((limi_translation_5_0 * parent_v_angular_5_2) >> 24));
  long long actInv1_5_2 = (((limi_translation_5_0 * parent_v_angular_5_1) >> 23) - ((limi_translation_5_1 * parent_v_angular_5_0) >> 23));
  long long actInv2_5_2 = (((parent_v_linear_5_2 << 5) - actInv1_5_2) >> 5);
  long long actInv2_5_1 = (((parent_v_linear_5_1 << 7) - actInv1_5_1) >> 7);
  long long actInv2_5_0 = (((parent_v_linear_5_0 << 7) - actInv1_5_0) >> 7);
  long long actInv3_5_2_2 = limi_rotation_5_2_2;
  long long actInv3_5_1_2 = limi_rotation_5_2_1;
  long long actInv3_5_0_2 = limi_rotation_5_2_0;
  long long actInv3_5_2_1 = limi_rotation_5_1_2;
  long long actInv3_5_1_1 = limi_rotation_5_1_1;
  long long actInv3_5_0_1 = limi_rotation_5_1_0;
  long long actInv3_5_2_0 = limi_rotation_5_0_2;
  long long actInv3_5_1_0 = limi_rotation_5_0_1;
  long long actInv3_5_0_0 = limi_rotation_5_0_0;
  long long actInv4_5_2 = ((((actInv3_5_2_0 * actInv2_5_0) >> 24) + ((((((actInv3_5_2_1 * actInv2_5_1) >> 30) << 7) + ((actInv3_5_2_2 * actInv2_5_2) >> 26)) >> 7) << 7)) >> 7);
  long long actInv4_5_1 = (((((actInv3_5_1_0 * actInv2_5_0) >> 30) << 2) + ((((actInv3_5_1_1 * actInv2_5_1) >> 24) + (((actInv3_5_1_2 * actInv2_5_2) >> 30) << 5)) >> 5)) >> 2);
  long long actInv4_5_0 = (((((actInv3_5_0_0 * actInv2_5_0) >> 30) << 2) + ((((actInv3_5_0_1 * actInv2_5_1) >> 24) + (((actInv3_5_0_2 * actInv2_5_2) >> 30) << 5)) >> 5)) >> 2);
  long long act_inv_linear_5_2 = ((v_linear_5_2 + (actInv4_5_2 << 7)) >> 7);
  long long act_inv_linear_5_1 = ((v_linear_5_1 + (actInv4_5_1 << 7)) >> 7);
  long long act_inv_linear_5_0 = ((v_linear_5_0 + (actInv4_5_0 << 7)) >> 7);
  long long actInv5_5_2 = ((((actInv3_5_2_0 * parent_v_angular_5_0) >> 23) + ((((((actInv3_5_2_1 * parent_v_angular_5_1) >> 30) << 8) + ((actInv3_5_2_2 * parent_v_angular_5_2) >> 24)) >> 8) << 8)) >> 8);
  long long actInv5_5_1 = (((((actInv3_5_1_0 * parent_v_angular_5_0) >> 30) << 1) + ((((actInv3_5_1_1 * parent_v_angular_5_1) >> 23) + (((actInv3_5_1_2 * parent_v_angular_5_2) >> 30) << 7)) >> 7)) >> 1);
  long long actInv5_5_0 = (((((actInv3_5_0_0 * parent_v_angular_5_0) >> 30) << 1) + ((((actInv3_5_0_1 * parent_v_angular_5_1) >> 23) + (((actInv3_5_0_2 * parent_v_angular_5_2) >> 30) << 7)) >> 7)) >> 1);
  long long act_inv_angular_5_2 = ((v_angular_5_2 + (actInv5_5_2 << 3)) >> 3);
  long long act_inv_angular_5_1 = ((v_angular_5_1 + (actInv5_5_1 << 8)) >> 8);
  long long act_inv_angular_5_0 = ((v_angular_5_0 + (actInv5_5_0 << 8)) >> 8);
  long long minus_m_w_5 = v_5;
  long long temp122 = -(minus_m_w_5);
  long long temp121 = -(temp122);
  long long alpha_cross1_linear_5 = ((temp121 * act_inv_linear_5_1) >> 31);
  long long temp123 = -(minus_m_w_5);
  long long alpha_cross2_linear_5 = ((temp123 * act_inv_linear_5_0) >> 31);
  long long alpha_cross_linear_5_2 = 0;
  long long alpha_cross_linear_5_1 = alpha_cross2_linear_5;
  long long alpha_cross_linear_5_0 = alpha_cross1_linear_5;
  long long temp125 = -(minus_m_w_5);
  long long temp124 = -(temp125);
  long long alpha_cross1_angular_5 = ((temp124 * act_inv_angular_5_1) >> 31);
  long long temp126 = -(minus_m_w_5);
  long long alpha_cross2_angular_5 = ((temp126 * act_inv_angular_5_0) >> 31);
  long long alpha_cross_angular_5_2 = 0;
  long long alpha_cross_angular_5_1 = alpha_cross2_angular_5;
  long long alpha_cross_angular_5_0 = alpha_cross1_angular_5;
  long long new_a_gf_5_5 = alpha_cross_angular_5_2;
  long long new_a_gf_5_4 = alpha_cross_angular_5_1;
  long long new_a_gf_5_3 = alpha_cross_angular_5_0;
  long long new_a_gf_5_2 = alpha_cross_linear_5_2;
  long long new_a_gf_5_1 = alpha_cross_linear_5_1;
  long long new_a_gf_5_0 = alpha_cross_linear_5_0;
  long long new_a_gf_up1_5 = (((a_5 << 5) + new_a_gf_5_5) >> 5);
  long long new_a_gf2_linear_5_2 = new_a_gf_5_2;
  long long new_a_gf2_linear_5_1 = new_a_gf_5_1;
  long long new_a_gf2_linear_5_0 = new_a_gf_5_0;
  long long new_a_gf2_angular_5_2 = new_a_gf_up1_5;
  long long new_a_gf2_angular_5_1 = new_a_gf_5_4;
  long long new_a_gf2_angular_5_0 = new_a_gf_5_3;
  long long r_64_actInv1_5_0 = (((limi_translation_5_1 * parent_a_gf_angular_5_2) >> 19) - ((limi_translation_5_2 * parent_a_gf_angular_5_1) >> 18));
  long long r_64_actInv1_5_1 = (((limi_translation_5_2 * parent_a_gf_angular_5_0) >> 18) - ((limi_translation_5_0 * parent_a_gf_angular_5_2) >> 19));
  long long r_64_actInv1_5_2 = (((limi_translation_5_0 * parent_a_gf_angular_5_1) >> 18) - ((limi_translation_5_1 * parent_a_gf_angular_5_0) >> 18));
  long long r_65_actInv2_5_2 = (((parent_a_gf_linear_5_2 << 10) - r_64_actInv1_5_2) >> 10);
  long long r_65_actInv2_5_1 = (((parent_a_gf_linear_5_1 << 13) - r_64_actInv1_5_1) >> 13);
  long long r_65_actInv2_5_0 = (((parent_a_gf_linear_5_0 << 13) - r_64_actInv1_5_0) >> 13);
  long long r_66_actInv3_5_2_2 = limi_rotation_5_2_2;
  long long r_66_actInv3_5_1_2 = limi_rotation_5_2_1;
  long long r_66_actInv3_5_0_2 = limi_rotation_5_2_0;
  long long r_66_actInv3_5_2_1 = limi_rotation_5_1_2;
  long long r_66_actInv3_5_1_1 = limi_rotation_5_1_1;
  long long r_66_actInv3_5_0_1 = limi_rotation_5_1_0;
  long long r_66_actInv3_5_2_0 = limi_rotation_5_0_2;
  long long r_66_actInv3_5_1_0 = limi_rotation_5_0_1;
  long long r_66_actInv3_5_0_0 = limi_rotation_5_0_0;
  long long r_67_actInv4_5_2 = ((((r_66_actInv3_5_2_0 * r_65_actInv2_5_0) >> 18) + ((((((r_66_actInv3_5_2_1 * r_65_actInv2_5_1) >> 30) << 13) + ((r_66_actInv3_5_2_2 * r_65_actInv2_5_2) >> 21)) >> 13) << 13)) >> 13);
  long long r_67_actInv4_5_1 = (((((r_66_actInv3_5_1_0 * r_65_actInv2_5_0) >> 30) << 3) + ((((r_66_actInv3_5_1_1 * r_65_actInv2_5_1) >> 18) + (((r_66_actInv3_5_1_2 * r_65_actInv2_5_2) >> 30) << 10)) >> 10)) >> 3);
  long long r_67_actInv4_5_0 = (((((r_66_actInv3_5_0_0 * r_65_actInv2_5_0) >> 30) << 3) + ((((r_66_actInv3_5_0_1 * r_65_actInv2_5_1) >> 18) + (((r_66_actInv3_5_0_2 * r_65_actInv2_5_2) >> 30) << 10)) >> 10)) >> 3);
  long long r_68_act_inv_linear_5_2 = ((new_a_gf2_linear_5_2 + (r_67_actInv4_5_2 << 13)) >> 13);
  long long r_68_act_inv_linear_5_1 = ((new_a_gf2_linear_5_1 + (r_67_actInv4_5_1 << 1)) >> 2);
  long long r_68_act_inv_linear_5_0 = ((new_a_gf2_linear_5_0 + (r_67_actInv4_5_0 << 1)) >> 2);
  long long r_69_actInv5_5_2 = ((((r_66_actInv3_5_2_0 * parent_a_gf_angular_5_0) >> 18) + ((((((r_66_actInv3_5_2_1 * parent_a_gf_angular_5_1) >> 30) << 13) + ((r_66_actInv3_5_2_2 * parent_a_gf_angular_5_2) >> 19)) >> 13) << 13)) >> 13);
  long long r_69_actInv5_5_1 = (((((r_66_actInv3_5_1_0 * parent_a_gf_angular_5_0) >> 30) << 1) + ((((r_66_actInv3_5_1_1 * parent_a_gf_angular_5_1) >> 18) + (((r_66_actInv3_5_1_2 * parent_a_gf_angular_5_2) >> 30) << 12)) >> 12)) >> 2);
  long long r_69_actInv5_5_0 = (((((r_66_actInv3_5_0_0 * parent_a_gf_angular_5_0) >> 30) << 1) + ((((r_66_actInv3_5_0_1 * parent_a_gf_angular_5_1) >> 18) + (((r_66_actInv3_5_0_2 * parent_a_gf_angular_5_2) >> 30) << 12)) >> 12)) >> 2);
  long long r_70_act_inv_angular_5_2 = ((new_a_gf2_angular_5_2 + (r_69_actInv5_5_2 << 8)) >> 8);
  long long r_70_act_inv_angular_5_1 = ((new_a_gf2_angular_5_1 + (r_69_actInv5_5_1 << 1)) >> 1);
  long long r_70_act_inv_angular_5_0 = ((new_a_gf2_angular_5_0 + (r_69_actInv5_5_0 << 1)) >> 1);
  long long new_a_gf_up3_5_5 = r_70_act_inv_angular_5_2;
  long long new_a_gf_up3_5_4 = r_70_act_inv_angular_5_1;
  long long new_a_gf_up3_5_3 = r_70_act_inv_angular_5_0;
  long long new_a_gf_up3_5_2 = r_68_act_inv_linear_5_2;
  long long new_a_gf_up3_5_1 = r_68_act_inv_linear_5_1;
  long long new_a_gf_up3_5_0 = r_68_act_inv_linear_5_0;
  long long h_linear_1_5_0 = ((((lever_5_1 * act_inv_angular_5_2) >> 25) - ((lever_5_2 * act_inv_angular_5_1) >> 25)) >> 1);
  long long h_linear_1_5_1 = ((((lever_5_2 * act_inv_angular_5_0) >> 25) - (((lever_5_0 * act_inv_angular_5_2) >> 27) << 2)) >> 2);
  long long h_linear_1_5_2 = (((((lever_5_0 * act_inv_angular_5_1) >> 27) << 2) - ((lever_5_1 * act_inv_angular_5_0) >> 25)) >> 3);
  long long h_linear_2_5_2 = (((act_inv_linear_5_2 << 2) - h_linear_1_5_2) >> 2);
  long long h_linear_2_5_1 = (((act_inv_linear_5_1 << 3) - h_linear_1_5_1) >> 3);
  long long h_linear_2_5_0 = (((act_inv_linear_5_0 << 4) - h_linear_1_5_0) >> 4);
  long long h_linear_5_2 = ((h_linear_2_5_2 * masses_5) >> 31);
  long long h_linear_5_1 = ((h_linear_2_5_1 * masses_5) >> 31);
  long long h_linear_5_0 = ((h_linear_2_5_0 * masses_5) >> 31);
  long long temp127 = ((act_inv_angular_5_0 * inertia_5_0_0) >> 23);
  long long temp128 = ((act_inv_angular_5_1 * inertia_5_0_1) >> 23);
  long long rhsMult1_temp_5 = (temp127 + temp128);
  long long temp129 = ((act_inv_angular_5_2 * inertia_5_0_2) >> 23);
  long long rhsMult1_5 = (rhsMult1_temp_5 + temp129);
  long long temp130 = ((act_inv_angular_5_0 * inertia_5_0_1) >> 23);
  long long temp131 = ((act_inv_angular_5_1 * inertia_5_1_1) >> 24);
  long long rhsMult2_temp_5 = ((temp130 + (temp131 << 1)) >> 1);
  long long temp132 = ((act_inv_angular_5_2 * inertia_5_1_2) >> 23);
  long long rhsMult2_5 = (((rhsMult2_temp_5 << 1) + temp132) >> 1);
  long long temp133 = ((act_inv_angular_5_0 * inertia_5_0_2) >> 23);
  long long temp134 = ((act_inv_angular_5_1 * inertia_5_1_2) >> 23);
  long long rhsMult3_temp_5 = (temp133 + temp134);
  long long temp135 = ((act_inv_angular_5_2 * inertia_5_2_2) >> 23);
  long long rhsMult3_5 = ((rhsMult3_temp_5 + temp135) >> 1);
  long long rhsMult_5_2 = rhsMult3_5;
  long long rhsMult_5_1 = rhsMult2_5;
  long long rhsMult_5_0 = rhsMult1_5;
  long long h_angular_first_5_2 = rhsMult_5_2;
  long long h_angular_first_5_1 = rhsMult_5_1;
  long long h_angular_first_5_0 = rhsMult_5_0;
  long long h_angular_1_5_0 = ((((lever_5_1 * h_linear_5_2) >> 25) - ((lever_5_2 * h_linear_5_1) >> 25)) >> 1);
  long long h_angular_1_5_1 = ((((lever_5_2 * h_linear_5_0) >> 25) - (((lever_5_0 * h_linear_5_2) >> 27) << 2)) >> 2);
  long long h_angular_1_5_2 = (((((lever_5_0 * h_linear_5_1) >> 27) << 2) - ((lever_5_1 * h_linear_5_0) >> 25)) >> 2);
  long long h_angular_5_2 = ((h_angular_first_5_2 + (h_angular_1_5_2 << 3)) >> 4);
  long long h_angular_5_1 = ((h_angular_first_5_1 + (h_angular_1_5_1 << 3)) >> 3);
  long long h_angular_5_0 = ((h_angular_first_5_0 + (h_angular_1_5_0 << 3)) >> 3);
  long long f_linear_1_5_0 = ((((lever_5_1 * r_70_act_inv_angular_5_2) >> 25) - (((lever_5_2 * r_70_act_inv_angular_5_1) >> 25) << 1)) >> 2);
  long long f_linear_1_5_1 = ((((lever_5_2 * r_70_act_inv_angular_5_0) >> 25) - (((lever_5_0 * r_70_act_inv_angular_5_2) >> 27) << 1)) >> 2);
  long long f_linear_1_5_2 = (((((lever_5_0 * r_70_act_inv_angular_5_1) >> 27) << 2) - ((lever_5_1 * r_70_act_inv_angular_5_0) >> 25)) >> 3);
  long long f_linear_2_5_2 = (((r_68_act_inv_linear_5_2 << 2) - f_linear_1_5_2) >> 2);
  long long f_linear_2_5_1 = (((r_68_act_inv_linear_5_1 << 4) - f_linear_1_5_1) >> 4);
  long long f_linear_2_5_0 = (((r_68_act_inv_linear_5_0 << 5) - f_linear_1_5_0) >> 5);
  long long f_linear_3_5_2 = ((f_linear_2_5_2 * masses_5) >> 31);
  long long f_linear_3_5_1 = ((f_linear_2_5_1 * masses_5) >> 30);
  long long f_linear_3_5_0 = ((f_linear_2_5_0 * masses_5) >> 30);
  long long temp136 = ((r_70_act_inv_angular_5_0 * inertia_5_0_0) >> 22);
  long long temp137 = ((r_70_act_inv_angular_5_1 * inertia_5_0_1) >> 18);
  long long r_71_rhsMult1_temp_5 = (((temp136 << 4) + temp137) >> 5);
  long long temp138 = ((r_70_act_inv_angular_5_2 * inertia_5_0_2) >> 22);
  long long r_72_rhsMult1_5 = (((r_71_rhsMult1_temp_5 << 2) + temp138) >> 2);
  long long temp139 = ((r_70_act_inv_angular_5_0 * inertia_5_0_1) >> 18);
  long long temp140 = ((r_70_act_inv_angular_5_1 * inertia_5_1_1) >> 24);
  long long r_73_rhsMult2_temp_5 = ((temp139 + (temp140 << 6)) >> 6);
  long long temp141 = ((r_70_act_inv_angular_5_2 * inertia_5_1_2) >> 20);
  long long r_74_rhsMult2_5 = (((r_73_rhsMult2_temp_5 << 5) + temp141) >> 5);
  long long temp142 = ((r_70_act_inv_angular_5_0 * inertia_5_0_2) >> 22);
  long long temp143 = ((r_70_act_inv_angular_5_1 * inertia_5_1_2) >> 20);
  long long r_75_rhsMult3_temp_5 = (((temp142 << 2) + temp143) >> 2);
  long long temp144 = ((r_70_act_inv_angular_5_2 * inertia_5_2_2) >> 24);
  long long r_76_rhsMult3_5 = ((r_75_rhsMult3_temp_5 + (temp144 << 1)) >> 1);
  long long r_77_rhsMult_5_2 = r_76_rhsMult3_5;
  long long r_77_rhsMult_5_1 = r_74_rhsMult2_5;
  long long r_77_rhsMult_5_0 = r_72_rhsMult1_5;
  long long f_angular_first_5_2 = r_77_rhsMult_5_2;
  long long f_angular_first_5_1 = r_77_rhsMult_5_1;
  long long f_angular_first_5_0 = r_77_rhsMult_5_0;
  long long f_angular_1_5_0 = ((((lever_5_1 * f_linear_3_5_2) >> 25) - ((lever_5_2 * f_linear_3_5_1) >> 25)) >> 1);
  long long f_angular_1_5_1 = ((((lever_5_2 * f_linear_3_5_0) >> 25) - (((lever_5_0 * f_linear_3_5_2) >> 27) << 2)) >> 2);
  long long f_angular_1_5_2 = (((((lever_5_0 * f_linear_3_5_1) >> 27) << 2) - ((lever_5_1 * f_linear_3_5_0) >> 25)) >> 3);
  long long f_angular_2_5_2 = ((f_angular_first_5_2 + (f_angular_1_5_2 << 5)) >> 5);
  long long f_angular_2_5_1 = ((f_angular_first_5_1 + (f_angular_1_5_1 << 3)) >> 3);
  long long f_angular_2_5_0 = ((f_angular_first_5_0 + (f_angular_1_5_0 << 3)) >> 3);
  long long f_linear_4_temp_5_0 = ((((act_inv_angular_5_1 * h_linear_5_2) >> 31) - ((act_inv_angular_5_2 * h_linear_5_1) >> 31)) >> 1);
  long long f_linear_4_temp_5_1 = ((((act_inv_angular_5_2 * h_linear_5_0) >> 30) - (((act_inv_angular_5_0 * h_linear_5_2) >> 31) << 1)) >> 2);
  long long f_linear_4_temp_5_2 = ((((act_inv_angular_5_0 * h_linear_5_1) >> 31) - ((act_inv_angular_5_1 * h_linear_5_0) >> 31)) >> 1);
  long long f_linear_4_5_2 = ((f_linear_3_5_2 + (f_linear_4_temp_5_2 << 3)) >> 3);
  long long f_linear_4_5_1 = ((f_linear_3_5_1 + (f_linear_4_temp_5_1 << 3)) >> 3);
  long long f_linear_4_5_0 = ((f_linear_3_5_0 + (f_linear_4_temp_5_0 << 3)) >> 3);
  long long f_angular_3_temp_5_0 = (((((act_inv_angular_5_1 * h_angular_first_5_2) >> 31) << 1) - ((act_inv_angular_5_2 * h_angular_first_5_1) >> 30)) >> 1);
  long long f_angular_3_temp_5_1 = ((((act_inv_angular_5_2 * h_angular_first_5_0) >> 30) - (((act_inv_angular_5_0 * h_angular_first_5_2) >> 31) << 2)) >> 2);
  long long f_angular_3_temp_5_2 = (((((act_inv_angular_5_0 * h_angular_first_5_1) >> 31) << 1) - ((act_inv_angular_5_1 * h_angular_first_5_0) >> 31)) >> 1);
  long long f_angular_3_5_2 = (((f_angular_2_5_2 << 2) + f_angular_3_temp_5_2) >> 2);
  long long f_angular_3_5_1 = (((f_angular_2_5_1 << 1) + f_angular_3_temp_5_1) >> 2);
  long long f_angular_3_5_0 = ((f_angular_2_5_0 + f_angular_3_temp_5_0) >> 1);
  long long f_angular_4_temp_5_0 = ((((act_inv_linear_5_1 * h_linear_5_2) >> 31) - ((act_inv_linear_5_2 * h_linear_5_1) >> 31)) >> 1);
  long long f_angular_4_temp_5_1 = ((((act_inv_linear_5_2 * h_linear_5_0) >> 31) - ((act_inv_linear_5_0 * h_linear_5_2) >> 31)) >> 1);
  long long f_angular_4_temp_5_2 = ((((act_inv_linear_5_0 * h_linear_5_1) >> 31) - ((act_inv_linear_5_1 * h_linear_5_0) >> 31)) >> 1);
  long long f_angular_4_5_2 = ((f_angular_3_5_2 + (f_angular_4_temp_5_2 << 5)) >> 5);
  long long f_angular_4_5_1 = ((f_angular_3_5_1 + (f_angular_4_temp_5_1 << 5)) >> 5);
  long long f_angular_4_5_0 = ((f_angular_3_5_0 + (f_angular_4_temp_5_0 << 6)) >> 6);
  long long h_rnea_firstpass5_5 = h_angular_5_2;
  long long h_rnea_firstpass5_4 = h_angular_5_1;
  long long h_rnea_firstpass5_3 = h_angular_5_0;
  long long h_rnea_firstpass5_2 = h_linear_5_2;
  long long h_rnea_firstpass5_1 = h_linear_5_1;
  long long h_rnea_firstpass5_0 = h_linear_5_0;
  long long f_rnea_firstpass5_5 = f_angular_4_5_2;
  long long f_rnea_firstpass5_4 = f_angular_4_5_1;
  long long f_rnea_firstpass5_3 = f_angular_4_5_0;
  long long f_rnea_firstpass5_2 = f_linear_4_5_2;
  long long f_rnea_firstpass5_1 = f_linear_4_5_1;
  long long f_rnea_firstpass5_0 = f_linear_4_5_0;
  long long new_v_5_5 = act_inv_angular_5_2;
  long long new_v_5_4 = act_inv_angular_5_1;
  long long new_v_5_3 = act_inv_angular_5_0;
  long long new_v_5_2 = act_inv_linear_5_2;
  long long new_v_5_1 = act_inv_linear_5_1;
  long long new_v_5_0 = act_inv_linear_5_0;
  long long data_tau_temp_5 = f_rnea_firstpass5_5;
  long long f_linear_5_2 = f_rnea_firstpass5_2;
  long long f_linear_5_1 = f_rnea_firstpass5_1;
  long long f_linear_5_0 = f_rnea_firstpass5_0;
  long long f_angular_5_2 = f_rnea_firstpass5_5;
  long long f_angular_5_1 = f_rnea_firstpass5_4;
  long long f_angular_5_0 = f_rnea_firstpass5_3;
  long long new_f_linear_5_2 = ((((limi_rotation_5_2_0 * f_linear_5_0) >> 30) + (((((limi_rotation_5_2_1 * f_linear_5_1) >> 30) << 17) + ((limi_rotation_5_2_2 * f_linear_5_2) >> 14)) >> 17)) >> 1);
  long long new_f_linear_5_1 = ((((limi_rotation_5_1_0 * f_linear_5_0) >> 14) + (((((limi_rotation_5_1_1 * f_linear_5_1) >> 14) + (((limi_rotation_5_1_2 * f_linear_5_2) >> 30) << 17)) >> 17) << 17)) >> 17);
  long long new_f_linear_5_0 = ((((limi_rotation_5_0_0 * f_linear_5_0) >> 30) + (((((limi_rotation_5_0_1 * f_linear_5_1) >> 30) << 17) + ((limi_rotation_5_0_2 * f_linear_5_2) >> 14)) >> 17)) >> 1);
  long long new_f_angular_temp_5_2 = ((((limi_rotation_5_2_0 * f_angular_5_0) >> 30) + (((((limi_rotation_5_2_1 * f_angular_5_1) >> 30) << 16) + ((limi_rotation_5_2_2 * f_angular_5_2) >> 15)) >> 16)) >> 1);
  long long new_f_angular_temp_5_1 = ((((limi_rotation_5_1_0 * f_angular_5_0) >> 15) + (((((limi_rotation_5_1_1 * f_angular_5_1) >> 15) + (((limi_rotation_5_1_2 * f_angular_5_2) >> 30) << 16)) >> 16) << 16)) >> 16);
  long long new_f_angular_temp_5_0 = ((((limi_rotation_5_0_0 * f_angular_5_0) >> 30) + (((((limi_rotation_5_0_1 * f_angular_5_1) >> 30) << 16) + ((limi_rotation_5_0_2 * f_angular_5_2) >> 15)) >> 16)) >> 1);
  long long f_angular_cross_5_0 = (((limi_translation_5_1 * new_f_linear_5_2) >> 13) - ((limi_translation_5_2 * new_f_linear_5_1) >> 14));
  long long f_angular_cross_5_1 = (((limi_translation_5_2 * new_f_linear_5_0) >> 13) - ((limi_translation_5_0 * new_f_linear_5_2) >> 13));
  long long f_angular_cross_5_2 = (((limi_translation_5_0 * new_f_linear_5_1) >> 14) - ((limi_translation_5_1 * new_f_linear_5_0) >> 13));
  long long new_f_angular_5_2 = (((new_f_angular_temp_5_2 << 17) + f_angular_cross_5_2) >> 17);
  long long new_f_angular_5_1 = (((new_f_angular_temp_5_1 << 16) + f_angular_cross_5_1) >> 16);
  long long new_f_angular_5_0 = (((new_f_angular_temp_5_0 << 17) + f_angular_cross_5_0) >> 17);
  long long new_f_5_5 = new_f_angular_5_2;
  long long new_f_5_4 = new_f_angular_5_1;
  long long new_f_5_3 = new_f_angular_5_0;
  long long new_f_5_2 = new_f_linear_5_2;
  long long new_f_5_1 = new_f_linear_5_1;
  long long new_f_5_0 = new_f_linear_5_0;
  long long new_data_f_parent_5_5 = ((f_rnea_firstpass4_5 + (new_f_5_5 << 2)) >> 2);
  long long new_data_f_parent_5_4 = ((f_rnea_firstpass4_4 + (new_f_5_4 << 3)) >> 3);
  long long new_data_f_parent_5_3 = ((f_rnea_firstpass4_3 + (new_f_5_3 << 4)) >> 4);
  long long new_data_f_parent_5_2 = ((f_rnea_firstpass4_2 + (new_f_5_2 << 2)) >> 2);
  long long new_data_f_parent_5_1 = ((f_rnea_firstpass4_1 + (new_f_5_1 << 2)) >> 3);
  long long new_data_f_parent_5_0 = ((f_rnea_firstpass4_0 + (new_f_5_0 << 3)) >> 3);
  long long data_tau_temp_4 = new_data_f_parent_5_5;
  long long f_linear_4_2 = new_data_f_parent_5_2;
  long long f_linear_4_1 = new_data_f_parent_5_1;
  long long f_linear_4_0 = new_data_f_parent_5_0;
  long long f_angular_4_2 = new_data_f_parent_5_5;
  long long f_angular_4_1 = new_data_f_parent_5_4;
  long long f_angular_4_0 = new_data_f_parent_5_3;
  long long new_f_linear_4_2 = ((((limi_rotation_4_2_0 * f_linear_4_0) >> 30) + (((((limi_rotation_4_2_1 * f_linear_4_1) >> 30) << 18) + ((limi_rotation_4_2_2 * f_linear_4_2) >> 13)) >> 18)) >> 1);
  long long new_f_linear_4_1 = ((((limi_rotation_4_1_0 * f_linear_4_0) >> 13) + (((((limi_rotation_4_1_1 * f_linear_4_1) >> 13) + (((limi_rotation_4_1_2 * f_linear_4_2) >> 30) << 18)) >> 18) << 18)) >> 18);
  long long new_f_linear_4_0 = ((((limi_rotation_4_0_0 * f_linear_4_0) >> 30) + (((((limi_rotation_4_0_1 * f_linear_4_1) >> 30) << 18) + ((limi_rotation_4_0_2 * f_linear_4_2) >> 13)) >> 18)) >> 1);
  long long new_f_angular_temp_4_2 = (((((limi_rotation_4_2_0 * f_angular_4_0) >> 30) << 1) + (((((limi_rotation_4_2_1 * f_angular_4_1) >> 30) << 16) + ((limi_rotation_4_2_2 * f_angular_4_2) >> 14)) >> 16)) >> 2);
  long long new_f_angular_temp_4_1 = ((((limi_rotation_4_1_0 * f_angular_4_0) >> 14) + (((((limi_rotation_4_1_1 * f_angular_4_1) >> 15) + (((limi_rotation_4_1_2 * f_angular_4_2) >> 30) << 17)) >> 17) << 17)) >> 17);
  long long new_f_angular_temp_4_0 = (((((limi_rotation_4_0_0 * f_angular_4_0) >> 30) << 1) + (((((limi_rotation_4_0_1 * f_angular_4_1) >> 30) << 16) + ((limi_rotation_4_0_2 * f_angular_4_2) >> 14)) >> 16)) >> 2);
  long long f_angular_cross_4_0 = (((((limi_translation_4_1 * new_f_linear_4_2) >> 29) << 17) - ((limi_translation_4_2 * new_f_linear_4_1) >> 13)) >> 17);
  long long f_angular_cross_4_1 = ((((limi_translation_4_2 * new_f_linear_4_0) >> 12) - (((limi_translation_4_0 * new_f_linear_4_2) >> 27) << 15)) >> 15);
  long long f_angular_cross_4_2 = ((((limi_translation_4_0 * new_f_linear_4_1) >> 28) - (((limi_translation_4_1 * new_f_linear_4_0) >> 29) << 2)) >> 3);
  long long new_f_angular_4_2 = ((new_f_angular_temp_4_2 + f_angular_cross_4_2) >> 1);
  long long new_f_angular_4_1 = (((new_f_angular_temp_4_1 << 2) + f_angular_cross_4_1) >> 3);
  long long new_f_angular_4_0 = (((new_f_angular_temp_4_0 << 1) + f_angular_cross_4_0) >> 2);
  long long new_f_4_5 = new_f_angular_4_2;
  long long new_f_4_4 = new_f_angular_4_1;
  long long new_f_4_3 = new_f_angular_4_0;
  long long new_f_4_2 = new_f_linear_4_2;
  long long new_f_4_1 = new_f_linear_4_1;
  long long new_f_4_0 = new_f_linear_4_0;
  long long new_data_f_parent_4_5 = ((f_rnea_firstpass3_5 + (new_f_4_5 << 7)) >> 7);
  long long new_data_f_parent_4_4 = ((f_rnea_firstpass3_4 + (new_f_4_4 << 6)) >> 6);
  long long new_data_f_parent_4_3 = ((f_rnea_firstpass3_3 + (new_f_4_3 << 7)) >> 7);
  long long new_data_f_parent_4_2 = ((f_rnea_firstpass3_2 + (new_f_4_2 << 4)) >> 4);
  long long new_data_f_parent_4_1 = ((f_rnea_firstpass3_1 + (new_f_4_1 << 3)) >> 3);
  long long new_data_f_parent_4_0 = ((f_rnea_firstpass3_0 + (new_f_4_0 << 4)) >> 4);
  long long data_tau_temp_3 = new_data_f_parent_4_5;
  long long f_linear_3_2 = new_data_f_parent_4_2;
  long long f_linear_3_1 = new_data_f_parent_4_1;
  long long f_linear_3_0 = new_data_f_parent_4_0;
  long long f_angular_3_2 = new_data_f_parent_4_5;
  long long f_angular_3_1 = new_data_f_parent_4_4;
  long long f_angular_3_0 = new_data_f_parent_4_3;
  long long new_f_linear_3_2 = (((((limi_rotation_3_2_0 * f_linear_3_0) >> 30) << 1) + (((((limi_rotation_3_2_1 * f_linear_3_1) >> 30) << 18) + ((limi_rotation_3_2_2 * f_linear_3_2) >> 12)) >> 18)) >> 2);
  long long new_f_linear_3_1 = ((((limi_rotation_3_1_0 * f_linear_3_0) >> 12) + (((((limi_rotation_3_1_1 * f_linear_3_1) >> 13) + (((limi_rotation_3_1_2 * f_linear_3_2) >> 30) << 19)) >> 19) << 19)) >> 19);
  long long new_f_linear_3_0 = (((((limi_rotation_3_0_0 * f_linear_3_0) >> 30) << 1) + (((((limi_rotation_3_0_1 * f_linear_3_1) >> 30) << 18) + ((limi_rotation_3_0_2 * f_linear_3_2) >> 12)) >> 18)) >> 2);
  long long new_f_angular_temp_3_2 = (((((limi_rotation_3_2_0 * f_angular_3_0) >> 30) << 1) + (((((limi_rotation_3_2_1 * f_angular_3_1) >> 30) << 18) + ((limi_rotation_3_2_2 * f_angular_3_2) >> 12)) >> 18)) >> 1);
  long long new_f_angular_temp_3_1 = ((((limi_rotation_3_1_0 * f_angular_3_0) >> 12) + (((((limi_rotation_3_1_1 * f_angular_3_1) >> 13) + (((limi_rotation_3_1_2 * f_angular_3_2) >> 30) << 19)) >> 19) << 19)) >> 19);
  long long new_f_angular_temp_3_0 = (((((limi_rotation_3_0_0 * f_angular_3_0) >> 30) << 1) + (((((limi_rotation_3_0_1 * f_angular_3_1) >> 30) << 18) + ((limi_rotation_3_0_2 * f_angular_3_2) >> 12)) >> 18)) >> 1);
  long long f_angular_cross_3_0 = (((limi_translation_3_1 * new_f_linear_3_2) >> 11) - ((limi_translation_3_2 * new_f_linear_3_1) >> 12));
  long long f_angular_cross_3_1 = ((((limi_translation_3_2 * new_f_linear_3_0) >> 11) - (((limi_translation_3_0 * new_f_linear_3_2) >> 27) << 16)) >> 16);
  long long f_angular_cross_3_2 = (((((limi_translation_3_0 * new_f_linear_3_1) >> 27) << 15) - ((limi_translation_3_1 * new_f_linear_3_0) >> 11)) >> 15);
  long long new_f_angular_3_2 = (((new_f_angular_temp_3_2 << 4) + f_angular_cross_3_2) >> 4);
  long long new_f_angular_3_1 = (((new_f_angular_temp_3_1 << 3) + f_angular_cross_3_1) >> 3);
  long long new_f_angular_3_0 = (((new_f_angular_temp_3_0 << 19) + f_angular_cross_3_0) >> 19);
  long long new_f_3_5 = new_f_angular_3_2;
  long long new_f_3_4 = new_f_angular_3_1;
  long long new_f_3_3 = new_f_angular_3_0;
  long long new_f_3_2 = new_f_linear_3_2;
  long long new_f_3_1 = new_f_linear_3_1;
  long long new_f_3_0 = new_f_linear_3_0;
  long long new_data_f_parent_3_5 = ((f_rnea_firstpass2_5 + (new_f_3_5 << 8)) >> 8);
  long long new_data_f_parent_3_4 = ((f_rnea_firstpass2_4 + (new_f_3_4 << 10)) >> 10);
  long long new_data_f_parent_3_3 = ((f_rnea_firstpass2_3 + (new_f_3_3 << 10)) >> 10);
  long long new_data_f_parent_3_2 = ((f_rnea_firstpass2_2 + (new_f_3_2 << 7)) >> 7);
  long long new_data_f_parent_3_1 = ((f_rnea_firstpass2_1 + (new_f_3_1 << 6)) >> 6);
  long long new_data_f_parent_3_0 = ((f_rnea_firstpass2_0 + (new_f_3_0 << 8)) >> 8);
  long long data_tau_temp_2 = new_data_f_parent_3_5;
  long long f_linear_2_2 = new_data_f_parent_3_2;
  long long f_linear_2_1 = new_data_f_parent_3_1;
  long long f_linear_2_0 = new_data_f_parent_3_0;
  long long f_angular_2_2 = new_data_f_parent_3_5;
  long long f_angular_2_1 = new_data_f_parent_3_4;
  long long f_angular_2_0 = new_data_f_parent_3_3;
  long long new_f_linear_2_2 = (((((limi_rotation_2_2_0 * f_linear_2_0) >> 30) << 1) + (((((limi_rotation_2_2_1 * f_linear_2_1) >> 30) << 19) + ((limi_rotation_2_2_2 * f_linear_2_2) >> 11)) >> 19)) >> 1);
  long long new_f_linear_2_1 = ((((limi_rotation_2_1_0 * f_linear_2_0) >> 11) + (((((limi_rotation_2_1_1 * f_linear_2_1) >> 12) + (((limi_rotation_2_1_2 * f_linear_2_2) >> 30) << 20)) >> 20) << 20)) >> 20);
  long long new_f_linear_2_0 = (((((limi_rotation_2_0_0 * f_linear_2_0) >> 30) << 1) + (((((limi_rotation_2_0_1 * f_linear_2_1) >> 30) << 19) + ((limi_rotation_2_0_2 * f_linear_2_2) >> 11)) >> 19)) >> 1);
  long long new_f_angular_temp_2_2 = ((((limi_rotation_2_2_0 * f_angular_2_0) >> 30) + (((((limi_rotation_2_2_1 * f_angular_2_1) >> 30) << 19) + ((limi_rotation_2_2_2 * f_angular_2_2) >> 12)) >> 19)) >> 1);
  long long new_f_angular_temp_2_1 = ((((limi_rotation_2_1_0 * f_angular_2_0) >> 12) + (((((limi_rotation_2_1_1 * f_angular_2_1) >> 12) + (((limi_rotation_2_1_2 * f_angular_2_2) >> 30) << 19)) >> 19) << 19)) >> 19);
  long long new_f_angular_temp_2_0 = ((((limi_rotation_2_0_0 * f_angular_2_0) >> 30) + (((((limi_rotation_2_0_1 * f_angular_2_1) >> 30) << 19) + ((limi_rotation_2_0_2 * f_angular_2_2) >> 12)) >> 19)) >> 1);
  long long f_angular_cross_2_0 = (((((limi_translation_2_1 * new_f_linear_2_2) >> 30) << 19) - ((limi_translation_2_2 * new_f_linear_2_1) >> 11)) >> 19);
  long long f_angular_cross_2_1 = (((limi_translation_2_2 * new_f_linear_2_0) >> 11) - ((limi_translation_2_0 * new_f_linear_2_2) >> 11));
  long long f_angular_cross_2_2 = ((((limi_translation_2_0 * new_f_linear_2_1) >> 11) - (((limi_translation_2_1 * new_f_linear_2_0) >> 30) << 19)) >> 19);
  long long new_f_angular_2_2 = (((new_f_angular_temp_2_2 << 1) + f_angular_cross_2_2) >> 2);
  long long new_f_angular_2_1 = (((new_f_angular_temp_2_1 << 19) + f_angular_cross_2_1) >> 19);
  long long new_f_angular_2_0 = (((new_f_angular_temp_2_0 << 1) + f_angular_cross_2_0) >> 2);
  long long new_f_2_5 = new_f_angular_2_2;
  long long new_f_2_4 = new_f_angular_2_1;
  long long new_f_2_3 = new_f_angular_2_0;
  long long new_f_2_2 = new_f_linear_2_2;
  long long new_f_2_1 = new_f_linear_2_1;
  long long new_f_2_0 = new_f_linear_2_0;
  long long new_data_f_parent_2_5 = ((f_rnea_firstpass1_5 + (new_f_2_5 << 16)) >> 16);
  long long new_data_f_parent_2_4 = ((f_rnea_firstpass1_4 + (new_f_2_4 << 13)) >> 13);
  long long new_data_f_parent_2_3 = ((f_rnea_firstpass1_3 + (new_f_2_3 << 15)) >> 15);
  long long new_data_f_parent_2_2 = ((f_rnea_firstpass1_2 + (new_f_2_2 << 15)) >> 15);
  long long new_data_f_parent_2_1 = ((f_rnea_firstpass1_1 + (new_f_2_1 << 15)) >> 15);
  long long new_data_f_parent_2_0 = ((f_rnea_firstpass1_0 + (new_f_2_0 << 15)) >> 15);
  long long data_tau_temp_1 = new_data_f_parent_2_5;
  long long f_linear_1_2 = new_data_f_parent_2_2;
  long long f_linear_1_1 = new_data_f_parent_2_1;
  long long f_linear_1_0 = new_data_f_parent_2_0;
  long long f_angular_1_2 = new_data_f_parent_2_5;
  long long f_angular_1_1 = new_data_f_parent_2_4;
  long long f_angular_1_0 = new_data_f_parent_2_3;
  long long new_f_linear_1_2 = ((((limi_rotation_1_2_0 * f_linear_1_0) >> 30) + (((((limi_rotation_1_2_1 * f_linear_1_1) >> 30) << 20) + ((limi_rotation_1_2_2 * f_linear_1_2) >> 11)) >> 20)) >> 1);
  long long new_f_linear_1_1 = ((((limi_rotation_1_1_0 * f_linear_1_0) >> 11) + (((((limi_rotation_1_1_1 * f_linear_1_1) >> 11) + (((limi_rotation_1_1_2 * f_linear_1_2) >> 30) << 20)) >> 20) << 20)) >> 20);
  long long new_f_linear_1_0 = ((((limi_rotation_1_0_0 * f_linear_1_0) >> 30) + (((((limi_rotation_1_0_1 * f_linear_1_1) >> 30) << 20) + ((limi_rotation_1_0_2 * f_linear_1_2) >> 11)) >> 20)) >> 1);
  long long new_f_angular_temp_1_2 = (((((limi_rotation_1_2_0 * f_angular_1_0) >> 30) << 2) + (((((limi_rotation_1_2_1 * f_angular_1_1) >> 30) << 19) + ((limi_rotation_1_2_2 * f_angular_1_2) >> 10)) >> 19)) >> 2);
  long long new_f_angular_temp_1_1 = ((((limi_rotation_1_1_0 * f_angular_1_0) >> 10) + (((((limi_rotation_1_1_1 * f_angular_1_1) >> 12) + (((limi_rotation_1_1_2 * f_angular_1_2) >> 30) << 21)) >> 21) << 21)) >> 21);
  long long new_f_angular_temp_1_0 = (((((limi_rotation_1_0_0 * f_angular_1_0) >> 30) << 2) + (((((limi_rotation_1_0_1 * f_angular_1_1) >> 30) << 19) + ((limi_rotation_1_0_2 * f_angular_1_2) >> 10)) >> 19)) >> 2);
  long long f_angular_cross_1_0 = (((limi_translation_1_1 * new_f_linear_1_2) >> 10) - ((limi_translation_1_2 * new_f_linear_1_1) >> 11));
  long long f_angular_cross_1_1 = (((limi_translation_1_2 * new_f_linear_1_0) >> 10) - ((limi_translation_1_0 * new_f_linear_1_2) >> 10));
  long long f_angular_cross_1_2 = (((limi_translation_1_0 * new_f_linear_1_1) >> 11) - ((limi_translation_1_1 * new_f_linear_1_0) >> 10));
  long long new_f_angular_1_2 = (((new_f_angular_temp_1_2 << 21) + f_angular_cross_1_2) >> 21);
  long long new_f_angular_1_1 = (((new_f_angular_temp_1_1 << 21) + f_angular_cross_1_1) >> 21);
  long long new_f_angular_1_0 = (((new_f_angular_temp_1_0 << 21) + f_angular_cross_1_0) >> 21);
  long long new_f_1_5 = new_f_angular_1_2;
  long long new_f_1_4 = new_f_angular_1_1;
  long long new_f_1_3 = new_f_angular_1_0;
  long long new_f_1_2 = new_f_linear_1_2;
  long long new_f_1_1 = new_f_linear_1_1;
  long long new_f_1_0 = new_f_linear_1_0;
  long long new_data_f_parent_1_5 = ((f_rnea_firstpass0_5 + (new_f_1_5 << 21)) >> 21);
  long long new_data_f_parent_1_4 = ((f_rnea_firstpass0_4 + (new_f_1_4 << 19)) >> 19);
  long long new_data_f_parent_1_3 = ((f_rnea_firstpass0_3 + (new_f_1_3 << 18)) >> 18);
  long long new_data_f_parent_1_2 = ((f_rnea_firstpass0_2 + (new_f_1_2 << 15)) >> 15);
  long long new_data_f_parent_1_1 = ((f_rnea_firstpass0_1 + (new_f_1_1 << 17)) >> 17);
  long long new_data_f_parent_1_0 = ((f_rnea_firstpass0_0 + (new_f_1_0 << 18)) >> 18);
  long long data_tau_temp_0 = new_data_f_parent_1_5;
  long long data_tau_5 = data_tau_temp_5;
  long long data_tau_4 = data_tau_temp_4;
  long long data_tau_3 = data_tau_temp_3;
  long long data_tau_2 = data_tau_temp_2;
  long long data_tau_1 = data_tau_temp_1;
  long long data_tau_0 = data_tau_temp_0;


  //ap_fixed<32,17> data_tau_5 = data_tau_temp_5;
  //ap_fixed<32,18> data_tau_4 = data_tau_temp_4;
  //ap_fixed<32,20> data_tau_3 = data_tau_temp_3;
  //ap_fixed<32,20> data_tau_2 = data_tau_temp_2;
  //ap_fixed<32,22> data_tau_1 = data_tau_temp_1;
  //ap_fixed<32,22> data_tau_0 = data_tau_temp_0;


  printf("data_tau_0: %f\n", (double)data_tau_0 / pow(2, 10));
  printf("data_tau_1: %f\n", (double)data_tau_1 / pow(2, 10));
  printf("data_tau_2: %f\n", (double)data_tau_2 / pow(2, 12));
  printf("data_tau_3: %f\n", (double)data_tau_3 / pow(2, 12));
  printf("data_tau_4: %f\n", (double)data_tau_4 / pow(2, 14));
  printf("data_tau_5: %f\n", (double)data_tau_5 / pow(2, 15));

  return data_tau_5;
} // [-1501079.7780132717, 1501079.7780132717] +/- 0.11550978902894

int main(){
    // give some random values
    // q =   1.97125 -0.372364   1.64045 -0.674883   2.38533  0.727269
    // v =  -0.329554   0.536459  -0.444451    0.10794 -0.0452059   0.257742
    // a = -0.270431 0.0268018  0.904459   0.83239  0.271423  0.434594 
    std::vector<double> q = {1.97125, -0.372364, 1.64045, -0.674883, 2.38533, 0.727269};
    std::vector<double> v = {-0.329554, 0.536459, -0.444451, 0.10794, -0.0452059, 0.257742};
    std::vector<double> a = {-0.270431, 0.0268018, 0.904459, 0.83239, 0.271423, 0.434594};
    std::vector<double> cos_qpos = {cos(q[0]), cos(q[1]), cos(q[2]), cos(q[3]), cos(q[4]), cos(q[5])};
    std::vector<double> sin_qpos = {sin(q[0]), sin(q[1]), sin(q[2]), sin(q[3]), sin(q[4]), sin(q[5])};

    // ap_fixed<32,2> qcos_0, ap_fixed<32,2> qcos_1, ap_fixed<32,2> qcos_2, ap_fixed<32,2> qcos_3, ap_fixed<32,2> qcos_4, ap_fixed<32,2> qcos_5, 
    // ap_fixed<32,2> qsin_0, ap_fixed<32,2> qsin_1, ap_fixed<32,2> qsin_2, ap_fixed<32,2> qsin_3, ap_fixed<32,2> qsin_4, ap_fixed<32,2> qsin_5, 
    // ap_fixed<32,6> v_0, ap_fixed<32,6> v_1, ap_fixed<32,6> v_2, ap_fixed<32,6> v_3, ap_fixed<32,6> v_4, ap_fixed<32,6> v_5, 
    // ap_fixed<32,6> a_0, ap_fixed<32,6> a_1, ap_fixed<32,6> a_2, ap_fixed<32,6> a_3, ap_fixed<32,6> a_4, ap_fixed<32,6> a_5
    // for ap_fixed<x,y>, every number should be multiplied by 2^(x-y)

    for(int i = 0; i < cos_qpos.size(); i++){
      cos_qpos[i] = cos_qpos[i] * pow(2, 30);
      sin_qpos[i] = sin_qpos[i] * pow(2, 30);
      v[i] = v[i] * pow(2, 26);
      a[i] = a[i] * pow(2, 26);
    }


    rand_func(
        cos_qpos[0], cos_qpos[1], cos_qpos[2], cos_qpos[3], cos_qpos[4], cos_qpos[5],
        sin_qpos[0], sin_qpos[1], sin_qpos[2], sin_qpos[3], sin_qpos[4], sin_qpos[5],
        v[0], v[1], v[2], v[3], v[4], v[5],
        a[0], a[1], a[2], a[3], a[4], a[5]
    );
}






