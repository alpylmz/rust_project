#include <math.h>
#include <ap_fixed.h>


/* @pre: ((qcos_0 > -1.0) && (qcos_0 < 1.0) && (qcos_1 > -1.0) && (qcos_1 < 1.0) && (qcos_2 > -1.0) && (qcos_2 < 1.0) && (qcos_3 > -1.0) && (qcos_3 < 1.0) && (qcos_4 > -1.0) && (qcos_4 < 1.0) && (qcos_5 > -1.0) && (qcos_5 < 1.0) && (qsin_0 > -1.0) && (qsin_0 < 1.0) && (qsin_1 > -1.0) && (qsin_1 < 1.0) && (qsin_2 > -1.0) && (qsin_2 < 1.0) && (qsin_3 > -1.0) && (qsin_3 < 1.0) && (qsin_4 > -1.0) && (qsin_4 < 1.0) && (qsin_5 > -1.0) && (qsin_5 < 1.0) && (v_0 > -1.0) && (v_0 < 1.0) && (v_1 > -1.0) && (v_1 < 1.0) && (v_2 > -1.0) && (v_2 < 1.0) && (v_3 > -1.0) && (v_3 < 1.0) && (v_4 > -1.0) && (v_4 < 1.0) && (v_5 > -1.0) && (v_5 < 1.0) && (a_0 > -1.0) && (a_0 < 1.0) && (a_1 > -1.0) && (a_1 < 1.0) && (a_2 > -1.0) && (a_2 < 1.0) && (a_3 > -1.0) && (a_3 < 1.0) && (a_4 > -1.0) && (a_4 < 1.0) && (a_5 > -1.0) && (a_5 < 1.0)) */
/* @post: (res) => (res +/- 0.1) */
ap_fixed<16,9> rnea(
    ap_fixed<16,2> qcos_0, ap_fixed<16,2> qcos_1, ap_fixed<16,2> qcos_2, ap_fixed<16,2> qcos_3, ap_fixed<16,2> qcos_4, ap_fixed<16,2> qcos_5, 
    ap_fixed<16,2> qsin_0, ap_fixed<16,2> qsin_1, ap_fixed<16,2> qsin_2, ap_fixed<16,2> qsin_3, ap_fixed<16,2> qsin_4, ap_fixed<16,2> qsin_5, 
    ap_fixed<16,2> v_0, ap_fixed<16,2> v_1, ap_fixed<16,2> v_2, ap_fixed<16,2> v_3, ap_fixed<16,2> v_4, ap_fixed<16,2> v_5, 
    ap_fixed<16,2> a_0, ap_fixed<16,2> a_1, ap_fixed<16,2> a_2, ap_fixed<16,2> a_3, ap_fixed<16,2> a_4, ap_fixed<16,2> a_5) {
  ap_fixed<16,1> limi_translation_0_0 = 0.0;
  ap_fixed<16,1> limi_translation_0_1 = 0.0;
  ap_fixed<16,1> limi_translation_0_2 = 0.333;
  ap_fixed<16,1> limi_translation_1_0 = 0.0;
  ap_fixed<16,1> limi_translation_1_1 = 0.0;
  ap_fixed<16,1> limi_translation_1_2 = 0.0;
  ap_fixed<16,1> limi_translation_2_0 = 0.0;
  ap_fixed<16,1> limi_translation_2_1 = -0.316;
  ap_fixed<16,1> limi_translation_2_2 = 0.0;
  ap_fixed<16,1> limi_translation_3_0 = 0.0825;
  ap_fixed<16,1> limi_translation_3_1 = 0.0;
  ap_fixed<16,1> limi_translation_3_2 = 0.0;
  ap_fixed<16,1> limi_translation_4_0 = -0.0825;
  ap_fixed<16,1> limi_translation_4_1 = 0.384;
  ap_fixed<16,1> limi_translation_4_2 = 0.0;
  ap_fixed<16,1> limi_translation_5_0 = 0.0;
  ap_fixed<16,1> limi_translation_5_1 = 0.0;
  ap_fixed<16,1> limi_translation_5_2 = 0.0;
  ap_fixed<16,1> data_v_0_0 = 0.0;
  ap_fixed<16,1> data_v_0_1 = 0.0;
  ap_fixed<16,1> data_v_0_2 = 0.0;
  ap_fixed<16,1> data_v_0_3 = 0.0;
  ap_fixed<16,1> data_v_0_4 = 0.0;
  ap_fixed<16,1> data_v_0_5 = 0.0;
  ap_fixed<16,1> data_v_1_0 = 0.0;
  ap_fixed<16,1> data_v_1_1 = 0.0;
  ap_fixed<16,1> data_v_1_2 = 0.0;
  ap_fixed<16,1> data_v_1_3 = 0.0;
  ap_fixed<16,1> data_v_1_4 = 0.0;
  ap_fixed<16,1> data_v_1_5 = 0.0;
  ap_fixed<16,1> data_v_2_0 = 0.0;
  ap_fixed<16,1> data_v_2_1 = 0.0;
  ap_fixed<16,1> data_v_2_2 = 0.0;
  ap_fixed<16,1> data_v_2_3 = 0.0;
  ap_fixed<16,1> data_v_2_4 = 0.0;
  ap_fixed<16,1> data_v_2_5 = 0.0;
  ap_fixed<16,1> data_v_3_0 = 0.0;
  ap_fixed<16,1> data_v_3_1 = 0.0;
  ap_fixed<16,1> data_v_3_2 = 0.0;
  ap_fixed<16,1> data_v_3_3 = 0.0;
  ap_fixed<16,1> data_v_3_4 = 0.0;
  ap_fixed<16,1> data_v_3_5 = 0.0;
  ap_fixed<16,1> data_v_4_0 = 0.0;
  ap_fixed<16,1> data_v_4_1 = 0.0;
  ap_fixed<16,1> data_v_4_2 = 0.0;
  ap_fixed<16,1> data_v_4_3 = 0.0;
  ap_fixed<16,1> data_v_4_4 = 0.0;
  ap_fixed<16,1> data_v_4_5 = 0.0;
  ap_fixed<16,1> data_v_5_0 = 0.0;
  ap_fixed<16,1> data_v_5_1 = 0.0;
  ap_fixed<16,1> data_v_5_2 = 0.0;
  ap_fixed<16,1> data_v_5_3 = 0.0;
  ap_fixed<16,1> data_v_5_4 = 0.0;
  ap_fixed<16,1> data_v_5_5 = 0.0;
  ap_fixed<16,1> lever_0_0 = 0.003875;
  ap_fixed<16,1> lever_0_1 = 0.002081;
  ap_fixed<16,1> lever_0_2 = -0.04762;
  ap_fixed<16,1> lever_1_0 = -0.003141;
  ap_fixed<16,1> lever_1_1 = -0.02872;
  ap_fixed<16,1> lever_1_2 = 0.003495;
  ap_fixed<16,1> lever_2_0 = 0.027518;
  ap_fixed<16,1> lever_2_1 = 0.039252;
  ap_fixed<16,1> lever_2_2 = -0.066502;
  ap_fixed<16,1> lever_3_0 = -0.05317;
  ap_fixed<16,1> lever_3_1 = 0.104419;
  ap_fixed<16,1> lever_3_2 = 0.027454;
  ap_fixed<16,1> lever_4_0 = -0.011953;
  ap_fixed<16,1> lever_4_1 = 0.041065;
  ap_fixed<16,1> lever_4_2 = -0.038437;
  ap_fixed<16,1> lever_5_0 = 0.060149;
  ap_fixed<16,1> lever_5_1 = -0.014117;
  ap_fixed<16,1> lever_5_2 = -0.010517;
  ap_fixed<16,4> masses_0 = 4.970684;
  ap_fixed<16,1> masses_1 = 0.646926;
  ap_fixed<16,3> masses_2 = 3.228604;
  ap_fixed<16,3> masses_3 = 3.587895;
  ap_fixed<16,2> masses_4 = 1.225946;
  ap_fixed<16,2> masses_5 = 1.66656;
  ap_fixed<16,1> inertia_0_0_0 = 0.70337;
  ap_fixed<16,1> inertia_0_0_1 = -0.000139;
  ap_fixed<16,1> inertia_0_0_2 = 0.006772;
  ap_fixed<16,1> inertia_0_1_0 = -0.000139;
  ap_fixed<16,1> inertia_0_1_1 = 0.70661;
  ap_fixed<16,1> inertia_0_1_2 = 0.019169;
  ap_fixed<16,1> inertia_0_2_0 = 0.006772;
  ap_fixed<16,1> inertia_0_2_1 = 0.019169;
  ap_fixed<16,1> inertia_0_2_2 = 0.009117;
  ap_fixed<16,1> inertia_1_0_0 = 0.007962;
  ap_fixed<16,1> inertia_1_0_1 = -0.003925;
  ap_fixed<16,1> inertia_1_0_2 = 0.010254;
  ap_fixed<16,1> inertia_1_1_0 = -0.003925;
  ap_fixed<16,1> inertia_1_1_1 = 0.02811;
  ap_fixed<16,1> inertia_1_1_2 = 0.000704;
  ap_fixed<16,1> inertia_1_2_0 = 0.010254;
  ap_fixed<16,1> inertia_1_2_1 = 0.000704;
  ap_fixed<16,1> inertia_1_2_2 = 0.025995;
  ap_fixed<16,1> inertia_2_0_0 = 0.037242;
  ap_fixed<16,1> inertia_2_0_1 = -0.004761;
  ap_fixed<16,1> inertia_2_0_2 = -0.011396;
  ap_fixed<16,1> inertia_2_1_0 = -0.004761;
  ap_fixed<16,1> inertia_2_1_1 = 0.036155;
  ap_fixed<16,1> inertia_2_1_2 = -0.012805;
  ap_fixed<16,1> inertia_2_2_0 = -0.011396;
  ap_fixed<16,1> inertia_2_2_1 = -0.012805;
  ap_fixed<16,1> inertia_2_2_2 = 0.01083;
  ap_fixed<16,1> inertia_3_0_0 = 0.025853;
  ap_fixed<16,1> inertia_3_0_1 = 0.007796;
  ap_fixed<16,1> inertia_3_0_2 = -0.001332;
  ap_fixed<16,1> inertia_3_1_0 = 0.007796;
  ap_fixed<16,1> inertia_3_1_1 = 0.019552;
  ap_fixed<16,1> inertia_3_1_2 = 0.008641;
  ap_fixed<16,1> inertia_3_2_0 = -0.001332;
  ap_fixed<16,1> inertia_3_2_1 = 0.008641;
  ap_fixed<16,1> inertia_3_2_2 = 0.028323;
  ap_fixed<16,1> inertia_4_0_0 = 0.035549;
  ap_fixed<16,1> inertia_4_0_1 = -0.002117;
  ap_fixed<16,1> inertia_4_0_2 = -0.004037;
  ap_fixed<16,1> inertia_4_1_0 = -0.002117;
  ap_fixed<16,1> inertia_4_1_1 = 0.029474;
  ap_fixed<16,1> inertia_4_1_2 = 0.000229;
  ap_fixed<16,1> inertia_4_2_0 = -0.004037;
  ap_fixed<16,1> inertia_4_2_1 = 0.000229;
  ap_fixed<16,1> inertia_4_2_2 = 0.008627;
  ap_fixed<16,1> inertia_5_0_0 = 0.001964;
  ap_fixed<16,1> inertia_5_0_1 = 0.000109;
  ap_fixed<16,1> inertia_5_0_2 = -0.001158;
  ap_fixed<16,1> inertia_5_1_0 = 0.000109;
  ap_fixed<16,1> inertia_5_1_1 = 0.004354;
  ap_fixed<16,1> inertia_5_1_2 = 0.000341;
  ap_fixed<16,1> inertia_5_2_0 = -0.001158;
  ap_fixed<16,1> inertia_5_2_1 = 0.000341;
  ap_fixed<16,1> inertia_5_2_2 = 0.005433;
  ap_fixed<16,1> parent_v_0 = 0.0;
  ap_fixed<16,1> parent_v_1 = 0.0;
  ap_fixed<16,1> parent_v_2 = 0.0;
  ap_fixed<16,1> parent_v_3 = 0.0;
  ap_fixed<16,1> parent_v_4 = 0.0;
  ap_fixed<16,1> parent_v_5 = 0.0;
  ap_fixed<16,1> parent_a_gf_0 = 0.0;
  ap_fixed<16,1> parent_a_gf_1 = 0.0;
  ap_fixed<16,5> parent_a_gf_2 = 9.81;
  ap_fixed<16,1> parent_a_gf_3 = 0.0;
  ap_fixed<16,1> parent_a_gf_4 = 0.0;
  ap_fixed<16,1> parent_a_gf_5 = 0.0;
  ap_fixed<16,1> new_v_0 = 0.0;
  ap_fixed<16,1> new_v_1 = 0.0;
  ap_fixed<16,1> new_v_2 = 0.0;
  ap_fixed<16,1> new_v_3 = 0.0;
  ap_fixed<16,1> new_v_4 = 0.0;
  ap_fixed<16,1> new_v_5 = 0.0;
  ap_fixed<16,1> new_a_gf_0 = 0.0;
  ap_fixed<16,1> new_a_gf_1 = 0.0;
  ap_fixed<16,1> new_a_gf_2 = 0.0;
  ap_fixed<16,1> new_a_gf_3 = 0.0;
  ap_fixed<16,1> new_a_gf_4 = 0.0;
  ap_fixed<16,1> new_a_gf_5 = 0.0;
  ap_fixed<16,1> new_h_0 = 0.0;
  ap_fixed<16,1> new_h_1 = 0.0;
  ap_fixed<16,1> new_h_2 = 0.0;
  ap_fixed<16,1> new_h_3 = 0.0;
  ap_fixed<16,1> new_h_4 = 0.0;
  ap_fixed<16,1> new_h_5 = 0.0;
  ap_fixed<16,1> new_f_0 = 0.0;
  ap_fixed<16,1> new_f_1 = 0.0;
  ap_fixed<16,1> new_f_2 = 0.0;
  ap_fixed<16,1> new_f_3 = 0.0;
  ap_fixed<16,1> new_f_4 = 0.0;
  ap_fixed<16,1> new_f_5 = 0.0;
  ap_fixed<16,2> rotation_matrix_0_0_0 = qcos_0;
  ap_fixed<16,2> rotation_matrix_0_0_1 = -(qsin_0);
  ap_fixed<16,1> rotation_matrix_0_0_2 = 0.0;
  ap_fixed<16,2> rotation_matrix_0_1_0 = qsin_0;
  ap_fixed<16,2> rotation_matrix_0_1_1 = qcos_0;
  ap_fixed<16,1> rotation_matrix_0_1_2 = 0.0;
  ap_fixed<16,1> rotation_matrix_0_2_0 = 0.0;
  ap_fixed<16,1> rotation_matrix_0_2_1 = 0.0;
  ap_fixed<16,2> rotation_matrix_0_2_2 = 1.0;
  ap_fixed<16,2> limi_rotation_0_0_0 = rotation_matrix_0_0_0;
  ap_fixed<16,2> limi_rotation_0_0_1 = rotation_matrix_0_0_1;
  ap_fixed<16,1> limi_rotation_0_0_2 = 0.0;
  ap_fixed<16,2> limi_rotation_0_1_0 = rotation_matrix_0_1_0;
  ap_fixed<16,2> limi_rotation_0_1_1 = rotation_matrix_0_1_1;
  ap_fixed<16,1> limi_rotation_0_1_2 = 0.0;
  ap_fixed<16,1> limi_rotation_0_2_0 = 0.0;
  ap_fixed<16,1> limi_rotation_0_2_1 = 0.0;
  ap_fixed<16,2> limi_rotation_0_2_2 = 1.0;
  ap_fixed<16,1> v_linear_0_0 = data_v_0_0;
  ap_fixed<16,1> v_linear_0_1 = data_v_0_1;
  ap_fixed<16,1> v_linear_0_2 = data_v_0_2;
  ap_fixed<16,1> v_angular_0_0 = data_v_0_3;
  ap_fixed<16,1> v_angular_0_1 = data_v_0_4;
  ap_fixed<16,2> v_angular_0_2 = v_0;
  ap_fixed<16,1> parent_v_linear_0_0 = parent_v_0;
  ap_fixed<16,1> parent_v_linear_0_1 = parent_v_1;
  ap_fixed<16,1> parent_v_linear_0_2 = parent_v_2;
  ap_fixed<16,1> parent_v_angular_0_0 = parent_v_3;
  ap_fixed<16,1> parent_v_angular_0_1 = parent_v_4;
  ap_fixed<16,1> parent_v_angular_0_2 = parent_v_5;
  ap_fixed<16,1> parent_a_gf_linear_0_0 = parent_a_gf_0;
  ap_fixed<16,1> parent_a_gf_linear_0_1 = parent_a_gf_1;
  ap_fixed<16,5> parent_a_gf_linear_0_2 = parent_a_gf_2;
  ap_fixed<16,1> parent_a_gf_angular_0_0 = parent_a_gf_3;
  ap_fixed<16,1> parent_a_gf_angular_0_1 = parent_a_gf_4;
  ap_fixed<16,1> parent_a_gf_angular_0_2 = parent_a_gf_5;
  ap_fixed<16,2> minus_m_w_0 = -(v_0);
  ap_fixed<16,2> _tmp = -(minus_m_w_0);
  ap_fixed<16,1> alpha_cross1_linear_0 = (_tmp * v_linear_0_1);
  ap_fixed<16,1> alpha_cross2_linear_0 = (minus_m_w_0 * v_linear_0_0);
  ap_fixed<16,1> alpha_cross_linear_0_0 = alpha_cross1_linear_0;
  ap_fixed<16,1> alpha_cross_linear_0_1 = alpha_cross2_linear_0;
  ap_fixed<16,1> alpha_cross_linear_0_2 = 0.0;
  ap_fixed<16,2> _tmp1 = -(minus_m_w_0);
  ap_fixed<16,1> alpha_cross1_angular_0 = (_tmp1 * v_angular_0_1);
  ap_fixed<16,1> alpha_cross2_angular_0 = (minus_m_w_0 * v_angular_0_0);
  ap_fixed<16,1> alpha_cross_angular_0_0 = alpha_cross1_angular_0;
  ap_fixed<16,1> alpha_cross_angular_0_1 = alpha_cross2_angular_0;
  ap_fixed<16,1> alpha_cross_angular_0_2 = 0.0;
  ap_fixed<16,1> r_1_new_a_gf_0_0 = alpha_cross_linear_0_0;
  ap_fixed<16,1> r_1_new_a_gf_0_1 = alpha_cross_linear_0_1;
  ap_fixed<16,1> r_1_new_a_gf_0_2 = alpha_cross_linear_0_2;
  ap_fixed<16,1> r_1_new_a_gf_0_3 = alpha_cross_angular_0_0;
  ap_fixed<16,1> r_1_new_a_gf_0_4 = alpha_cross_angular_0_1;
  ap_fixed<16,1> r_1_new_a_gf_0_5 = alpha_cross_angular_0_2;
  ap_fixed<16,2> new_a_gf_up1_0 = (a_0 + r_1_new_a_gf_0_5);
  ap_fixed<16,1> new_a_gf2_linear_0_0 = r_1_new_a_gf_0_0;
  ap_fixed<16,1> new_a_gf2_linear_0_1 = r_1_new_a_gf_0_1;
  ap_fixed<16,1> new_a_gf2_linear_0_2 = r_1_new_a_gf_0_2;
  ap_fixed<16,1> new_a_gf2_angular_0_0 = r_1_new_a_gf_0_3;
  ap_fixed<16,1> new_a_gf2_angular_0_1 = r_1_new_a_gf_0_4;
  ap_fixed<16,2> new_a_gf2_angular_0_2 = new_a_gf_up1_0;
  ap_fixed<16,1> _tmp2 = (limi_translation_0_0 * parent_a_gf_angular_0_1);
  ap_fixed<16,1> _tmp3 = (limi_translation_0_1 * parent_a_gf_angular_0_0);
  ap_fixed<16,1> actInv1_0_0 = (_tmp2 - _tmp3);
  ap_fixed<16,1> _tmp4 = (limi_translation_0_2 * parent_a_gf_angular_0_0);
  ap_fixed<16,1> _tmp5 = (limi_translation_0_0 * parent_a_gf_angular_0_2);
  ap_fixed<16,1> actInv1_0_1 = (_tmp4 - _tmp5);
  ap_fixed<16,1> _tmp6 = (limi_translation_0_0 * parent_a_gf_angular_0_1);
  ap_fixed<16,1> _tmp7 = (limi_translation_0_1 * parent_a_gf_angular_0_0);
  ap_fixed<16,1> actInv1_0_2 = (_tmp6 - _tmp7);
  ap_fixed<16,1> actInv2_0_0 = (parent_a_gf_linear_0_0 - actInv1_0_0);
  ap_fixed<16,1> actInv2_0_1 = (parent_a_gf_linear_0_1 - actInv1_0_1);
  ap_fixed<16,5> actInv2_0_2 = (parent_a_gf_linear_0_2 - actInv1_0_2);
  ap_fixed<16,2> actInv3_0_0_0 = limi_rotation_0_0_0;
  ap_fixed<16,2> actInv3_0_1_0 = limi_rotation_0_0_1;
  ap_fixed<16,1> actInv3_0_2_0 = limi_rotation_0_0_2;
  ap_fixed<16,2> actInv3_0_0_1 = limi_rotation_0_1_0;
  ap_fixed<16,2> actInv3_0_1_1 = limi_rotation_0_1_1;
  ap_fixed<16,1> actInv3_0_2_1 = limi_rotation_0_1_2;
  ap_fixed<16,1> actInv3_0_0_2 = limi_rotation_0_2_0;
  ap_fixed<16,1> actInv3_0_1_2 = limi_rotation_0_2_1;
  ap_fixed<16,2> actInv3_0_2_2 = limi_rotation_0_2_2;
  ap_fixed<16,1> _tmp8 = (actInv3_0_0_0 * actInv2_0_0);
  ap_fixed<16,1> _tmp9 = (actInv3_0_0_1 * actInv2_0_1);
  ap_fixed<16,1> _tmp10 = (_tmp8 + _tmp9);
  ap_fixed<16,1> _tmp11 = (actInv3_0_0_2 * actInv2_0_2);
  ap_fixed<16,1> actInv4_0_0 = (_tmp10 + _tmp11);
  ap_fixed<16,1> _tmp12 = (actInv3_0_1_0 * actInv2_0_0);
  ap_fixed<16,1> _tmp13 = (actInv3_0_1_1 * actInv2_0_1);
  ap_fixed<16,1> _tmp14 = (_tmp12 + _tmp13);
  ap_fixed<16,1> _tmp15 = (actInv3_0_1_2 * actInv2_0_2);
  ap_fixed<16,1> actInv4_0_1 = (_tmp14 + _tmp15);
  ap_fixed<16,1> _tmp16 = (actInv3_0_2_0 * actInv2_0_0);
  ap_fixed<16,1> _tmp17 = (actInv3_0_2_1 * actInv2_0_1);
  ap_fixed<16,1> _tmp18 = (_tmp16 + _tmp17);
  ap_fixed<16,5> _tmp19 = (actInv3_0_2_2 * actInv2_0_2);
  ap_fixed<16,5> actInv4_0_2 = (_tmp18 + _tmp19);
  ap_fixed<16,1> act_inv_linear_0_0 = (new_a_gf2_linear_0_0 + actInv4_0_0);
  ap_fixed<16,1> act_inv_linear_0_1 = (new_a_gf2_linear_0_1 + actInv4_0_1);
  ap_fixed<16,5> act_inv_linear_0_2 = (new_a_gf2_linear_0_2 + actInv4_0_2);
  ap_fixed<16,1> _tmp20 = (actInv3_0_0_0 * parent_a_gf_angular_0_0);
  ap_fixed<16,1> _tmp21 = (actInv3_0_0_1 * parent_a_gf_angular_0_1);
  ap_fixed<16,1> _tmp22 = (_tmp20 + _tmp21);
  ap_fixed<16,1> _tmp23 = (actInv3_0_0_2 * parent_a_gf_angular_0_2);
  ap_fixed<16,1> actInv5_0_0 = (_tmp22 + _tmp23);
  ap_fixed<16,1> _tmp24 = (actInv3_0_1_0 * parent_a_gf_angular_0_0);
  ap_fixed<16,1> _tmp25 = (actInv3_0_1_1 * parent_a_gf_angular_0_1);
  ap_fixed<16,1> _tmp26 = (_tmp24 + _tmp25);
  ap_fixed<16,1> _tmp27 = (actInv3_0_1_2 * parent_a_gf_angular_0_2);
  ap_fixed<16,1> actInv5_0_1 = (_tmp26 + _tmp27);
  ap_fixed<16,1> _tmp28 = (actInv3_0_2_0 * parent_a_gf_angular_0_0);
  ap_fixed<16,1> _tmp29 = (actInv3_0_2_1 * parent_a_gf_angular_0_1);
  ap_fixed<16,1> _tmp30 = (_tmp28 + _tmp29);
  ap_fixed<16,1> _tmp31 = (actInv3_0_2_2 * parent_a_gf_angular_0_2);
  ap_fixed<16,1> actInv5_0_2 = (_tmp30 + _tmp31);
  ap_fixed<16,1> act_inv_angular_0_0 = (new_a_gf2_angular_0_0 + actInv5_0_0);
  ap_fixed<16,1> act_inv_angular_0_1 = (new_a_gf2_angular_0_1 + actInv5_0_1);
  ap_fixed<16,2> act_inv_angular_0_2 = (new_a_gf2_angular_0_2 + actInv5_0_2);
  ap_fixed<16,1> new_a_gf_up3_0_0 = act_inv_linear_0_0;
  ap_fixed<16,1> new_a_gf_up3_0_1 = act_inv_linear_0_1;
  ap_fixed<16,5> new_a_gf_up3_0_2 = act_inv_linear_0_2;
  ap_fixed<16,1> new_a_gf_up3_0_3 = act_inv_angular_0_0;
  ap_fixed<16,1> new_a_gf_up3_0_4 = act_inv_angular_0_1;
  ap_fixed<16,2> new_a_gf_up3_0_5 = act_inv_angular_0_2;
  ap_fixed<16,1> _tmp32 = (lever_0_0 * v_angular_0_1);
  ap_fixed<16,1> _tmp33 = (lever_0_1 * v_angular_0_0);
  ap_fixed<16,1> h_linear_1_0_0 = (_tmp32 - _tmp33);
  ap_fixed<16,1> _tmp34 = (lever_0_2 * v_angular_0_0);
  ap_fixed<16,1> _tmp35 = (lever_0_0 * v_angular_0_2);
  ap_fixed<16,1> h_linear_1_0_1 = (_tmp34 - _tmp35);
  ap_fixed<16,1> _tmp36 = (lever_0_0 * v_angular_0_1);
  ap_fixed<16,1> _tmp37 = (lever_0_1 * v_angular_0_0);
  ap_fixed<16,1> h_linear_1_0_2 = (_tmp36 - _tmp37);
  ap_fixed<16,1> h_linear_2_0_0 = (v_linear_0_0 - h_linear_1_0_0);
  ap_fixed<16,1> h_linear_2_0_1 = (v_linear_0_1 - h_linear_1_0_1);
  ap_fixed<16,1> h_linear_2_0_2 = (v_linear_0_2 - h_linear_1_0_2);
  ap_fixed<16,1> h_linear_0_0 = (masses_0 * h_linear_2_0_0);
  ap_fixed<16,1> h_linear_0_1 = (masses_0 * h_linear_2_0_1);
  ap_fixed<16,1> h_linear_0_2 = (masses_0 * h_linear_2_0_2);
  ap_fixed<16,1> r_2_ = (inertia_0_0_0 * v_angular_0_0);
  ap_fixed<16,1> r_3_ = (inertia_0_0_1 * v_angular_0_1);
  ap_fixed<16,1> r_4_ = (inertia_0_0_2 * v_angular_0_2);
  ap_fixed<16,1> r_5_ = (inertia_0_0_1 * v_angular_0_0);
  ap_fixed<16,1> r_6_ = (inertia_0_1_1 * v_angular_0_1);
  ap_fixed<16,1> r_7_ = (inertia_0_1_2 * v_angular_0_2);
  ap_fixed<16,1> r_8_ = (inertia_0_0_2 * v_angular_0_0);
  ap_fixed<16,1> r_9_ = (inertia_0_1_2 * v_angular_0_1);
  ap_fixed<16,1> r_10_ = (inertia_0_2_2 * v_angular_0_2);
  ap_fixed<16,1> rhsMult1_temp_0 = (r_2_ + r_3_);
  ap_fixed<16,1> rhsMult1_0 = (rhsMult1_temp_0 + r_4_);
  ap_fixed<16,1> rhsMult2_temp_0 = (r_5_ + r_6_);
  ap_fixed<16,1> rhsMult2_0 = (rhsMult2_temp_0 + r_7_);
  ap_fixed<16,1> rhsMult3_temp_0 = (r_8_ + r_9_);
  ap_fixed<16,1> rhsMult3_0 = (rhsMult3_temp_0 + r_10_);
  ap_fixed<16,1> rhsMult_0_0 = rhsMult1_0;
  ap_fixed<16,1> rhsMult_0_1 = rhsMult2_0;
  ap_fixed<16,1> rhsMult_0_2 = rhsMult3_0;
  ap_fixed<16,1> h_angular_first_0_0 = rhsMult_0_0;
  ap_fixed<16,1> h_angular_first_0_1 = rhsMult_0_1;
  ap_fixed<16,1> h_angular_first_0_2 = rhsMult_0_2;
  ap_fixed<16,1> _tmp38 = (lever_0_0 * h_linear_0_1);
  ap_fixed<16,1> _tmp39 = (lever_0_1 * h_linear_0_0);
  ap_fixed<16,1> h_angular_1_0_0 = (_tmp38 - _tmp39);
  ap_fixed<16,1> _tmp40 = (lever_0_2 * h_linear_0_0);
  ap_fixed<16,1> _tmp41 = (lever_0_0 * h_linear_0_2);
  ap_fixed<16,1> h_angular_1_0_1 = (_tmp40 - _tmp41);
  ap_fixed<16,1> _tmp42 = (lever_0_0 * h_linear_0_1);
  ap_fixed<16,1> _tmp43 = (lever_0_1 * h_linear_0_0);
  ap_fixed<16,1> h_angular_1_0_2 = (_tmp42 - _tmp43);
  ap_fixed<16,1> h_angular_0_0 = (h_angular_first_0_0 + h_angular_1_0_0);
  ap_fixed<16,1> h_angular_0_1 = (h_angular_first_0_1 + h_angular_1_0_1);
  ap_fixed<16,1> h_angular_0_2 = (h_angular_first_0_2 + h_angular_1_0_2);
  ap_fixed<16,1> _tmp44 = (lever_0_0 * act_inv_angular_0_1);
  ap_fixed<16,1> _tmp45 = (lever_0_1 * act_inv_angular_0_0);
  ap_fixed<16,1> f_linear_1_0_0 = (_tmp44 - _tmp45);
  ap_fixed<16,1> _tmp46 = (lever_0_2 * act_inv_angular_0_0);
  ap_fixed<16,1> _tmp47 = (lever_0_0 * act_inv_angular_0_2);
  ap_fixed<16,1> f_linear_1_0_1 = (_tmp46 - _tmp47);
  ap_fixed<16,1> _tmp48 = (lever_0_0 * act_inv_angular_0_1);
  ap_fixed<16,1> _tmp49 = (lever_0_1 * act_inv_angular_0_0);
  ap_fixed<16,1> f_linear_1_0_2 = (_tmp48 - _tmp49);
  ap_fixed<16,1> f_linear_2_0_0 = (act_inv_linear_0_0 - f_linear_1_0_0);
  ap_fixed<16,1> f_linear_2_0_1 = (act_inv_linear_0_1 - f_linear_1_0_1);
  ap_fixed<16,5> f_linear_2_0_2 = (act_inv_linear_0_2 - f_linear_1_0_2);
  ap_fixed<16,1> f_linear_3_0_0 = (masses_0 * f_linear_2_0_0);
  ap_fixed<16,1> f_linear_3_0_1 = (masses_0 * f_linear_2_0_1);
  ap_fixed<16,7> f_linear_3_0_2 = (masses_0 * f_linear_2_0_2);
  ap_fixed<16,1> r_11_ = (inertia_0_0_0 * act_inv_angular_0_0);
  ap_fixed<16,1> r_12_ = (inertia_0_0_1 * act_inv_angular_0_1);
  ap_fixed<16,1> r_13_ = (inertia_0_0_2 * act_inv_angular_0_2);
  ap_fixed<16,1> r_14_ = (inertia_0_0_1 * act_inv_angular_0_0);
  ap_fixed<16,1> r_15_ = (inertia_0_1_1 * act_inv_angular_0_1);
  ap_fixed<16,1> r_16_ = (inertia_0_1_2 * act_inv_angular_0_2);
  ap_fixed<16,1> r_17_ = (inertia_0_0_2 * act_inv_angular_0_0);
  ap_fixed<16,1> r_18_ = (inertia_0_1_2 * act_inv_angular_0_1);
  ap_fixed<16,1> r_19_ = (inertia_0_2_2 * act_inv_angular_0_2);
  ap_fixed<16,1> r_20_rhsMult1_temp_0 = (r_11_ + r_12_);
  ap_fixed<16,1> r_21_rhsMult1_0 = (r_20_rhsMult1_temp_0 + r_13_);
  ap_fixed<16,1> r_22_rhsMult2_temp_0 = (r_14_ + r_15_);
  ap_fixed<16,1> r_23_rhsMult2_0 = (r_22_rhsMult2_temp_0 + r_16_);
  ap_fixed<16,1> r_24_rhsMult3_temp_0 = (r_17_ + r_18_);
  ap_fixed<16,1> r_25_rhsMult3_0 = (r_24_rhsMult3_temp_0 + r_19_);
  ap_fixed<16,1> r_26_rhsMult_0_0 = r_21_rhsMult1_0;
  ap_fixed<16,1> r_26_rhsMult_0_1 = r_23_rhsMult2_0;
  ap_fixed<16,1> r_26_rhsMult_0_2 = r_25_rhsMult3_0;
  ap_fixed<16,1> f_angular_first_0_0 = r_26_rhsMult_0_0;
  ap_fixed<16,1> f_angular_first_0_1 = r_26_rhsMult_0_1;
  ap_fixed<16,1> f_angular_first_0_2 = r_26_rhsMult_0_2;
  ap_fixed<16,1> _tmp50 = (lever_0_0 * f_linear_3_0_1);
  ap_fixed<16,1> _tmp51 = (lever_0_1 * f_linear_3_0_0);
  ap_fixed<16,1> f_angular_1_0_0 = (_tmp50 - _tmp51);
  ap_fixed<16,1> _tmp52 = (lever_0_2 * f_linear_3_0_0);
  ap_fixed<16,1> _tmp53 = (lever_0_0 * f_linear_3_0_2);
  ap_fixed<16,1> f_angular_1_0_1 = (_tmp52 - _tmp53);
  ap_fixed<16,1> _tmp54 = (lever_0_0 * f_linear_3_0_1);
  ap_fixed<16,1> _tmp55 = (lever_0_1 * f_linear_3_0_0);
  ap_fixed<16,1> f_angular_1_0_2 = (_tmp54 - _tmp55);
  ap_fixed<16,1> f_angular_2_0_0 = (f_angular_first_0_0 + f_angular_1_0_0);
  ap_fixed<16,1> f_angular_2_0_1 = (f_angular_first_0_1 + f_angular_1_0_1);
  ap_fixed<16,1> f_angular_2_0_2 = (f_angular_first_0_2 + f_angular_1_0_2);
  ap_fixed<16,1> _tmp56 = (v_angular_0_0 * h_linear_0_1);
  ap_fixed<16,1> _tmp57 = (v_angular_0_1 * h_linear_0_0);
  ap_fixed<16,1> f_linear_4_temp_0_0 = (_tmp56 - _tmp57);
  ap_fixed<16,1> _tmp58 = (v_angular_0_2 * h_linear_0_0);
  ap_fixed<16,1> _tmp59 = (v_angular_0_0 * h_linear_0_2);
  ap_fixed<16,1> f_linear_4_temp_0_1 = (_tmp58 - _tmp59);
  ap_fixed<16,1> _tmp60 = (v_angular_0_0 * h_linear_0_1);
  ap_fixed<16,1> _tmp61 = (v_angular_0_1 * h_linear_0_0);
  ap_fixed<16,1> f_linear_4_temp_0_2 = (_tmp60 - _tmp61);
  ap_fixed<16,1> f_linear_4_0_0 = (f_linear_3_0_0 + f_linear_4_temp_0_0);
  ap_fixed<16,1> f_linear_4_0_1 = (f_linear_3_0_1 + f_linear_4_temp_0_1);
  ap_fixed<16,7> f_linear_4_0_2 = (f_linear_3_0_2 + f_linear_4_temp_0_2);
  ap_fixed<16,1> _tmp62 = (v_angular_0_0 * h_angular_first_0_1);
  ap_fixed<16,1> _tmp63 = (v_angular_0_1 * h_angular_first_0_0);
  ap_fixed<16,1> f_angular_3_temp_0_0 = (_tmp62 - _tmp63);
  ap_fixed<16,1> _tmp64 = (v_angular_0_2 * h_angular_first_0_0);
  ap_fixed<16,1> _tmp65 = (v_angular_0_0 * h_angular_first_0_2);
  ap_fixed<16,1> f_angular_3_temp_0_1 = (_tmp64 - _tmp65);
  ap_fixed<16,1> _tmp66 = (v_angular_0_0 * h_angular_first_0_1);
  ap_fixed<16,1> _tmp67 = (v_angular_0_1 * h_angular_first_0_0);
  ap_fixed<16,1> f_angular_3_temp_0_2 = (_tmp66 - _tmp67);
  ap_fixed<16,1> f_angular_3_0_0 = (f_angular_2_0_0 + f_angular_3_temp_0_0);
  ap_fixed<16,1> f_angular_3_0_1 = (f_angular_2_0_1 + f_angular_3_temp_0_1);
  ap_fixed<16,1> f_angular_3_0_2 = (f_angular_2_0_2 + f_angular_3_temp_0_2);
  ap_fixed<16,1> _tmp68 = (v_linear_0_0 * h_linear_0_1);
  ap_fixed<16,1> _tmp69 = (v_linear_0_1 * h_linear_0_0);
  ap_fixed<16,1> f_angular_4_temp_0_0 = (_tmp68 - _tmp69);
  ap_fixed<16,1> _tmp70 = (v_linear_0_2 * h_linear_0_0);
  ap_fixed<16,1> _tmp71 = (v_linear_0_0 * h_linear_0_2);
  ap_fixed<16,1> f_angular_4_temp_0_1 = (_tmp70 - _tmp71);
  ap_fixed<16,1> _tmp72 = (v_linear_0_0 * h_linear_0_1);
  ap_fixed<16,1> _tmp73 = (v_linear_0_1 * h_linear_0_0);
  ap_fixed<16,1> f_angular_4_temp_0_2 = (_tmp72 - _tmp73);
  ap_fixed<16,1> f_angular_4_0_0 = (f_angular_3_0_0 + f_angular_4_temp_0_0);
  ap_fixed<16,1> f_angular_4_0_1 = (f_angular_3_0_1 + f_angular_4_temp_0_1);
  ap_fixed<16,1> f_angular_4_0_2 = (f_angular_3_0_2 + f_angular_4_temp_0_2);
  ap_fixed<16,1> h_rnea_firstpass0_0 = h_linear_0_0;
  ap_fixed<16,1> h_rnea_firstpass0_1 = h_linear_0_1;
  ap_fixed<16,1> h_rnea_firstpass0_2 = h_linear_0_2;
  ap_fixed<16,1> h_rnea_firstpass0_3 = h_angular_0_0;
  ap_fixed<16,1> h_rnea_firstpass0_4 = h_angular_0_1;
  ap_fixed<16,1> h_rnea_firstpass0_5 = h_angular_0_2;
  ap_fixed<16,1> f_rnea_firstpass0_0 = f_linear_4_0_0;
  ap_fixed<16,1> f_rnea_firstpass0_1 = f_linear_4_0_1;
  ap_fixed<16,7> f_rnea_firstpass0_2 = f_linear_4_0_2;
  ap_fixed<16,1> f_rnea_firstpass0_3 = f_angular_4_0_0;
  ap_fixed<16,1> f_rnea_firstpass0_4 = f_angular_4_0_1;
  ap_fixed<16,1> f_rnea_firstpass0_5 = f_angular_4_0_2;
  ap_fixed<16,1> r_27_new_v_0_0 = v_linear_0_0;
  ap_fixed<16,1> r_27_new_v_0_1 = v_linear_0_1;
  ap_fixed<16,1> r_27_new_v_0_2 = v_linear_0_2;
  ap_fixed<16,1> r_27_new_v_0_3 = v_angular_0_0;
  ap_fixed<16,1> r_27_new_v_0_4 = v_angular_0_1;
  ap_fixed<16,2> r_27_new_v_0_5 = v_angular_0_2;
  ap_fixed<16,2> rotation_matrix_1_0_0 = qcos_1;
  ap_fixed<16,2> rotation_matrix_1_0_1 = -(qsin_1);
  ap_fixed<16,1> rotation_matrix_1_0_2 = 0.0;
  ap_fixed<16,2> rotation_matrix_1_1_0 = qsin_1;
  ap_fixed<16,2> rotation_matrix_1_1_1 = qcos_1;
  ap_fixed<16,1> rotation_matrix_1_1_2 = 0.0;
  ap_fixed<16,1> rotation_matrix_1_2_0 = 0.0;
  ap_fixed<16,1> rotation_matrix_1_2_1 = 0.0;
  ap_fixed<16,2> rotation_matrix_1_2_2 = 1.0;
  ap_fixed<16,2> limi_rotation_1_0_0 = rotation_matrix_1_0_0;
  ap_fixed<16,2> limi_rotation_1_0_1 = rotation_matrix_1_0_1;
  ap_fixed<16,1> limi_rotation_1_0_2 = 0.0;
  ap_fixed<16,1> limi_rotation_1_1_0 = 0.0;
  ap_fixed<16,1> limi_rotation_1_1_1 = 0.0;
  ap_fixed<16,2> limi_rotation_1_1_2 = 1.0;
  ap_fixed<16,2> limi_rotation_1_2_0 = -(rotation_matrix_1_1_0);
  ap_fixed<16,2> limi_rotation_1_2_1 = -(rotation_matrix_1_1_1);
  ap_fixed<16,1> limi_rotation_1_2_2 = 0.0;
  ap_fixed<16,1> v_linear_1_0 = data_v_1_0;
  ap_fixed<16,1> v_linear_1_1 = data_v_1_1;
  ap_fixed<16,1> v_linear_1_2 = data_v_1_2;
  ap_fixed<16,1> v_angular_1_0 = data_v_1_3;
  ap_fixed<16,1> v_angular_1_1 = data_v_1_4;
  ap_fixed<16,2> v_angular_1_2 = v_1;
  ap_fixed<16,1> parent_v_linear_1_0 = r_27_new_v_0_0;
  ap_fixed<16,1> parent_v_linear_1_1 = r_27_new_v_0_1;
  ap_fixed<16,1> parent_v_linear_1_2 = r_27_new_v_0_2;
  ap_fixed<16,1> parent_v_angular_1_0 = r_27_new_v_0_3;
  ap_fixed<16,1> parent_v_angular_1_1 = r_27_new_v_0_4;
  ap_fixed<16,2> parent_v_angular_1_2 = r_27_new_v_0_5;
  ap_fixed<16,1> parent_a_gf_linear_1_0 = new_a_gf_up3_0_0;
  ap_fixed<16,1> parent_a_gf_linear_1_1 = new_a_gf_up3_0_1;
  ap_fixed<16,5> parent_a_gf_linear_1_2 = new_a_gf_up3_0_2;
  ap_fixed<16,1> parent_a_gf_angular_1_0 = new_a_gf_up3_0_3;
  ap_fixed<16,1> parent_a_gf_angular_1_1 = new_a_gf_up3_0_4;
  ap_fixed<16,2> parent_a_gf_angular_1_2 = new_a_gf_up3_0_5;
  ap_fixed<16,1> _tmp74 = (limi_translation_1_0 * parent_v_angular_1_1);
  ap_fixed<16,1> _tmp75 = (limi_translation_1_1 * parent_v_angular_1_0);
  ap_fixed<16,1> actInv1_1_0 = (_tmp74 - _tmp75);
  ap_fixed<16,1> _tmp76 = (limi_translation_1_2 * parent_v_angular_1_0);
  ap_fixed<16,1> _tmp77 = (limi_translation_1_0 * parent_v_angular_1_2);
  ap_fixed<16,1> actInv1_1_1 = (_tmp76 - _tmp77);
  ap_fixed<16,1> _tmp78 = (limi_translation_1_0 * parent_v_angular_1_1);
  ap_fixed<16,1> _tmp79 = (limi_translation_1_1 * parent_v_angular_1_0);
  ap_fixed<16,1> actInv1_1_2 = (_tmp78 - _tmp79);
  ap_fixed<16,1> actInv2_1_0 = (parent_v_linear_1_0 - actInv1_1_0);
  ap_fixed<16,1> actInv2_1_1 = (parent_v_linear_1_1 - actInv1_1_1);
  ap_fixed<16,1> actInv2_1_2 = (parent_v_linear_1_2 - actInv1_1_2);
  ap_fixed<16,2> actInv3_1_0_0 = limi_rotation_1_0_0;
  ap_fixed<16,2> actInv3_1_1_0 = limi_rotation_1_0_1;
  ap_fixed<16,1> actInv3_1_2_0 = limi_rotation_1_0_2;
  ap_fixed<16,1> actInv3_1_0_1 = limi_rotation_1_1_0;
  ap_fixed<16,1> actInv3_1_1_1 = limi_rotation_1_1_1;
  ap_fixed<16,2> actInv3_1_2_1 = limi_rotation_1_1_2;
  ap_fixed<16,2> actInv3_1_0_2 = limi_rotation_1_2_0;
  ap_fixed<16,2> actInv3_1_1_2 = limi_rotation_1_2_1;
  ap_fixed<16,1> actInv3_1_2_2 = limi_rotation_1_2_2;
  ap_fixed<16,1> _tmp80 = (actInv3_1_0_0 * actInv2_1_0);
  ap_fixed<16,1> _tmp81 = (actInv3_1_0_1 * actInv2_1_1);
  ap_fixed<16,1> _tmp82 = (_tmp80 + _tmp81);
  ap_fixed<16,1> _tmp83 = (actInv3_1_0_2 * actInv2_1_2);
  ap_fixed<16,1> actInv4_1_0 = (_tmp82 + _tmp83);
  ap_fixed<16,1> _tmp84 = (actInv3_1_1_0 * actInv2_1_0);
  ap_fixed<16,1> _tmp85 = (actInv3_1_1_1 * actInv2_1_1);
  ap_fixed<16,1> _tmp86 = (_tmp84 + _tmp85);
  ap_fixed<16,1> _tmp87 = (actInv3_1_1_2 * actInv2_1_2);
  ap_fixed<16,1> actInv4_1_1 = (_tmp86 + _tmp87);
  ap_fixed<16,1> _tmp88 = (actInv3_1_2_0 * actInv2_1_0);
  ap_fixed<16,1> _tmp89 = (actInv3_1_2_1 * actInv2_1_1);
  ap_fixed<16,1> _tmp90 = (_tmp88 + _tmp89);
  ap_fixed<16,1> _tmp91 = (actInv3_1_2_2 * actInv2_1_2);
  ap_fixed<16,1> actInv4_1_2 = (_tmp90 + _tmp91);
  ap_fixed<16,1> act_inv_linear_1_0 = (v_linear_1_0 + actInv4_1_0);
  ap_fixed<16,1> act_inv_linear_1_1 = (v_linear_1_1 + actInv4_1_1);
  ap_fixed<16,1> act_inv_linear_1_2 = (v_linear_1_2 + actInv4_1_2);
  ap_fixed<16,1> _tmp92 = (actInv3_1_0_0 * parent_v_angular_1_0);
  ap_fixed<16,1> _tmp93 = (actInv3_1_0_1 * parent_v_angular_1_1);
  ap_fixed<16,1> _tmp94 = (_tmp92 + _tmp93);
  ap_fixed<16,2> _tmp95 = (actInv3_1_0_2 * parent_v_angular_1_2);
  ap_fixed<16,2> actInv5_1_0 = (_tmp94 + _tmp95);
  ap_fixed<16,1> _tmp96 = (actInv3_1_1_0 * parent_v_angular_1_0);
  ap_fixed<16,1> _tmp97 = (actInv3_1_1_1 * parent_v_angular_1_1);
  ap_fixed<16,1> _tmp98 = (_tmp96 + _tmp97);
  ap_fixed<16,2> _tmp99 = (actInv3_1_1_2 * parent_v_angular_1_2);
  ap_fixed<16,2> actInv5_1_1 = (_tmp98 + _tmp99);
  ap_fixed<16,1> _tmp100 = (actInv3_1_2_0 * parent_v_angular_1_0);
  ap_fixed<16,1> _tmp101 = (actInv3_1_2_1 * parent_v_angular_1_1);
  ap_fixed<16,1> _tmp102 = (_tmp100 + _tmp101);
  ap_fixed<16,1> _tmp103 = (actInv3_1_2_2 * parent_v_angular_1_2);
  ap_fixed<16,1> actInv5_1_2 = (_tmp102 + _tmp103);
  ap_fixed<16,2> act_inv_angular_1_0 = (v_angular_1_0 + actInv5_1_0);
  ap_fixed<16,2> act_inv_angular_1_1 = (v_angular_1_1 + actInv5_1_1);
  ap_fixed<16,2> act_inv_angular_1_2 = (v_angular_1_2 + actInv5_1_2);
  ap_fixed<16,2> minus_m_w_1 = -(v_1);
  ap_fixed<16,2> _tmp104 = -(minus_m_w_1);
  ap_fixed<16,1> alpha_cross1_linear_1 = (_tmp104 * act_inv_linear_1_1);
  ap_fixed<16,1> alpha_cross2_linear_1 = (minus_m_w_1 * act_inv_linear_1_0);
  ap_fixed<16,1> alpha_cross_linear_1_0 = alpha_cross1_linear_1;
  ap_fixed<16,1> alpha_cross_linear_1_1 = alpha_cross2_linear_1;
  ap_fixed<16,1> alpha_cross_linear_1_2 = 0.0;
  ap_fixed<16,2> _tmp105 = -(minus_m_w_1);
  ap_fixed<16,2> alpha_cross1_angular_1 = (_tmp105 * act_inv_angular_1_1);
  ap_fixed<16,2> alpha_cross2_angular_1 = (minus_m_w_1 * act_inv_angular_1_0);
  ap_fixed<16,2> alpha_cross_angular_1_0 = alpha_cross1_angular_1;
  ap_fixed<16,2> alpha_cross_angular_1_1 = alpha_cross2_angular_1;
  ap_fixed<16,1> alpha_cross_angular_1_2 = 0.0;
  ap_fixed<16,1> r_28_new_a_gf_1_0 = alpha_cross_linear_1_0;
  ap_fixed<16,1> r_28_new_a_gf_1_1 = alpha_cross_linear_1_1;
  ap_fixed<16,1> r_28_new_a_gf_1_2 = alpha_cross_linear_1_2;
  ap_fixed<16,2> r_28_new_a_gf_1_3 = alpha_cross_angular_1_0;
  ap_fixed<16,2> r_28_new_a_gf_1_4 = alpha_cross_angular_1_1;
  ap_fixed<16,1> r_28_new_a_gf_1_5 = alpha_cross_angular_1_2;
  ap_fixed<16,2> new_a_gf_up1_1 = (a_1 + r_28_new_a_gf_1_5);
  ap_fixed<16,1> new_a_gf2_linear_1_0 = r_28_new_a_gf_1_0;
  ap_fixed<16,1> new_a_gf2_linear_1_1 = r_28_new_a_gf_1_1;
  ap_fixed<16,1> new_a_gf2_linear_1_2 = r_28_new_a_gf_1_2;
  ap_fixed<16,2> new_a_gf2_angular_1_0 = r_28_new_a_gf_1_3;
  ap_fixed<16,2> new_a_gf2_angular_1_1 = r_28_new_a_gf_1_4;
  ap_fixed<16,2> new_a_gf2_angular_1_2 = new_a_gf_up1_1;
  ap_fixed<16,1> _tmp106 = (limi_translation_1_0 * parent_a_gf_angular_1_1);
  ap_fixed<16,1> _tmp107 = (limi_translation_1_1 * parent_a_gf_angular_1_0);
  ap_fixed<16,1> r_29_actInv1_1_0 = (_tmp106 - _tmp107);
  ap_fixed<16,1> _tmp108 = (limi_translation_1_2 * parent_a_gf_angular_1_0);
  ap_fixed<16,1> _tmp109 = (limi_translation_1_0 * parent_a_gf_angular_1_2);
  ap_fixed<16,1> r_29_actInv1_1_1 = (_tmp108 - _tmp109);
  ap_fixed<16,1> _tmp110 = (limi_translation_1_0 * parent_a_gf_angular_1_1);
  ap_fixed<16,1> _tmp111 = (limi_translation_1_1 * parent_a_gf_angular_1_0);
  ap_fixed<16,1> r_29_actInv1_1_2 = (_tmp110 - _tmp111);
  ap_fixed<16,1> r_30_actInv2_1_0 = (parent_a_gf_linear_1_0 - r_29_actInv1_1_0);
  ap_fixed<16,1> r_30_actInv2_1_1 = (parent_a_gf_linear_1_1 - r_29_actInv1_1_1);
  ap_fixed<16,5> r_30_actInv2_1_2 = (parent_a_gf_linear_1_2 - r_29_actInv1_1_2);
  ap_fixed<16,2> r_31_actInv3_1_0_0 = limi_rotation_1_0_0;
  ap_fixed<16,2> r_31_actInv3_1_1_0 = limi_rotation_1_0_1;
  ap_fixed<16,1> r_31_actInv3_1_2_0 = limi_rotation_1_0_2;
  ap_fixed<16,1> r_31_actInv3_1_0_1 = limi_rotation_1_1_0;
  ap_fixed<16,1> r_31_actInv3_1_1_1 = limi_rotation_1_1_1;
  ap_fixed<16,2> r_31_actInv3_1_2_1 = limi_rotation_1_1_2;
  ap_fixed<16,2> r_31_actInv3_1_0_2 = limi_rotation_1_2_0;
  ap_fixed<16,2> r_31_actInv3_1_1_2 = limi_rotation_1_2_1;
  ap_fixed<16,1> r_31_actInv3_1_2_2 = limi_rotation_1_2_2;
  ap_fixed<16,1> _tmp112 = (r_31_actInv3_1_0_0 * r_30_actInv2_1_0);
  ap_fixed<16,1> _tmp113 = (r_31_actInv3_1_0_1 * r_30_actInv2_1_1);
  ap_fixed<16,1> _tmp114 = (_tmp112 + _tmp113);
  ap_fixed<16,5> _tmp115 = (r_31_actInv3_1_0_2 * r_30_actInv2_1_2);
  ap_fixed<16,5> r_32_actInv4_1_0 = (_tmp114 + _tmp115);
  ap_fixed<16,1> _tmp116 = (r_31_actInv3_1_1_0 * r_30_actInv2_1_0);
  ap_fixed<16,1> _tmp117 = (r_31_actInv3_1_1_1 * r_30_actInv2_1_1);
  ap_fixed<16,1> _tmp118 = (_tmp116 + _tmp117);
  ap_fixed<16,5> _tmp119 = (r_31_actInv3_1_1_2 * r_30_actInv2_1_2);
  ap_fixed<16,5> r_32_actInv4_1_1 = (_tmp118 + _tmp119);
  ap_fixed<16,1> _tmp120 = (r_31_actInv3_1_2_0 * r_30_actInv2_1_0);
  ap_fixed<16,1> _tmp121 = (r_31_actInv3_1_2_1 * r_30_actInv2_1_1);
  ap_fixed<16,1> _tmp122 = (_tmp120 + _tmp121);
  ap_fixed<16,1> _tmp123 = (r_31_actInv3_1_2_2 * r_30_actInv2_1_2);
  ap_fixed<16,1> r_32_actInv4_1_2 = (_tmp122 + _tmp123);
  ap_fixed<16,5> r_33_act_inv_linear_1_0 = (new_a_gf2_linear_1_0 + r_32_actInv4_1_0);
  ap_fixed<16,5> r_33_act_inv_linear_1_1 = (new_a_gf2_linear_1_1 + r_32_actInv4_1_1);
  ap_fixed<16,1> r_33_act_inv_linear_1_2 = (new_a_gf2_linear_1_2 + r_32_actInv4_1_2);
  ap_fixed<16,1> _tmp124 = (r_31_actInv3_1_0_0 * parent_a_gf_angular_1_0);
  ap_fixed<16,1> _tmp125 = (r_31_actInv3_1_0_1 * parent_a_gf_angular_1_1);
  ap_fixed<16,1> _tmp126 = (_tmp124 + _tmp125);
  ap_fixed<16,2> _tmp127 = (r_31_actInv3_1_0_2 * parent_a_gf_angular_1_2);
  ap_fixed<16,2> r_34_actInv5_1_0 = (_tmp126 + _tmp127);
  ap_fixed<16,1> _tmp128 = (r_31_actInv3_1_1_0 * parent_a_gf_angular_1_0);
  ap_fixed<16,1> _tmp129 = (r_31_actInv3_1_1_1 * parent_a_gf_angular_1_1);
  ap_fixed<16,1> _tmp130 = (_tmp128 + _tmp129);
  ap_fixed<16,2> _tmp131 = (r_31_actInv3_1_1_2 * parent_a_gf_angular_1_2);
  ap_fixed<16,2> r_34_actInv5_1_1 = (_tmp130 + _tmp131);
  ap_fixed<16,1> _tmp132 = (r_31_actInv3_1_2_0 * parent_a_gf_angular_1_0);
  ap_fixed<16,1> _tmp133 = (r_31_actInv3_1_2_1 * parent_a_gf_angular_1_1);
  ap_fixed<16,1> _tmp134 = (_tmp132 + _tmp133);
  ap_fixed<16,1> _tmp135 = (r_31_actInv3_1_2_2 * parent_a_gf_angular_1_2);
  ap_fixed<16,1> r_34_actInv5_1_2 = (_tmp134 + _tmp135);
  ap_fixed<16,3> r_35_act_inv_angular_1_0 = (new_a_gf2_angular_1_0 + r_34_actInv5_1_0);
  ap_fixed<16,3> r_35_act_inv_angular_1_1 = (new_a_gf2_angular_1_1 + r_34_actInv5_1_1);
  ap_fixed<16,2> r_35_act_inv_angular_1_2 = (new_a_gf2_angular_1_2 + r_34_actInv5_1_2);
  ap_fixed<16,5> new_a_gf_up3_1_0 = r_33_act_inv_linear_1_0;
  ap_fixed<16,5> new_a_gf_up3_1_1 = r_33_act_inv_linear_1_1;
  ap_fixed<16,1> new_a_gf_up3_1_2 = r_33_act_inv_linear_1_2;
  ap_fixed<16,3> new_a_gf_up3_1_3 = r_35_act_inv_angular_1_0;
  ap_fixed<16,3> new_a_gf_up3_1_4 = r_35_act_inv_angular_1_1;
  ap_fixed<16,2> new_a_gf_up3_1_5 = r_35_act_inv_angular_1_2;
  ap_fixed<16,1> _tmp136 = (lever_1_0 * act_inv_angular_1_1);
  ap_fixed<16,1> _tmp137 = (lever_1_1 * act_inv_angular_1_0);
  ap_fixed<16,1> h_linear_1_1_0 = (_tmp136 - _tmp137);
  ap_fixed<16,1> _tmp138 = (lever_1_2 * act_inv_angular_1_0);
  ap_fixed<16,1> _tmp139 = (lever_1_0 * act_inv_angular_1_2);
  ap_fixed<16,1> h_linear_1_1_1 = (_tmp138 - _tmp139);
  ap_fixed<16,1> _tmp140 = (lever_1_0 * act_inv_angular_1_1);
  ap_fixed<16,1> _tmp141 = (lever_1_1 * act_inv_angular_1_0);
  ap_fixed<16,1> h_linear_1_1_2 = (_tmp140 - _tmp141);
  ap_fixed<16,1> h_linear_2_1_0 = (act_inv_linear_1_0 - h_linear_1_1_0);
  ap_fixed<16,1> h_linear_2_1_1 = (act_inv_linear_1_1 - h_linear_1_1_1);
  ap_fixed<16,1> h_linear_2_1_2 = (act_inv_linear_1_2 - h_linear_1_1_2);
  ap_fixed<16,1> h_linear_1_0 = (masses_1 * h_linear_2_1_0);
  ap_fixed<16,1> h_linear_1_1 = (masses_1 * h_linear_2_1_1);
  ap_fixed<16,1> h_linear_1_2 = (masses_1 * h_linear_2_1_2);
  ap_fixed<16,1> r_36_ = (inertia_1_0_0 * act_inv_angular_1_0);
  ap_fixed<16,1> r_37_ = (inertia_1_0_1 * act_inv_angular_1_1);
  ap_fixed<16,1> r_38_ = (inertia_1_0_2 * act_inv_angular_1_2);
  ap_fixed<16,1> r_39_ = (inertia_1_0_1 * act_inv_angular_1_0);
  ap_fixed<16,1> r_40_ = (inertia_1_1_1 * act_inv_angular_1_1);
  ap_fixed<16,1> r_41_ = (inertia_1_1_2 * act_inv_angular_1_2);
  ap_fixed<16,1> r_42_ = (inertia_1_0_2 * act_inv_angular_1_0);
  ap_fixed<16,1> r_43_ = (inertia_1_1_2 * act_inv_angular_1_1);
  ap_fixed<16,1> r_44_ = (inertia_1_2_2 * act_inv_angular_1_2);
  ap_fixed<16,1> rhsMult1_temp_1 = (r_36_ + r_37_);
  ap_fixed<16,1> rhsMult1_1 = (rhsMult1_temp_1 + r_38_);
  ap_fixed<16,1> rhsMult2_temp_1 = (r_39_ + r_40_);
  ap_fixed<16,1> rhsMult2_1 = (rhsMult2_temp_1 + r_41_);
  ap_fixed<16,1> rhsMult3_temp_1 = (r_42_ + r_43_);
  ap_fixed<16,1> rhsMult3_1 = (rhsMult3_temp_1 + r_44_);
  ap_fixed<16,1> rhsMult_1_0 = rhsMult1_1;
  ap_fixed<16,1> rhsMult_1_1 = rhsMult2_1;
  ap_fixed<16,1> rhsMult_1_2 = rhsMult3_1;
  ap_fixed<16,1> h_angular_first_1_0 = rhsMult_1_0;
  ap_fixed<16,1> h_angular_first_1_1 = rhsMult_1_1;
  ap_fixed<16,1> h_angular_first_1_2 = rhsMult_1_2;
  ap_fixed<16,1> _tmp142 = (lever_1_0 * h_linear_1_1);
  ap_fixed<16,1> _tmp143 = (lever_1_1 * h_linear_1_0);
  ap_fixed<16,1> h_angular_1_1_0 = (_tmp142 - _tmp143);
  ap_fixed<16,1> _tmp144 = (lever_1_2 * h_linear_1_0);
  ap_fixed<16,1> _tmp145 = (lever_1_0 * h_linear_1_2);
  ap_fixed<16,1> h_angular_1_1_1 = (_tmp144 - _tmp145);
  ap_fixed<16,1> _tmp146 = (lever_1_0 * h_linear_1_1);
  ap_fixed<16,1> _tmp147 = (lever_1_1 * h_linear_1_0);
  ap_fixed<16,1> h_angular_1_1_2 = (_tmp146 - _tmp147);
  ap_fixed<16,1> h_angular_1_0 = (h_angular_first_1_0 + h_angular_1_1_0);
  ap_fixed<16,1> h_angular_1_1 = (h_angular_first_1_1 + h_angular_1_1_1);
  ap_fixed<16,1> h_angular_1_2 = (h_angular_first_1_2 + h_angular_1_1_2);
  ap_fixed<16,1> _tmp148 = (lever_1_0 * r_35_act_inv_angular_1_1);
  ap_fixed<16,1> _tmp149 = (lever_1_1 * r_35_act_inv_angular_1_0);
  ap_fixed<16,1> f_linear_1_1_0 = (_tmp148 - _tmp149);
  ap_fixed<16,1> _tmp150 = (lever_1_2 * r_35_act_inv_angular_1_0);
  ap_fixed<16,1> _tmp151 = (lever_1_0 * r_35_act_inv_angular_1_2);
  ap_fixed<16,1> f_linear_1_1_1 = (_tmp150 - _tmp151);
  ap_fixed<16,1> _tmp152 = (lever_1_0 * r_35_act_inv_angular_1_1);
  ap_fixed<16,1> _tmp153 = (lever_1_1 * r_35_act_inv_angular_1_0);
  ap_fixed<16,1> f_linear_1_1_2 = (_tmp152 - _tmp153);
  ap_fixed<16,5> f_linear_2_1_0 = (r_33_act_inv_linear_1_0 - f_linear_1_1_0);
  ap_fixed<16,5> f_linear_2_1_1 = (r_33_act_inv_linear_1_1 - f_linear_1_1_1);
  ap_fixed<16,1> f_linear_2_1_2 = (r_33_act_inv_linear_1_2 - f_linear_1_1_2);
  ap_fixed<16,4> f_linear_3_1_0 = (masses_1 * f_linear_2_1_0);
  ap_fixed<16,4> f_linear_3_1_1 = (masses_1 * f_linear_2_1_1);
  ap_fixed<16,1> f_linear_3_1_2 = (masses_1 * f_linear_2_1_2);
  ap_fixed<16,1> r_45_ = (inertia_1_0_0 * r_35_act_inv_angular_1_0);
  ap_fixed<16,1> r_46_ = (inertia_1_0_1 * r_35_act_inv_angular_1_1);
  ap_fixed<16,1> r_47_ = (inertia_1_0_2 * r_35_act_inv_angular_1_2);
  ap_fixed<16,1> r_48_ = (inertia_1_0_1 * r_35_act_inv_angular_1_0);
  ap_fixed<16,1> r_49_ = (inertia_1_1_1 * r_35_act_inv_angular_1_1);
  ap_fixed<16,1> r_50_ = (inertia_1_1_2 * r_35_act_inv_angular_1_2);
  ap_fixed<16,1> r_51_ = (inertia_1_0_2 * r_35_act_inv_angular_1_0);
  ap_fixed<16,1> r_52_ = (inertia_1_1_2 * r_35_act_inv_angular_1_1);
  ap_fixed<16,1> r_53_ = (inertia_1_2_2 * r_35_act_inv_angular_1_2);
  ap_fixed<16,1> r_54_rhsMult1_temp_1 = (r_45_ + r_46_);
  ap_fixed<16,1> r_55_rhsMult1_1 = (r_54_rhsMult1_temp_1 + r_47_);
  ap_fixed<16,1> r_56_rhsMult2_temp_1 = (r_48_ + r_49_);
  ap_fixed<16,1> r_57_rhsMult2_1 = (r_56_rhsMult2_temp_1 + r_50_);
  ap_fixed<16,1> r_58_rhsMult3_temp_1 = (r_51_ + r_52_);
  ap_fixed<16,1> r_59_rhsMult3_1 = (r_58_rhsMult3_temp_1 + r_53_);
  ap_fixed<16,1> r_60_rhsMult_1_0 = r_55_rhsMult1_1;
  ap_fixed<16,1> r_60_rhsMult_1_1 = r_57_rhsMult2_1;
  ap_fixed<16,1> r_60_rhsMult_1_2 = r_59_rhsMult3_1;
  ap_fixed<16,1> f_angular_first_1_0 = r_60_rhsMult_1_0;
  ap_fixed<16,1> f_angular_first_1_1 = r_60_rhsMult_1_1;
  ap_fixed<16,1> f_angular_first_1_2 = r_60_rhsMult_1_2;
  ap_fixed<16,1> _tmp154 = (lever_1_0 * f_linear_3_1_1);
  ap_fixed<16,1> _tmp155 = (lever_1_1 * f_linear_3_1_0);
  ap_fixed<16,1> f_angular_1_1_0 = (_tmp154 - _tmp155);
  ap_fixed<16,1> _tmp156 = (lever_1_2 * f_linear_3_1_0);
  ap_fixed<16,1> _tmp157 = (lever_1_0 * f_linear_3_1_2);
  ap_fixed<16,1> f_angular_1_1_1 = (_tmp156 - _tmp157);
  ap_fixed<16,1> _tmp158 = (lever_1_0 * f_linear_3_1_1);
  ap_fixed<16,1> _tmp159 = (lever_1_1 * f_linear_3_1_0);
  ap_fixed<16,1> f_angular_1_1_2 = (_tmp158 - _tmp159);
  ap_fixed<16,1> f_angular_2_1_0 = (f_angular_first_1_0 + f_angular_1_1_0);
  ap_fixed<16,1> f_angular_2_1_1 = (f_angular_first_1_1 + f_angular_1_1_1);
  ap_fixed<16,1> f_angular_2_1_2 = (f_angular_first_1_2 + f_angular_1_1_2);
  ap_fixed<16,1> _tmp160 = (act_inv_angular_1_0 * h_linear_1_1);
  ap_fixed<16,1> _tmp161 = (act_inv_angular_1_1 * h_linear_1_0);
  ap_fixed<16,1> f_linear_4_temp_1_0 = (_tmp160 - _tmp161);
  ap_fixed<16,1> _tmp162 = (act_inv_angular_1_2 * h_linear_1_0);
  ap_fixed<16,1> _tmp163 = (act_inv_angular_1_0 * h_linear_1_2);
  ap_fixed<16,1> f_linear_4_temp_1_1 = (_tmp162 - _tmp163);
  ap_fixed<16,1> _tmp164 = (act_inv_angular_1_0 * h_linear_1_1);
  ap_fixed<16,1> _tmp165 = (act_inv_angular_1_1 * h_linear_1_0);
  ap_fixed<16,1> f_linear_4_temp_1_2 = (_tmp164 - _tmp165);
  ap_fixed<16,4> f_linear_4_1_0 = (f_linear_3_1_0 + f_linear_4_temp_1_0);
  ap_fixed<16,4> f_linear_4_1_1 = (f_linear_3_1_1 + f_linear_4_temp_1_1);
  ap_fixed<16,1> f_linear_4_1_2 = (f_linear_3_1_2 + f_linear_4_temp_1_2);
  ap_fixed<16,1> _tmp166 = (act_inv_angular_1_0 * h_angular_first_1_1);
  ap_fixed<16,1> _tmp167 = (act_inv_angular_1_1 * h_angular_first_1_0);
  ap_fixed<16,1> f_angular_3_temp_1_0 = (_tmp166 - _tmp167);
  ap_fixed<16,1> _tmp168 = (act_inv_angular_1_2 * h_angular_first_1_0);
  ap_fixed<16,1> _tmp169 = (act_inv_angular_1_0 * h_angular_first_1_2);
  ap_fixed<16,1> f_angular_3_temp_1_1 = (_tmp168 - _tmp169);
  ap_fixed<16,1> _tmp170 = (act_inv_angular_1_0 * h_angular_first_1_1);
  ap_fixed<16,1> _tmp171 = (act_inv_angular_1_1 * h_angular_first_1_0);
  ap_fixed<16,1> f_angular_3_temp_1_2 = (_tmp170 - _tmp171);
  ap_fixed<16,1> f_angular_3_1_0 = (f_angular_2_1_0 + f_angular_3_temp_1_0);
  ap_fixed<16,1> f_angular_3_1_1 = (f_angular_2_1_1 + f_angular_3_temp_1_1);
  ap_fixed<16,1> f_angular_3_1_2 = (f_angular_2_1_2 + f_angular_3_temp_1_2);
  ap_fixed<16,1> _tmp172 = (act_inv_linear_1_0 * h_linear_1_1);
  ap_fixed<16,1> _tmp173 = (act_inv_linear_1_1 * h_linear_1_0);
  ap_fixed<16,1> f_angular_4_temp_1_0 = (_tmp172 - _tmp173);
  ap_fixed<16,1> _tmp174 = (act_inv_linear_1_2 * h_linear_1_0);
  ap_fixed<16,1> _tmp175 = (act_inv_linear_1_0 * h_linear_1_2);
  ap_fixed<16,1> f_angular_4_temp_1_1 = (_tmp174 - _tmp175);
  ap_fixed<16,1> _tmp176 = (act_inv_linear_1_0 * h_linear_1_1);
  ap_fixed<16,1> _tmp177 = (act_inv_linear_1_1 * h_linear_1_0);
  ap_fixed<16,1> f_angular_4_temp_1_2 = (_tmp176 - _tmp177);
  ap_fixed<16,1> f_angular_4_1_0 = (f_angular_3_1_0 + f_angular_4_temp_1_0);
  ap_fixed<16,1> f_angular_4_1_1 = (f_angular_3_1_1 + f_angular_4_temp_1_1);
  ap_fixed<16,1> f_angular_4_1_2 = (f_angular_3_1_2 + f_angular_4_temp_1_2);
  ap_fixed<16,1> h_rnea_firstpass1_0 = h_linear_1_0;
  ap_fixed<16,1> h_rnea_firstpass1_1 = h_linear_1_1;
  ap_fixed<16,1> h_rnea_firstpass1_2 = h_linear_1_2;
  ap_fixed<16,1> h_rnea_firstpass1_3 = h_angular_1_0;
  ap_fixed<16,1> h_rnea_firstpass1_4 = h_angular_1_1;
  ap_fixed<16,1> h_rnea_firstpass1_5 = h_angular_1_2;
  ap_fixed<16,4> f_rnea_firstpass1_0 = f_linear_4_1_0;
  ap_fixed<16,4> f_rnea_firstpass1_1 = f_linear_4_1_1;
  ap_fixed<16,1> f_rnea_firstpass1_2 = f_linear_4_1_2;
  ap_fixed<16,1> f_rnea_firstpass1_3 = f_angular_4_1_0;
  ap_fixed<16,1> f_rnea_firstpass1_4 = f_angular_4_1_1;
  ap_fixed<16,1> f_rnea_firstpass1_5 = f_angular_4_1_2;
  ap_fixed<16,1> r_61_new_v_1_0 = act_inv_linear_1_0;
  ap_fixed<16,1> r_61_new_v_1_1 = act_inv_linear_1_1;
  ap_fixed<16,1> r_61_new_v_1_2 = act_inv_linear_1_2;
  ap_fixed<16,2> r_61_new_v_1_3 = act_inv_angular_1_0;
  ap_fixed<16,2> r_61_new_v_1_4 = act_inv_angular_1_1;
  ap_fixed<16,2> r_61_new_v_1_5 = act_inv_angular_1_2;
  ap_fixed<16,2> rotation_matrix_2_0_0 = qcos_2;
  ap_fixed<16,2> rotation_matrix_2_0_1 = -(qsin_2);
  ap_fixed<16,1> rotation_matrix_2_0_2 = 0.0;
  ap_fixed<16,2> rotation_matrix_2_1_0 = qsin_2;
  ap_fixed<16,2> rotation_matrix_2_1_1 = qcos_2;
  ap_fixed<16,1> rotation_matrix_2_1_2 = 0.0;
  ap_fixed<16,1> rotation_matrix_2_2_0 = 0.0;
  ap_fixed<16,1> rotation_matrix_2_2_1 = 0.0;
  ap_fixed<16,2> rotation_matrix_2_2_2 = 1.0;
  ap_fixed<16,2> limi_rotation_2_0_0 = rotation_matrix_2_0_0;
  ap_fixed<16,2> limi_rotation_2_0_1 = rotation_matrix_2_0_1;
  ap_fixed<16,1> limi_rotation_2_0_2 = 0.0;
  ap_fixed<16,1> limi_rotation_2_1_0 = 0.0;
  ap_fixed<16,1> limi_rotation_2_1_1 = 0.0;
  ap_fixed<16,2> limi_rotation_2_1_2 = -1.0;
  ap_fixed<16,2> limi_rotation_2_2_0 = rotation_matrix_2_1_0;
  ap_fixed<16,2> limi_rotation_2_2_1 = rotation_matrix_2_1_1;
  ap_fixed<16,1> limi_rotation_2_2_2 = 0.0;
  ap_fixed<16,1> v_linear_2_0 = data_v_2_0;
  ap_fixed<16,1> v_linear_2_1 = data_v_2_1;
  ap_fixed<16,1> v_linear_2_2 = data_v_2_2;
  ap_fixed<16,1> v_angular_2_0 = data_v_2_3;
  ap_fixed<16,1> v_angular_2_1 = data_v_2_4;
  ap_fixed<16,2> v_angular_2_2 = v_2;
  ap_fixed<16,1> parent_v_linear_2_0 = r_61_new_v_1_0;
  ap_fixed<16,1> parent_v_linear_2_1 = r_61_new_v_1_1;
  ap_fixed<16,1> parent_v_linear_2_2 = r_61_new_v_1_2;
  ap_fixed<16,2> parent_v_angular_2_0 = r_61_new_v_1_3;
  ap_fixed<16,2> parent_v_angular_2_1 = r_61_new_v_1_4;
  ap_fixed<16,2> parent_v_angular_2_2 = r_61_new_v_1_5;
  ap_fixed<16,5> parent_a_gf_linear_2_0 = new_a_gf_up3_1_0;
  ap_fixed<16,5> parent_a_gf_linear_2_1 = new_a_gf_up3_1_1;
  ap_fixed<16,1> parent_a_gf_linear_2_2 = new_a_gf_up3_1_2;
  ap_fixed<16,3> parent_a_gf_angular_2_0 = new_a_gf_up3_1_3;
  ap_fixed<16,3> parent_a_gf_angular_2_1 = new_a_gf_up3_1_4;
  ap_fixed<16,2> parent_a_gf_angular_2_2 = new_a_gf_up3_1_5;
  ap_fixed<16,1> _tmp178 = (limi_translation_2_0 * parent_v_angular_2_1);
  ap_fixed<16,1> _tmp179 = (limi_translation_2_1 * parent_v_angular_2_0);
  ap_fixed<16,1> actInv1_2_0 = (_tmp178 - _tmp179);
  ap_fixed<16,1> _tmp180 = (limi_translation_2_2 * parent_v_angular_2_0);
  ap_fixed<16,1> _tmp181 = (limi_translation_2_0 * parent_v_angular_2_2);
  ap_fixed<16,1> actInv1_2_1 = (_tmp180 - _tmp181);
  ap_fixed<16,1> _tmp182 = (limi_translation_2_0 * parent_v_angular_2_1);
  ap_fixed<16,1> _tmp183 = (limi_translation_2_1 * parent_v_angular_2_0);
  ap_fixed<16,1> actInv1_2_2 = (_tmp182 - _tmp183);
  ap_fixed<16,1> actInv2_2_0 = (parent_v_linear_2_0 - actInv1_2_0);
  ap_fixed<16,1> actInv2_2_1 = (parent_v_linear_2_1 - actInv1_2_1);
  ap_fixed<16,1> actInv2_2_2 = (parent_v_linear_2_2 - actInv1_2_2);
  ap_fixed<16,2> actInv3_2_0_0 = limi_rotation_2_0_0;
  ap_fixed<16,2> actInv3_2_1_0 = limi_rotation_2_0_1;
  ap_fixed<16,1> actInv3_2_2_0 = limi_rotation_2_0_2;
  ap_fixed<16,1> actInv3_2_0_1 = limi_rotation_2_1_0;
  ap_fixed<16,1> actInv3_2_1_1 = limi_rotation_2_1_1;
  ap_fixed<16,2> actInv3_2_2_1 = limi_rotation_2_1_2;
  ap_fixed<16,2> actInv3_2_0_2 = limi_rotation_2_2_0;
  ap_fixed<16,2> actInv3_2_1_2 = limi_rotation_2_2_1;
  ap_fixed<16,1> actInv3_2_2_2 = limi_rotation_2_2_2;
  ap_fixed<16,1> _tmp184 = (actInv3_2_0_0 * actInv2_2_0);
  ap_fixed<16,1> _tmp185 = (actInv3_2_0_1 * actInv2_2_1);
  ap_fixed<16,1> _tmp186 = (_tmp184 + _tmp185);
  ap_fixed<16,1> _tmp187 = (actInv3_2_0_2 * actInv2_2_2);
  ap_fixed<16,1> actInv4_2_0 = (_tmp186 + _tmp187);
  ap_fixed<16,1> _tmp188 = (actInv3_2_1_0 * actInv2_2_0);
  ap_fixed<16,1> _tmp189 = (actInv3_2_1_1 * actInv2_2_1);
  ap_fixed<16,1> _tmp190 = (_tmp188 + _tmp189);
  ap_fixed<16,1> _tmp191 = (actInv3_2_1_2 * actInv2_2_2);
  ap_fixed<16,1> actInv4_2_1 = (_tmp190 + _tmp191);
  ap_fixed<16,1> _tmp192 = (actInv3_2_2_0 * actInv2_2_0);
  ap_fixed<16,1> _tmp193 = (actInv3_2_2_1 * actInv2_2_1);
  ap_fixed<16,1> _tmp194 = (_tmp192 + _tmp193);
  ap_fixed<16,1> _tmp195 = (actInv3_2_2_2 * actInv2_2_2);
  ap_fixed<16,1> actInv4_2_2 = (_tmp194 + _tmp195);
  ap_fixed<16,1> act_inv_linear_2_0 = (v_linear_2_0 + actInv4_2_0);
  ap_fixed<16,1> act_inv_linear_2_1 = (v_linear_2_1 + actInv4_2_1);
  ap_fixed<16,1> act_inv_linear_2_2 = (v_linear_2_2 + actInv4_2_2);
  ap_fixed<16,2> _tmp196 = (actInv3_2_0_0 * parent_v_angular_2_0);
  ap_fixed<16,1> _tmp197 = (actInv3_2_0_1 * parent_v_angular_2_1);
  ap_fixed<16,2> _tmp198 = (_tmp196 + _tmp197);
  ap_fixed<16,2> _tmp199 = (actInv3_2_0_2 * parent_v_angular_2_2);
  ap_fixed<16,3> actInv5_2_0 = (_tmp198 + _tmp199);
  ap_fixed<16,2> _tmp200 = (actInv3_2_1_0 * parent_v_angular_2_0);
  ap_fixed<16,1> _tmp201 = (actInv3_2_1_1 * parent_v_angular_2_1);
  ap_fixed<16,2> _tmp202 = (_tmp200 + _tmp201);
  ap_fixed<16,2> _tmp203 = (actInv3_2_1_2 * parent_v_angular_2_2);
  ap_fixed<16,3> actInv5_2_1 = (_tmp202 + _tmp203);
  ap_fixed<16,1> _tmp204 = (actInv3_2_2_0 * parent_v_angular_2_0);
  ap_fixed<16,2> _tmp205 = (actInv3_2_2_1 * parent_v_angular_2_1);
  ap_fixed<16,2> _tmp206 = (_tmp204 + _tmp205);
  ap_fixed<16,1> _tmp207 = (actInv3_2_2_2 * parent_v_angular_2_2);
  ap_fixed<16,2> actInv5_2_2 = (_tmp206 + _tmp207);
  ap_fixed<16,3> act_inv_angular_2_0 = (v_angular_2_0 + actInv5_2_0);
  ap_fixed<16,3> act_inv_angular_2_1 = (v_angular_2_1 + actInv5_2_1);
  ap_fixed<16,3> act_inv_angular_2_2 = (v_angular_2_2 + actInv5_2_2);
  ap_fixed<16,2> minus_m_w_2 = -(v_2);
  ap_fixed<16,2> _tmp208 = -(minus_m_w_2);
  ap_fixed<16,1> alpha_cross1_linear_2 = (_tmp208 * act_inv_linear_2_1);
  ap_fixed<16,1> alpha_cross2_linear_2 = (minus_m_w_2 * act_inv_linear_2_0);
  ap_fixed<16,1> alpha_cross_linear_2_0 = alpha_cross1_linear_2;
  ap_fixed<16,1> alpha_cross_linear_2_1 = alpha_cross2_linear_2;
  ap_fixed<16,1> alpha_cross_linear_2_2 = 0.0;
  ap_fixed<16,2> _tmp209 = -(minus_m_w_2);
  ap_fixed<16,3> alpha_cross1_angular_2 = (_tmp209 * act_inv_angular_2_1);
  ap_fixed<16,3> alpha_cross2_angular_2 = (minus_m_w_2 * act_inv_angular_2_0);
  ap_fixed<16,3> alpha_cross_angular_2_0 = alpha_cross1_angular_2;
  ap_fixed<16,3> alpha_cross_angular_2_1 = alpha_cross2_angular_2;
  ap_fixed<16,1> alpha_cross_angular_2_2 = 0.0;
  ap_fixed<16,1> r_62_new_a_gf_2_0 = alpha_cross_linear_2_0;
  ap_fixed<16,1> r_62_new_a_gf_2_1 = alpha_cross_linear_2_1;
  ap_fixed<16,1> r_62_new_a_gf_2_2 = alpha_cross_linear_2_2;
  ap_fixed<16,3> r_62_new_a_gf_2_3 = alpha_cross_angular_2_0;
  ap_fixed<16,3> r_62_new_a_gf_2_4 = alpha_cross_angular_2_1;
  ap_fixed<16,1> r_62_new_a_gf_2_5 = alpha_cross_angular_2_2;
  ap_fixed<16,2> new_a_gf_up1_2 = (a_2 + r_62_new_a_gf_2_5);
  ap_fixed<16,1> new_a_gf2_linear_2_0 = r_62_new_a_gf_2_0;
  ap_fixed<16,1> new_a_gf2_linear_2_1 = r_62_new_a_gf_2_1;
  ap_fixed<16,1> new_a_gf2_linear_2_2 = r_62_new_a_gf_2_2;
  ap_fixed<16,3> new_a_gf2_angular_2_0 = r_62_new_a_gf_2_3;
  ap_fixed<16,3> new_a_gf2_angular_2_1 = r_62_new_a_gf_2_4;
  ap_fixed<16,2> new_a_gf2_angular_2_2 = new_a_gf_up1_2;
  ap_fixed<16,1> _tmp210 = (limi_translation_2_0 * parent_a_gf_angular_2_1);
  ap_fixed<16,1> _tmp211 = (limi_translation_2_1 * parent_a_gf_angular_2_0);
  ap_fixed<16,1> r_63_actInv1_2_0 = (_tmp210 - _tmp211);
  ap_fixed<16,1> _tmp212 = (limi_translation_2_2 * parent_a_gf_angular_2_0);
  ap_fixed<16,1> _tmp213 = (limi_translation_2_0 * parent_a_gf_angular_2_2);
  ap_fixed<16,1> r_63_actInv1_2_1 = (_tmp212 - _tmp213);
  ap_fixed<16,1> _tmp214 = (limi_translation_2_0 * parent_a_gf_angular_2_1);
  ap_fixed<16,1> _tmp215 = (limi_translation_2_1 * parent_a_gf_angular_2_0);
  ap_fixed<16,1> r_63_actInv1_2_2 = (_tmp214 - _tmp215);
  ap_fixed<16,5> r_64_actInv2_2_0 = (parent_a_gf_linear_2_0 - r_63_actInv1_2_0);
  ap_fixed<16,5> r_64_actInv2_2_1 = (parent_a_gf_linear_2_1 - r_63_actInv1_2_1);
  ap_fixed<16,1> r_64_actInv2_2_2 = (parent_a_gf_linear_2_2 - r_63_actInv1_2_2);
  ap_fixed<16,2> r_65_actInv3_2_0_0 = limi_rotation_2_0_0;
  ap_fixed<16,2> r_65_actInv3_2_1_0 = limi_rotation_2_0_1;
  ap_fixed<16,1> r_65_actInv3_2_2_0 = limi_rotation_2_0_2;
  ap_fixed<16,1> r_65_actInv3_2_0_1 = limi_rotation_2_1_0;
  ap_fixed<16,1> r_65_actInv3_2_1_1 = limi_rotation_2_1_1;
  ap_fixed<16,2> r_65_actInv3_2_2_1 = limi_rotation_2_1_2;
  ap_fixed<16,2> r_65_actInv3_2_0_2 = limi_rotation_2_2_0;
  ap_fixed<16,2> r_65_actInv3_2_1_2 = limi_rotation_2_2_1;
  ap_fixed<16,1> r_65_actInv3_2_2_2 = limi_rotation_2_2_2;
  ap_fixed<16,5> _tmp216 = (r_65_actInv3_2_0_0 * r_64_actInv2_2_0);
  ap_fixed<16,1> _tmp217 = (r_65_actInv3_2_0_1 * r_64_actInv2_2_1);
  ap_fixed<16,5> _tmp218 = (_tmp216 + _tmp217);
  ap_fixed<16,1> _tmp219 = (r_65_actInv3_2_0_2 * r_64_actInv2_2_2);
  ap_fixed<16,5> r_66_actInv4_2_0 = (_tmp218 + _tmp219);
  ap_fixed<16,5> _tmp220 = (r_65_actInv3_2_1_0 * r_64_actInv2_2_0);
  ap_fixed<16,1> _tmp221 = (r_65_actInv3_2_1_1 * r_64_actInv2_2_1);
  ap_fixed<16,5> _tmp222 = (_tmp220 + _tmp221);
  ap_fixed<16,1> _tmp223 = (r_65_actInv3_2_1_2 * r_64_actInv2_2_2);
  ap_fixed<16,5> r_66_actInv4_2_1 = (_tmp222 + _tmp223);
  ap_fixed<16,1> _tmp224 = (r_65_actInv3_2_2_0 * r_64_actInv2_2_0);
  ap_fixed<16,5> _tmp225 = (r_65_actInv3_2_2_1 * r_64_actInv2_2_1);
  ap_fixed<16,5> _tmp226 = (_tmp224 + _tmp225);
  ap_fixed<16,1> _tmp227 = (r_65_actInv3_2_2_2 * r_64_actInv2_2_2);
  ap_fixed<16,5> r_66_actInv4_2_2 = (_tmp226 + _tmp227);
  ap_fixed<16,5> r_67_act_inv_linear_2_0 = (new_a_gf2_linear_2_0 + r_66_actInv4_2_0);
  ap_fixed<16,5> r_67_act_inv_linear_2_1 = (new_a_gf2_linear_2_1 + r_66_actInv4_2_1);
  ap_fixed<16,5> r_67_act_inv_linear_2_2 = (new_a_gf2_linear_2_2 + r_66_actInv4_2_2);
  ap_fixed<16,3> _tmp228 = (r_65_actInv3_2_0_0 * parent_a_gf_angular_2_0);
  ap_fixed<16,1> _tmp229 = (r_65_actInv3_2_0_1 * parent_a_gf_angular_2_1);
  ap_fixed<16,3> _tmp230 = (_tmp228 + _tmp229);
  ap_fixed<16,2> _tmp231 = (r_65_actInv3_2_0_2 * parent_a_gf_angular_2_2);
  ap_fixed<16,3> r_68_actInv5_2_0 = (_tmp230 + _tmp231);
  ap_fixed<16,3> _tmp232 = (r_65_actInv3_2_1_0 * parent_a_gf_angular_2_0);
  ap_fixed<16,1> _tmp233 = (r_65_actInv3_2_1_1 * parent_a_gf_angular_2_1);
  ap_fixed<16,3> _tmp234 = (_tmp232 + _tmp233);
  ap_fixed<16,2> _tmp235 = (r_65_actInv3_2_1_2 * parent_a_gf_angular_2_2);
  ap_fixed<16,3> r_68_actInv5_2_1 = (_tmp234 + _tmp235);
  ap_fixed<16,1> _tmp236 = (r_65_actInv3_2_2_0 * parent_a_gf_angular_2_0);
  ap_fixed<16,3> _tmp237 = (r_65_actInv3_2_2_1 * parent_a_gf_angular_2_1);
  ap_fixed<16,3> _tmp238 = (_tmp236 + _tmp237);
  ap_fixed<16,1> _tmp239 = (r_65_actInv3_2_2_2 * parent_a_gf_angular_2_2);
  ap_fixed<16,3> r_68_actInv5_2_2 = (_tmp238 + _tmp239);
  ap_fixed<16,4> r_69_act_inv_angular_2_0 = (new_a_gf2_angular_2_0 + r_68_actInv5_2_0);
  ap_fixed<16,4> r_69_act_inv_angular_2_1 = (new_a_gf2_angular_2_1 + r_68_actInv5_2_1);
  ap_fixed<16,3> r_69_act_inv_angular_2_2 = (new_a_gf2_angular_2_2 + r_68_actInv5_2_2);
  ap_fixed<16,5> new_a_gf_up3_2_0 = r_67_act_inv_linear_2_0;
  ap_fixed<16,5> new_a_gf_up3_2_1 = r_67_act_inv_linear_2_1;
  ap_fixed<16,5> new_a_gf_up3_2_2 = r_67_act_inv_linear_2_2;
  ap_fixed<16,4> new_a_gf_up3_2_3 = r_69_act_inv_angular_2_0;
  ap_fixed<16,4> new_a_gf_up3_2_4 = r_69_act_inv_angular_2_1;
  ap_fixed<16,3> new_a_gf_up3_2_5 = r_69_act_inv_angular_2_2;
  ap_fixed<16,1> _tmp240 = (lever_2_0 * act_inv_angular_2_1);
  ap_fixed<16,1> _tmp241 = (lever_2_1 * act_inv_angular_2_0);
  ap_fixed<16,1> r_70_h_linear_1_2_0 = (_tmp240 - _tmp241);
  ap_fixed<16,1> _tmp242 = (lever_2_2 * act_inv_angular_2_0);
  ap_fixed<16,1> _tmp243 = (lever_2_0 * act_inv_angular_2_2);
  ap_fixed<16,1> r_70_h_linear_1_2_1 = (_tmp242 - _tmp243);
  ap_fixed<16,1> _tmp244 = (lever_2_0 * act_inv_angular_2_1);
  ap_fixed<16,1> _tmp245 = (lever_2_1 * act_inv_angular_2_0);
  ap_fixed<16,1> r_70_h_linear_1_2_2 = (_tmp244 - _tmp245);
  ap_fixed<16,1> h_linear_2_2_0 = (act_inv_linear_2_0 - r_70_h_linear_1_2_0);
  ap_fixed<16,1> h_linear_2_2_1 = (act_inv_linear_2_1 - r_70_h_linear_1_2_1);
  ap_fixed<16,1> h_linear_2_2_2 = (act_inv_linear_2_2 - r_70_h_linear_1_2_2);
  ap_fixed<16,3> h_linear_2_0 = (masses_2 * h_linear_2_2_0);
  ap_fixed<16,3> h_linear_2_1 = (masses_2 * h_linear_2_2_1);
  ap_fixed<16,1> h_linear_2_2 = (masses_2 * h_linear_2_2_2);
  ap_fixed<16,1> r_71_ = (inertia_2_0_0 * act_inv_angular_2_0);
  ap_fixed<16,1> r_72_ = (inertia_2_0_1 * act_inv_angular_2_1);
  ap_fixed<16,1> r_73_ = (inertia_2_0_2 * act_inv_angular_2_2);
  ap_fixed<16,1> r_74_ = (inertia_2_0_1 * act_inv_angular_2_0);
  ap_fixed<16,1> r_75_ = (inertia_2_1_1 * act_inv_angular_2_1);
  ap_fixed<16,1> r_76_ = (inertia_2_1_2 * act_inv_angular_2_2);
  ap_fixed<16,1> r_77_ = (inertia_2_0_2 * act_inv_angular_2_0);
  ap_fixed<16,1> r_78_ = (inertia_2_1_2 * act_inv_angular_2_1);
  ap_fixed<16,1> r_79_ = (inertia_2_2_2 * act_inv_angular_2_2);
  ap_fixed<16,1> rhsMult1_temp_2 = (r_71_ + r_72_);
  ap_fixed<16,1> rhsMult1_2 = (rhsMult1_temp_2 + r_73_);
  ap_fixed<16,1> rhsMult2_temp_2 = (r_74_ + r_75_);
  ap_fixed<16,1> rhsMult2_2 = (rhsMult2_temp_2 + r_76_);
  ap_fixed<16,1> rhsMult3_temp_2 = (r_77_ + r_78_);
  ap_fixed<16,1> rhsMult3_2 = (rhsMult3_temp_2 + r_79_);
  ap_fixed<16,1> rhsMult_2_0 = rhsMult1_2;
  ap_fixed<16,1> rhsMult_2_1 = rhsMult2_2;
  ap_fixed<16,1> rhsMult_2_2 = rhsMult3_2;
  ap_fixed<16,1> h_angular_first_2_0 = rhsMult_2_0;
  ap_fixed<16,1> h_angular_first_2_1 = rhsMult_2_1;
  ap_fixed<16,1> h_angular_first_2_2 = rhsMult_2_2;
  ap_fixed<16,1> _tmp246 = (lever_2_0 * h_linear_2_1);
  ap_fixed<16,1> _tmp247 = (lever_2_1 * h_linear_2_0);
  ap_fixed<16,1> r_80_h_angular_1_2_0 = (_tmp246 - _tmp247);
  ap_fixed<16,1> _tmp248 = (lever_2_2 * h_linear_2_0);
  ap_fixed<16,1> _tmp249 = (lever_2_0 * h_linear_2_2);
  ap_fixed<16,1> r_80_h_angular_1_2_1 = (_tmp248 - _tmp249);
  ap_fixed<16,1> _tmp250 = (lever_2_0 * h_linear_2_1);
  ap_fixed<16,1> _tmp251 = (lever_2_1 * h_linear_2_0);
  ap_fixed<16,1> r_80_h_angular_1_2_2 = (_tmp250 - _tmp251);
  ap_fixed<16,1> h_angular_2_0 = (h_angular_first_2_0 + r_80_h_angular_1_2_0);
  ap_fixed<16,1> h_angular_2_1 = (h_angular_first_2_1 + r_80_h_angular_1_2_1);
  ap_fixed<16,1> h_angular_2_2 = (h_angular_first_2_2 + r_80_h_angular_1_2_2);
  ap_fixed<16,1> _tmp252 = (lever_2_0 * r_69_act_inv_angular_2_1);
  ap_fixed<16,1> _tmp253 = (lever_2_1 * r_69_act_inv_angular_2_0);
  ap_fixed<16,1> f_linear_1_2_0 = (_tmp252 - _tmp253);
  ap_fixed<16,1> _tmp254 = (lever_2_2 * r_69_act_inv_angular_2_0);
  ap_fixed<16,1> _tmp255 = (lever_2_0 * r_69_act_inv_angular_2_2);
  ap_fixed<16,1> f_linear_1_2_1 = (_tmp254 - _tmp255);
  ap_fixed<16,1> _tmp256 = (lever_2_0 * r_69_act_inv_angular_2_1);
  ap_fixed<16,1> _tmp257 = (lever_2_1 * r_69_act_inv_angular_2_0);
  ap_fixed<16,1> f_linear_1_2_2 = (_tmp256 - _tmp257);
  ap_fixed<16,5> f_linear_2_2_0 = (r_67_act_inv_linear_2_0 - f_linear_1_2_0);
  ap_fixed<16,5> f_linear_2_2_1 = (r_67_act_inv_linear_2_1 - f_linear_1_2_1);
  ap_fixed<16,5> f_linear_2_2_2 = (r_67_act_inv_linear_2_2 - f_linear_1_2_2);
  ap_fixed<16,7> f_linear_3_2_0 = (masses_2 * f_linear_2_2_0);
  ap_fixed<16,7> f_linear_3_2_1 = (masses_2 * f_linear_2_2_1);
  ap_fixed<16,7> f_linear_3_2_2 = (masses_2 * f_linear_2_2_2);
  ap_fixed<16,1> r_81_ = (inertia_2_0_0 * r_69_act_inv_angular_2_0);
  ap_fixed<16,1> r_82_ = (inertia_2_0_1 * r_69_act_inv_angular_2_1);
  ap_fixed<16,1> r_83_ = (inertia_2_0_2 * r_69_act_inv_angular_2_2);
  ap_fixed<16,1> r_84_ = (inertia_2_0_1 * r_69_act_inv_angular_2_0);
  ap_fixed<16,1> r_85_ = (inertia_2_1_1 * r_69_act_inv_angular_2_1);
  ap_fixed<16,1> r_86_ = (inertia_2_1_2 * r_69_act_inv_angular_2_2);
  ap_fixed<16,1> r_87_ = (inertia_2_0_2 * r_69_act_inv_angular_2_0);
  ap_fixed<16,1> r_88_ = (inertia_2_1_2 * r_69_act_inv_angular_2_1);
  ap_fixed<16,1> r_89_ = (inertia_2_2_2 * r_69_act_inv_angular_2_2);
  ap_fixed<16,1> r_90_rhsMult1_temp_2 = (r_81_ + r_82_);
  ap_fixed<16,1> r_91_rhsMult1_2 = (r_90_rhsMult1_temp_2 + r_83_);
  ap_fixed<16,1> r_92_rhsMult2_temp_2 = (r_84_ + r_85_);
  ap_fixed<16,1> r_93_rhsMult2_2 = (r_92_rhsMult2_temp_2 + r_86_);
  ap_fixed<16,1> r_94_rhsMult3_temp_2 = (r_87_ + r_88_);
  ap_fixed<16,1> r_95_rhsMult3_2 = (r_94_rhsMult3_temp_2 + r_89_);
  ap_fixed<16,1> r_96_rhsMult_2_0 = r_91_rhsMult1_2;
  ap_fixed<16,1> r_96_rhsMult_2_1 = r_93_rhsMult2_2;
  ap_fixed<16,1> r_96_rhsMult_2_2 = r_95_rhsMult3_2;
  ap_fixed<16,1> f_angular_first_2_0 = r_96_rhsMult_2_0;
  ap_fixed<16,1> f_angular_first_2_1 = r_96_rhsMult_2_1;
  ap_fixed<16,1> f_angular_first_2_2 = r_96_rhsMult_2_2;
  ap_fixed<16,2> _tmp258 = (lever_2_0 * f_linear_3_2_1);
  ap_fixed<16,2> _tmp259 = (lever_2_1 * f_linear_3_2_0);
  ap_fixed<16,3> f_angular_1_2_0 = (_tmp258 - _tmp259);
  ap_fixed<16,3> _tmp260 = (lever_2_2 * f_linear_3_2_0);
  ap_fixed<16,1> _tmp261 = (lever_2_0 * f_linear_3_2_2);
  ap_fixed<16,3> f_angular_1_2_1 = (_tmp260 - _tmp261);
  ap_fixed<16,2> _tmp262 = (lever_2_0 * f_linear_3_2_1);
  ap_fixed<16,2> _tmp263 = (lever_2_1 * f_linear_3_2_0);
  ap_fixed<16,3> f_angular_1_2_2 = (_tmp262 - _tmp263);
  ap_fixed<16,3> f_angular_2_2_0 = (f_angular_first_2_0 + f_angular_1_2_0);
  ap_fixed<16,3> f_angular_2_2_1 = (f_angular_first_2_1 + f_angular_1_2_1);
  ap_fixed<16,3> f_angular_2_2_2 = (f_angular_first_2_2 + f_angular_1_2_2);
  ap_fixed<16,4> _tmp264 = (act_inv_angular_2_0 * h_linear_2_1);
  ap_fixed<16,4> _tmp265 = (act_inv_angular_2_1 * h_linear_2_0);
  ap_fixed<16,5> f_linear_4_temp_2_0 = (_tmp264 - _tmp265);
  ap_fixed<16,4> _tmp266 = (act_inv_angular_2_2 * h_linear_2_0);
  ap_fixed<16,1> _tmp267 = (act_inv_angular_2_0 * h_linear_2_2);
  ap_fixed<16,4> f_linear_4_temp_2_1 = (_tmp266 - _tmp267);
  ap_fixed<16,4> _tmp268 = (act_inv_angular_2_0 * h_linear_2_1);
  ap_fixed<16,4> _tmp269 = (act_inv_angular_2_1 * h_linear_2_0);
  ap_fixed<16,5> f_linear_4_temp_2_2 = (_tmp268 - _tmp269);
  ap_fixed<16,7> f_linear_4_2_0 = (f_linear_3_2_0 + f_linear_4_temp_2_0);
  ap_fixed<16,7> f_linear_4_2_1 = (f_linear_3_2_1 + f_linear_4_temp_2_1);
  ap_fixed<16,7> f_linear_4_2_2 = (f_linear_3_2_2 + f_linear_4_temp_2_2);
  ap_fixed<16,1> _tmp270 = (act_inv_angular_2_0 * h_angular_first_2_1);
  ap_fixed<16,1> _tmp271 = (act_inv_angular_2_1 * h_angular_first_2_0);
  ap_fixed<16,1> f_angular_3_temp_2_0 = (_tmp270 - _tmp271);
  ap_fixed<16,1> _tmp272 = (act_inv_angular_2_2 * h_angular_first_2_0);
  ap_fixed<16,1> _tmp273 = (act_inv_angular_2_0 * h_angular_first_2_2);
  ap_fixed<16,1> f_angular_3_temp_2_1 = (_tmp272 - _tmp273);
  ap_fixed<16,1> _tmp274 = (act_inv_angular_2_0 * h_angular_first_2_1);
  ap_fixed<16,1> _tmp275 = (act_inv_angular_2_1 * h_angular_first_2_0);
  ap_fixed<16,1> f_angular_3_temp_2_2 = (_tmp274 - _tmp275);
  ap_fixed<16,3> f_angular_3_2_0 = (f_angular_2_2_0 + f_angular_3_temp_2_0);
  ap_fixed<16,4> f_angular_3_2_1 = (f_angular_2_2_1 + f_angular_3_temp_2_1);
  ap_fixed<16,3> f_angular_3_2_2 = (f_angular_2_2_2 + f_angular_3_temp_2_2);
  ap_fixed<16,2> _tmp276 = (act_inv_linear_2_0 * h_linear_2_1);
  ap_fixed<16,2> _tmp277 = (act_inv_linear_2_1 * h_linear_2_0);
  ap_fixed<16,3> f_angular_4_temp_2_0 = (_tmp276 - _tmp277);
  ap_fixed<16,1> _tmp278 = (act_inv_linear_2_2 * h_linear_2_0);
  ap_fixed<16,1> _tmp279 = (act_inv_linear_2_0 * h_linear_2_2);
  ap_fixed<16,1> f_angular_4_temp_2_1 = (_tmp278 - _tmp279);
  ap_fixed<16,2> _tmp280 = (act_inv_linear_2_0 * h_linear_2_1);
  ap_fixed<16,2> _tmp281 = (act_inv_linear_2_1 * h_linear_2_0);
  ap_fixed<16,3> f_angular_4_temp_2_2 = (_tmp280 - _tmp281);
  ap_fixed<16,4> f_angular_4_2_0 = (f_angular_3_2_0 + f_angular_4_temp_2_0);
  ap_fixed<16,4> f_angular_4_2_1 = (f_angular_3_2_1 + f_angular_4_temp_2_1);
  ap_fixed<16,4> f_angular_4_2_2 = (f_angular_3_2_2 + f_angular_4_temp_2_2);
  ap_fixed<16,3> h_rnea_firstpass2_0 = h_linear_2_0;
  ap_fixed<16,3> h_rnea_firstpass2_1 = h_linear_2_1;
  ap_fixed<16,1> h_rnea_firstpass2_2 = h_linear_2_2;
  ap_fixed<16,1> h_rnea_firstpass2_3 = h_angular_2_0;
  ap_fixed<16,1> h_rnea_firstpass2_4 = h_angular_2_1;
  ap_fixed<16,1> h_rnea_firstpass2_5 = h_angular_2_2;
  ap_fixed<16,7> f_rnea_firstpass2_0 = f_linear_4_2_0;
  ap_fixed<16,7> f_rnea_firstpass2_1 = f_linear_4_2_1;
  ap_fixed<16,7> f_rnea_firstpass2_2 = f_linear_4_2_2;
  ap_fixed<16,4> f_rnea_firstpass2_3 = f_angular_4_2_0;
  ap_fixed<16,4> f_rnea_firstpass2_4 = f_angular_4_2_1;
  ap_fixed<16,4> f_rnea_firstpass2_5 = f_angular_4_2_2;
  ap_fixed<16,1> r_97_new_v_2_0 = act_inv_linear_2_0;
  ap_fixed<16,1> r_97_new_v_2_1 = act_inv_linear_2_1;
  ap_fixed<16,1> r_97_new_v_2_2 = act_inv_linear_2_2;
  ap_fixed<16,3> r_97_new_v_2_3 = act_inv_angular_2_0;
  ap_fixed<16,3> r_97_new_v_2_4 = act_inv_angular_2_1;
  ap_fixed<16,3> r_97_new_v_2_5 = act_inv_angular_2_2;
  ap_fixed<16,2> rotation_matrix_3_0_0 = qcos_3;
  ap_fixed<16,2> rotation_matrix_3_0_1 = -(qsin_3);
  ap_fixed<16,1> rotation_matrix_3_0_2 = 0.0;
  ap_fixed<16,2> rotation_matrix_3_1_0 = qsin_3;
  ap_fixed<16,2> rotation_matrix_3_1_1 = qcos_3;
  ap_fixed<16,1> rotation_matrix_3_1_2 = 0.0;
  ap_fixed<16,1> rotation_matrix_3_2_0 = 0.0;
  ap_fixed<16,1> rotation_matrix_3_2_1 = 0.0;
  ap_fixed<16,2> rotation_matrix_3_2_2 = 1.0;
  ap_fixed<16,2> limi_rotation_3_0_0 = rotation_matrix_3_0_0;
  ap_fixed<16,2> limi_rotation_3_0_1 = rotation_matrix_3_0_1;
  ap_fixed<16,1> limi_rotation_3_0_2 = 0.0;
  ap_fixed<16,1> limi_rotation_3_1_0 = 0.0;
  ap_fixed<16,1> limi_rotation_3_1_1 = 0.0;
  ap_fixed<16,2> limi_rotation_3_1_2 = -1.0;
  ap_fixed<16,2> limi_rotation_3_2_0 = rotation_matrix_3_1_0;
  ap_fixed<16,2> limi_rotation_3_2_1 = rotation_matrix_3_1_1;
  ap_fixed<16,1> limi_rotation_3_2_2 = 0.0;
  ap_fixed<16,1> v_linear_3_0 = data_v_3_0;
  ap_fixed<16,1> v_linear_3_1 = data_v_3_1;
  ap_fixed<16,1> v_linear_3_2 = data_v_3_2;
  ap_fixed<16,1> v_angular_3_0 = data_v_3_3;
  ap_fixed<16,1> v_angular_3_1 = data_v_3_4;
  ap_fixed<16,2> v_angular_3_2 = v_3;
  ap_fixed<16,1> parent_v_linear_3_0 = r_97_new_v_2_0;
  ap_fixed<16,1> parent_v_linear_3_1 = r_97_new_v_2_1;
  ap_fixed<16,1> parent_v_linear_3_2 = r_97_new_v_2_2;
  ap_fixed<16,3> parent_v_angular_3_0 = r_97_new_v_2_3;
  ap_fixed<16,3> parent_v_angular_3_1 = r_97_new_v_2_4;
  ap_fixed<16,3> parent_v_angular_3_2 = r_97_new_v_2_5;
  ap_fixed<16,5> parent_a_gf_linear_3_0 = new_a_gf_up3_2_0;
  ap_fixed<16,5> parent_a_gf_linear_3_1 = new_a_gf_up3_2_1;
  ap_fixed<16,5> parent_a_gf_linear_3_2 = new_a_gf_up3_2_2;
  ap_fixed<16,4> parent_a_gf_angular_3_0 = new_a_gf_up3_2_3;
  ap_fixed<16,4> parent_a_gf_angular_3_1 = new_a_gf_up3_2_4;
  ap_fixed<16,3> parent_a_gf_angular_3_2 = new_a_gf_up3_2_5;
  ap_fixed<16,1> _tmp282 = (limi_translation_3_0 * parent_v_angular_3_1);
  ap_fixed<16,1> _tmp283 = (limi_translation_3_1 * parent_v_angular_3_0);
  ap_fixed<16,1> actInv1_3_0 = (_tmp282 - _tmp283);
  ap_fixed<16,1> _tmp284 = (limi_translation_3_2 * parent_v_angular_3_0);
  ap_fixed<16,1> _tmp285 = (limi_translation_3_0 * parent_v_angular_3_2);
  ap_fixed<16,1> actInv1_3_1 = (_tmp284 - _tmp285);
  ap_fixed<16,1> _tmp286 = (limi_translation_3_0 * parent_v_angular_3_1);
  ap_fixed<16,1> _tmp287 = (limi_translation_3_1 * parent_v_angular_3_0);
  ap_fixed<16,1> actInv1_3_2 = (_tmp286 - _tmp287);
  ap_fixed<16,1> actInv2_3_0 = (parent_v_linear_3_0 - actInv1_3_0);
  ap_fixed<16,1> actInv2_3_1 = (parent_v_linear_3_1 - actInv1_3_1);
  ap_fixed<16,1> actInv2_3_2 = (parent_v_linear_3_2 - actInv1_3_2);
  ap_fixed<16,2> actInv3_3_0_0 = limi_rotation_3_0_0;
  ap_fixed<16,2> actInv3_3_1_0 = limi_rotation_3_0_1;
  ap_fixed<16,1> actInv3_3_2_0 = limi_rotation_3_0_2;
  ap_fixed<16,1> actInv3_3_0_1 = limi_rotation_3_1_0;
  ap_fixed<16,1> actInv3_3_1_1 = limi_rotation_3_1_1;
  ap_fixed<16,2> actInv3_3_2_1 = limi_rotation_3_1_2;
  ap_fixed<16,2> actInv3_3_0_2 = limi_rotation_3_2_0;
  ap_fixed<16,2> actInv3_3_1_2 = limi_rotation_3_2_1;
  ap_fixed<16,1> actInv3_3_2_2 = limi_rotation_3_2_2;
  ap_fixed<16,1> _tmp288 = (actInv3_3_0_0 * actInv2_3_0);
  ap_fixed<16,1> _tmp289 = (actInv3_3_0_1 * actInv2_3_1);
  ap_fixed<16,1> _tmp290 = (_tmp288 + _tmp289);
  ap_fixed<16,1> _tmp291 = (actInv3_3_0_2 * actInv2_3_2);
  ap_fixed<16,1> actInv4_3_0 = (_tmp290 + _tmp291);
  ap_fixed<16,1> _tmp292 = (actInv3_3_1_0 * actInv2_3_0);
  ap_fixed<16,1> _tmp293 = (actInv3_3_1_1 * actInv2_3_1);
  ap_fixed<16,1> _tmp294 = (_tmp292 + _tmp293);
  ap_fixed<16,1> _tmp295 = (actInv3_3_1_2 * actInv2_3_2);
  ap_fixed<16,1> actInv4_3_1 = (_tmp294 + _tmp295);
  ap_fixed<16,1> _tmp296 = (actInv3_3_2_0 * actInv2_3_0);
  ap_fixed<16,1> _tmp297 = (actInv3_3_2_1 * actInv2_3_1);
  ap_fixed<16,1> _tmp298 = (_tmp296 + _tmp297);
  ap_fixed<16,1> _tmp299 = (actInv3_3_2_2 * actInv2_3_2);
  ap_fixed<16,1> actInv4_3_2 = (_tmp298 + _tmp299);
  ap_fixed<16,1> act_inv_linear_3_0 = (v_linear_3_0 + actInv4_3_0);
  ap_fixed<16,1> act_inv_linear_3_1 = (v_linear_3_1 + actInv4_3_1);
  ap_fixed<16,1> act_inv_linear_3_2 = (v_linear_3_2 + actInv4_3_2);
  ap_fixed<16,3> _tmp300 = (actInv3_3_0_0 * parent_v_angular_3_0);
  ap_fixed<16,1> _tmp301 = (actInv3_3_0_1 * parent_v_angular_3_1);
  ap_fixed<16,3> _tmp302 = (_tmp300 + _tmp301);
  ap_fixed<16,3> _tmp303 = (actInv3_3_0_2 * parent_v_angular_3_2);
  ap_fixed<16,4> actInv5_3_0 = (_tmp302 + _tmp303);
  ap_fixed<16,3> _tmp304 = (actInv3_3_1_0 * parent_v_angular_3_0);
  ap_fixed<16,1> _tmp305 = (actInv3_3_1_1 * parent_v_angular_3_1);
  ap_fixed<16,3> _tmp306 = (_tmp304 + _tmp305);
  ap_fixed<16,3> _tmp307 = (actInv3_3_1_2 * parent_v_angular_3_2);
  ap_fixed<16,4> actInv5_3_1 = (_tmp306 + _tmp307);
  ap_fixed<16,1> _tmp308 = (actInv3_3_2_0 * parent_v_angular_3_0);
  ap_fixed<16,3> _tmp309 = (actInv3_3_2_1 * parent_v_angular_3_1);
  ap_fixed<16,3> _tmp310 = (_tmp308 + _tmp309);
  ap_fixed<16,1> _tmp311 = (actInv3_3_2_2 * parent_v_angular_3_2);
  ap_fixed<16,3> actInv5_3_2 = (_tmp310 + _tmp311);
  ap_fixed<16,4> act_inv_angular_3_0 = (v_angular_3_0 + actInv5_3_0);
  ap_fixed<16,4> act_inv_angular_3_1 = (v_angular_3_1 + actInv5_3_1);
  ap_fixed<16,3> act_inv_angular_3_2 = (v_angular_3_2 + actInv5_3_2);
  ap_fixed<16,2> minus_m_w_3 = -(v_3);
  ap_fixed<16,2> _tmp312 = -(minus_m_w_3);
  ap_fixed<16,1> alpha_cross1_linear_3 = (_tmp312 * act_inv_linear_3_1);
  ap_fixed<16,1> alpha_cross2_linear_3 = (minus_m_w_3 * act_inv_linear_3_0);
  ap_fixed<16,1> alpha_cross_linear_3_0 = alpha_cross1_linear_3;
  ap_fixed<16,1> alpha_cross_linear_3_1 = alpha_cross2_linear_3;
  ap_fixed<16,1> alpha_cross_linear_3_2 = 0.0;
  ap_fixed<16,2> _tmp313 = -(minus_m_w_3);
  ap_fixed<16,4> alpha_cross1_angular_3 = (_tmp313 * act_inv_angular_3_1);
  ap_fixed<16,4> alpha_cross2_angular_3 = (minus_m_w_3 * act_inv_angular_3_0);
  ap_fixed<16,4> alpha_cross_angular_3_0 = alpha_cross1_angular_3;
  ap_fixed<16,4> alpha_cross_angular_3_1 = alpha_cross2_angular_3;
  ap_fixed<16,1> alpha_cross_angular_3_2 = 0.0;
  ap_fixed<16,1> r_98_new_a_gf_3_0 = alpha_cross_linear_3_0;
  ap_fixed<16,1> r_98_new_a_gf_3_1 = alpha_cross_linear_3_1;
  ap_fixed<16,1> r_98_new_a_gf_3_2 = alpha_cross_linear_3_2;
  ap_fixed<16,4> r_98_new_a_gf_3_3 = alpha_cross_angular_3_0;
  ap_fixed<16,4> r_98_new_a_gf_3_4 = alpha_cross_angular_3_1;
  ap_fixed<16,1> r_98_new_a_gf_3_5 = alpha_cross_angular_3_2;
  ap_fixed<16,2> new_a_gf_up1_3 = (a_3 + r_98_new_a_gf_3_5);
  ap_fixed<16,1> new_a_gf2_linear_3_0 = r_98_new_a_gf_3_0;
  ap_fixed<16,1> new_a_gf2_linear_3_1 = r_98_new_a_gf_3_1;
  ap_fixed<16,1> new_a_gf2_linear_3_2 = r_98_new_a_gf_3_2;
  ap_fixed<16,4> new_a_gf2_angular_3_0 = r_98_new_a_gf_3_3;
  ap_fixed<16,4> new_a_gf2_angular_3_1 = r_98_new_a_gf_3_4;
  ap_fixed<16,2> new_a_gf2_angular_3_2 = new_a_gf_up1_3;
  ap_fixed<16,1> _tmp314 = (limi_translation_3_0 * parent_a_gf_angular_3_1);
  ap_fixed<16,1> _tmp315 = (limi_translation_3_1 * parent_a_gf_angular_3_0);
  ap_fixed<16,1> r_99_actInv1_3_0 = (_tmp314 - _tmp315);
  ap_fixed<16,1> _tmp316 = (limi_translation_3_2 * parent_a_gf_angular_3_0);
  ap_fixed<16,1> _tmp317 = (limi_translation_3_0 * parent_a_gf_angular_3_2);
  ap_fixed<16,1> r_99_actInv1_3_1 = (_tmp316 - _tmp317);
  ap_fixed<16,1> _tmp318 = (limi_translation_3_0 * parent_a_gf_angular_3_1);
  ap_fixed<16,1> _tmp319 = (limi_translation_3_1 * parent_a_gf_angular_3_0);
  ap_fixed<16,1> r_99_actInv1_3_2 = (_tmp318 - _tmp319);
  ap_fixed<16,5> r_100_actInv2_3_0 = (parent_a_gf_linear_3_0 - r_99_actInv1_3_0);
  ap_fixed<16,5> r_100_actInv2_3_1 = (parent_a_gf_linear_3_1 - r_99_actInv1_3_1);
  ap_fixed<16,5> r_100_actInv2_3_2 = (parent_a_gf_linear_3_2 - r_99_actInv1_3_2);
  ap_fixed<16,2> r_101_actInv3_3_0_0 = limi_rotation_3_0_0;
  ap_fixed<16,2> r_101_actInv3_3_1_0 = limi_rotation_3_0_1;
  ap_fixed<16,1> r_101_actInv3_3_2_0 = limi_rotation_3_0_2;
  ap_fixed<16,1> r_101_actInv3_3_0_1 = limi_rotation_3_1_0;
  ap_fixed<16,1> r_101_actInv3_3_1_1 = limi_rotation_3_1_1;
  ap_fixed<16,2> r_101_actInv3_3_2_1 = limi_rotation_3_1_2;
  ap_fixed<16,2> r_101_actInv3_3_0_2 = limi_rotation_3_2_0;
  ap_fixed<16,2> r_101_actInv3_3_1_2 = limi_rotation_3_2_1;
  ap_fixed<16,1> r_101_actInv3_3_2_2 = limi_rotation_3_2_2;
  ap_fixed<16,5> _tmp320 = (r_101_actInv3_3_0_0 * r_100_actInv2_3_0);
  ap_fixed<16,1> _tmp321 = (r_101_actInv3_3_0_1 * r_100_actInv2_3_1);
  ap_fixed<16,5> _tmp322 = (_tmp320 + _tmp321);
  ap_fixed<16,5> _tmp323 = (r_101_actInv3_3_0_2 * r_100_actInv2_3_2);
  ap_fixed<16,6> r_102_actInv4_3_0 = (_tmp322 + _tmp323);
  ap_fixed<16,5> _tmp324 = (r_101_actInv3_3_1_0 * r_100_actInv2_3_0);
  ap_fixed<16,1> _tmp325 = (r_101_actInv3_3_1_1 * r_100_actInv2_3_1);
  ap_fixed<16,5> _tmp326 = (_tmp324 + _tmp325);
  ap_fixed<16,5> _tmp327 = (r_101_actInv3_3_1_2 * r_100_actInv2_3_2);
  ap_fixed<16,6> r_102_actInv4_3_1 = (_tmp326 + _tmp327);
  ap_fixed<16,1> _tmp328 = (r_101_actInv3_3_2_0 * r_100_actInv2_3_0);
  ap_fixed<16,5> _tmp329 = (r_101_actInv3_3_2_1 * r_100_actInv2_3_1);
  ap_fixed<16,5> _tmp330 = (_tmp328 + _tmp329);
  ap_fixed<16,1> _tmp331 = (r_101_actInv3_3_2_2 * r_100_actInv2_3_2);
  ap_fixed<16,5> r_102_actInv4_3_2 = (_tmp330 + _tmp331);
  ap_fixed<16,6> r_103_act_inv_linear_3_0 = (new_a_gf2_linear_3_0 + r_102_actInv4_3_0);
  ap_fixed<16,6> r_103_act_inv_linear_3_1 = (new_a_gf2_linear_3_1 + r_102_actInv4_3_1);
  ap_fixed<16,5> r_103_act_inv_linear_3_2 = (new_a_gf2_linear_3_2 + r_102_actInv4_3_2);
  ap_fixed<16,4> _tmp332 = (r_101_actInv3_3_0_0 * parent_a_gf_angular_3_0);
  ap_fixed<16,1> _tmp333 = (r_101_actInv3_3_0_1 * parent_a_gf_angular_3_1);
  ap_fixed<16,4> _tmp334 = (_tmp332 + _tmp333);
  ap_fixed<16,3> _tmp335 = (r_101_actInv3_3_0_2 * parent_a_gf_angular_3_2);
  ap_fixed<16,5> r_104_actInv5_3_0 = (_tmp334 + _tmp335);
  ap_fixed<16,4> _tmp336 = (r_101_actInv3_3_1_0 * parent_a_gf_angular_3_0);
  ap_fixed<16,1> _tmp337 = (r_101_actInv3_3_1_1 * parent_a_gf_angular_3_1);
  ap_fixed<16,4> _tmp338 = (_tmp336 + _tmp337);
  ap_fixed<16,3> _tmp339 = (r_101_actInv3_3_1_2 * parent_a_gf_angular_3_2);
  ap_fixed<16,5> r_104_actInv5_3_1 = (_tmp338 + _tmp339);
  ap_fixed<16,1> _tmp340 = (r_101_actInv3_3_2_0 * parent_a_gf_angular_3_0);
  ap_fixed<16,4> _tmp341 = (r_101_actInv3_3_2_1 * parent_a_gf_angular_3_1);
  ap_fixed<16,4> _tmp342 = (_tmp340 + _tmp341);
  ap_fixed<16,1> _tmp343 = (r_101_actInv3_3_2_2 * parent_a_gf_angular_3_2);
  ap_fixed<16,4> r_104_actInv5_3_2 = (_tmp342 + _tmp343);
  ap_fixed<16,5> r_105_act_inv_angular_3_0 = (new_a_gf2_angular_3_0 + r_104_actInv5_3_0);
  ap_fixed<16,5> r_105_act_inv_angular_3_1 = (new_a_gf2_angular_3_1 + r_104_actInv5_3_1);
  ap_fixed<16,4> r_105_act_inv_angular_3_2 = (new_a_gf2_angular_3_2 + r_104_actInv5_3_2);
  ap_fixed<16,6> new_a_gf_up3_3_0 = r_103_act_inv_linear_3_0;
  ap_fixed<16,6> new_a_gf_up3_3_1 = r_103_act_inv_linear_3_1;
  ap_fixed<16,5> new_a_gf_up3_3_2 = r_103_act_inv_linear_3_2;
  ap_fixed<16,5> new_a_gf_up3_3_3 = r_105_act_inv_angular_3_0;
  ap_fixed<16,5> new_a_gf_up3_3_4 = r_105_act_inv_angular_3_1;
  ap_fixed<16,4> new_a_gf_up3_3_5 = r_105_act_inv_angular_3_2;
  ap_fixed<16,1> _tmp344 = (lever_3_0 * act_inv_angular_3_1);
  ap_fixed<16,1> _tmp345 = (lever_3_1 * act_inv_angular_3_0);
  ap_fixed<16,1> h_linear_1_3_0 = (_tmp344 - _tmp345);
  ap_fixed<16,1> _tmp346 = (lever_3_2 * act_inv_angular_3_0);
  ap_fixed<16,1> _tmp347 = (lever_3_0 * act_inv_angular_3_2);
  ap_fixed<16,1> h_linear_1_3_1 = (_tmp346 - _tmp347);
  ap_fixed<16,1> _tmp348 = (lever_3_0 * act_inv_angular_3_1);
  ap_fixed<16,1> _tmp349 = (lever_3_1 * act_inv_angular_3_0);
  ap_fixed<16,1> h_linear_1_3_2 = (_tmp348 - _tmp349);
  ap_fixed<16,2> h_linear_2_3_0 = (act_inv_linear_3_0 - h_linear_1_3_0);
  ap_fixed<16,2> h_linear_2_3_1 = (act_inv_linear_3_1 - h_linear_1_3_1);
  ap_fixed<16,2> h_linear_2_3_2 = (act_inv_linear_3_2 - h_linear_1_3_2);
  ap_fixed<16,4> h_linear_3_0 = (masses_3 * h_linear_2_3_0);
  ap_fixed<16,4> h_linear_3_1 = (masses_3 * h_linear_2_3_1);
  ap_fixed<16,4> h_linear_3_2 = (masses_3 * h_linear_2_3_2);
  ap_fixed<16,1> r_106_ = (inertia_3_0_0 * act_inv_angular_3_0);
  ap_fixed<16,1> r_107_ = (inertia_3_0_1 * act_inv_angular_3_1);
  ap_fixed<16,1> r_108_ = (inertia_3_0_2 * act_inv_angular_3_2);
  ap_fixed<16,1> r_109_ = (inertia_3_0_1 * act_inv_angular_3_0);
  ap_fixed<16,1> r_110_ = (inertia_3_1_1 * act_inv_angular_3_1);
  ap_fixed<16,1> r_111_ = (inertia_3_1_2 * act_inv_angular_3_2);
  ap_fixed<16,1> r_112_ = (inertia_3_0_2 * act_inv_angular_3_0);
  ap_fixed<16,1> r_113_ = (inertia_3_1_2 * act_inv_angular_3_1);
  ap_fixed<16,1> r_114_ = (inertia_3_2_2 * act_inv_angular_3_2);
  ap_fixed<16,1> rhsMult1_temp_3 = (r_106_ + r_107_);
  ap_fixed<16,1> rhsMult1_3 = (rhsMult1_temp_3 + r_108_);
  ap_fixed<16,1> rhsMult2_temp_3 = (r_109_ + r_110_);
  ap_fixed<16,1> rhsMult2_3 = (rhsMult2_temp_3 + r_111_);
  ap_fixed<16,1> rhsMult3_temp_3 = (r_112_ + r_113_);
  ap_fixed<16,1> rhsMult3_3 = (rhsMult3_temp_3 + r_114_);
  ap_fixed<16,1> rhsMult_3_0 = rhsMult1_3;
  ap_fixed<16,1> rhsMult_3_1 = rhsMult2_3;
  ap_fixed<16,1> rhsMult_3_2 = rhsMult3_3;
  ap_fixed<16,1> h_angular_first_3_0 = rhsMult_3_0;
  ap_fixed<16,1> h_angular_first_3_1 = rhsMult_3_1;
  ap_fixed<16,1> h_angular_first_3_2 = rhsMult_3_2;
  ap_fixed<16,1> _tmp350 = (lever_3_0 * h_linear_3_1);
  ap_fixed<16,1> _tmp351 = (lever_3_1 * h_linear_3_0);
  ap_fixed<16,1> h_angular_1_3_0 = (_tmp350 - _tmp351);
  ap_fixed<16,1> _tmp352 = (lever_3_2 * h_linear_3_0);
  ap_fixed<16,1> _tmp353 = (lever_3_0 * h_linear_3_2);
  ap_fixed<16,1> h_angular_1_3_1 = (_tmp352 - _tmp353);
  ap_fixed<16,1> _tmp354 = (lever_3_0 * h_linear_3_1);
  ap_fixed<16,1> _tmp355 = (lever_3_1 * h_linear_3_0);
  ap_fixed<16,1> h_angular_1_3_2 = (_tmp354 - _tmp355);
  ap_fixed<16,1> h_angular_3_0 = (h_angular_first_3_0 + h_angular_1_3_0);
  ap_fixed<16,1> h_angular_3_1 = (h_angular_first_3_1 + h_angular_1_3_1);
  ap_fixed<16,1> h_angular_3_2 = (h_angular_first_3_2 + h_angular_1_3_2);
  ap_fixed<16,1> _tmp356 = (lever_3_0 * r_105_act_inv_angular_3_1);
  ap_fixed<16,2> _tmp357 = (lever_3_1 * r_105_act_inv_angular_3_0);
  ap_fixed<16,2> f_linear_1_3_0 = (_tmp356 - _tmp357);
  ap_fixed<16,1> _tmp358 = (lever_3_2 * r_105_act_inv_angular_3_0);
  ap_fixed<16,1> _tmp359 = (lever_3_0 * r_105_act_inv_angular_3_2);
  ap_fixed<16,1> f_linear_1_3_1 = (_tmp358 - _tmp359);
  ap_fixed<16,1> _tmp360 = (lever_3_0 * r_105_act_inv_angular_3_1);
  ap_fixed<16,2> _tmp361 = (lever_3_1 * r_105_act_inv_angular_3_0);
  ap_fixed<16,2> f_linear_1_3_2 = (_tmp360 - _tmp361);
  ap_fixed<16,6> f_linear_2_3_0 = (r_103_act_inv_linear_3_0 - f_linear_1_3_0);
  ap_fixed<16,6> f_linear_2_3_1 = (r_103_act_inv_linear_3_1 - f_linear_1_3_1);
  ap_fixed<16,5> f_linear_2_3_2 = (r_103_act_inv_linear_3_2 - f_linear_1_3_2);
  ap_fixed<16,8> f_linear_3_3_0 = (masses_3 * f_linear_2_3_0);
  ap_fixed<16,8> f_linear_3_3_1 = (masses_3 * f_linear_2_3_1);
  ap_fixed<16,7> f_linear_3_3_2 = (masses_3 * f_linear_2_3_2);
  ap_fixed<16,1> r_115_ = (inertia_3_0_0 * r_105_act_inv_angular_3_0);
  ap_fixed<16,1> r_116_ = (inertia_3_0_1 * r_105_act_inv_angular_3_1);
  ap_fixed<16,1> r_117_ = (inertia_3_0_2 * r_105_act_inv_angular_3_2);
  ap_fixed<16,1> r_118_ = (inertia_3_0_1 * r_105_act_inv_angular_3_0);
  ap_fixed<16,1> r_119_ = (inertia_3_1_1 * r_105_act_inv_angular_3_1);
  ap_fixed<16,1> r_120_ = (inertia_3_1_2 * r_105_act_inv_angular_3_2);
  ap_fixed<16,1> r_121_ = (inertia_3_0_2 * r_105_act_inv_angular_3_0);
  ap_fixed<16,1> r_122_ = (inertia_3_1_2 * r_105_act_inv_angular_3_1);
  ap_fixed<16,1> r_123_ = (inertia_3_2_2 * r_105_act_inv_angular_3_2);
  ap_fixed<16,1> r_124_rhsMult1_temp_3 = (r_115_ + r_116_);
  ap_fixed<16,1> r_125_rhsMult1_3 = (r_124_rhsMult1_temp_3 + r_117_);
  ap_fixed<16,1> r_126_rhsMult2_temp_3 = (r_118_ + r_119_);
  ap_fixed<16,1> r_127_rhsMult2_3 = (r_126_rhsMult2_temp_3 + r_120_);
  ap_fixed<16,1> r_128_rhsMult3_temp_3 = (r_121_ + r_122_);
  ap_fixed<16,1> r_129_rhsMult3_3 = (r_128_rhsMult3_temp_3 + r_123_);
  ap_fixed<16,1> r_130_rhsMult_3_0 = r_125_rhsMult1_3;
  ap_fixed<16,1> r_130_rhsMult_3_1 = r_127_rhsMult2_3;
  ap_fixed<16,1> r_130_rhsMult_3_2 = r_129_rhsMult3_3;
  ap_fixed<16,1> f_angular_first_3_0 = r_130_rhsMult_3_0;
  ap_fixed<16,1> f_angular_first_3_1 = r_130_rhsMult_3_1;
  ap_fixed<16,1> f_angular_first_3_2 = r_130_rhsMult_3_2;
  ap_fixed<16,4> _tmp362 = (lever_3_0 * f_linear_3_3_1);
  ap_fixed<16,5> _tmp363 = (lever_3_1 * f_linear_3_3_0);
  ap_fixed<16,5> f_angular_1_3_0 = (_tmp362 - _tmp363);
  ap_fixed<16,3> _tmp364 = (lever_3_2 * f_linear_3_3_0);
  ap_fixed<16,3> _tmp365 = (lever_3_0 * f_linear_3_3_2);
  ap_fixed<16,4> f_angular_1_3_1 = (_tmp364 - _tmp365);
  ap_fixed<16,4> _tmp366 = (lever_3_0 * f_linear_3_3_1);
  ap_fixed<16,5> _tmp367 = (lever_3_1 * f_linear_3_3_0);
  ap_fixed<16,5> f_angular_1_3_2 = (_tmp366 - _tmp367);
  ap_fixed<16,5> f_angular_2_3_0 = (f_angular_first_3_0 + f_angular_1_3_0);
  ap_fixed<16,4> f_angular_2_3_1 = (f_angular_first_3_1 + f_angular_1_3_1);
  ap_fixed<16,5> f_angular_2_3_2 = (f_angular_first_3_2 + f_angular_1_3_2);
  ap_fixed<16,6> _tmp368 = (act_inv_angular_3_0 * h_linear_3_1);
  ap_fixed<16,6> _tmp369 = (act_inv_angular_3_1 * h_linear_3_0);
  ap_fixed<16,7> f_linear_4_temp_3_0 = (_tmp368 - _tmp369);
  ap_fixed<16,6> _tmp370 = (act_inv_angular_3_2 * h_linear_3_0);
  ap_fixed<16,6> _tmp371 = (act_inv_angular_3_0 * h_linear_3_2);
  ap_fixed<16,7> f_linear_4_temp_3_1 = (_tmp370 - _tmp371);
  ap_fixed<16,6> _tmp372 = (act_inv_angular_3_0 * h_linear_3_1);
  ap_fixed<16,6> _tmp373 = (act_inv_angular_3_1 * h_linear_3_0);
  ap_fixed<16,7> f_linear_4_temp_3_2 = (_tmp372 - _tmp373);
  ap_fixed<16,9> f_linear_4_3_0 = (f_linear_3_3_0 + f_linear_4_temp_3_0);
  ap_fixed<16,8> f_linear_4_3_1 = (f_linear_3_3_1 + f_linear_4_temp_3_1);
  ap_fixed<16,8> f_linear_4_3_2 = (f_linear_3_3_2 + f_linear_4_temp_3_2);
  ap_fixed<16,1> _tmp374 = (act_inv_angular_3_0 * h_angular_first_3_1);
  ap_fixed<16,1> _tmp375 = (act_inv_angular_3_1 * h_angular_first_3_0);
  ap_fixed<16,2> f_angular_3_temp_3_0 = (_tmp374 - _tmp375);
  ap_fixed<16,1> _tmp376 = (act_inv_angular_3_2 * h_angular_first_3_0);
  ap_fixed<16,1> _tmp377 = (act_inv_angular_3_0 * h_angular_first_3_2);
  ap_fixed<16,1> f_angular_3_temp_3_1 = (_tmp376 - _tmp377);
  ap_fixed<16,1> _tmp378 = (act_inv_angular_3_0 * h_angular_first_3_1);
  ap_fixed<16,1> _tmp379 = (act_inv_angular_3_1 * h_angular_first_3_0);
  ap_fixed<16,2> f_angular_3_temp_3_2 = (_tmp378 - _tmp379);
  ap_fixed<16,5> f_angular_3_3_0 = (f_angular_2_3_0 + f_angular_3_temp_3_0);
  ap_fixed<16,4> f_angular_3_3_1 = (f_angular_2_3_1 + f_angular_3_temp_3_1);
  ap_fixed<16,5> f_angular_3_3_2 = (f_angular_2_3_2 + f_angular_3_temp_3_2);
  ap_fixed<16,4> _tmp380 = (act_inv_linear_3_0 * h_linear_3_1);
  ap_fixed<16,4> _tmp381 = (act_inv_linear_3_1 * h_linear_3_0);
  ap_fixed<16,5> f_angular_4_temp_3_0 = (_tmp380 - _tmp381);
  ap_fixed<16,4> _tmp382 = (act_inv_linear_3_2 * h_linear_3_0);
  ap_fixed<16,4> _tmp383 = (act_inv_linear_3_0 * h_linear_3_2);
  ap_fixed<16,5> f_angular_4_temp_3_1 = (_tmp382 - _tmp383);
  ap_fixed<16,4> _tmp384 = (act_inv_linear_3_0 * h_linear_3_1);
  ap_fixed<16,4> _tmp385 = (act_inv_linear_3_1 * h_linear_3_0);
  ap_fixed<16,5> f_angular_4_temp_3_2 = (_tmp384 - _tmp385);
  ap_fixed<16,6> f_angular_4_3_0 = (f_angular_3_3_0 + f_angular_4_temp_3_0);
  ap_fixed<16,5> f_angular_4_3_1 = (f_angular_3_3_1 + f_angular_4_temp_3_1);
  ap_fixed<16,6> f_angular_4_3_2 = (f_angular_3_3_2 + f_angular_4_temp_3_2);
  ap_fixed<16,4> h_rnea_firstpass3_0 = h_linear_3_0;
  ap_fixed<16,4> h_rnea_firstpass3_1 = h_linear_3_1;
  ap_fixed<16,4> h_rnea_firstpass3_2 = h_linear_3_2;
  ap_fixed<16,1> h_rnea_firstpass3_3 = h_angular_3_0;
  ap_fixed<16,1> h_rnea_firstpass3_4 = h_angular_3_1;
  ap_fixed<16,1> h_rnea_firstpass3_5 = h_angular_3_2;
  ap_fixed<16,9> f_rnea_firstpass3_0 = f_linear_4_3_0;
  ap_fixed<16,8> f_rnea_firstpass3_1 = f_linear_4_3_1;
  ap_fixed<16,8> f_rnea_firstpass3_2 = f_linear_4_3_2;
  ap_fixed<16,6> f_rnea_firstpass3_3 = f_angular_4_3_0;
  ap_fixed<16,5> f_rnea_firstpass3_4 = f_angular_4_3_1;
  ap_fixed<16,6> f_rnea_firstpass3_5 = f_angular_4_3_2;
  ap_fixed<16,1> r_131_new_v_3_0 = act_inv_linear_3_0;
  ap_fixed<16,1> r_131_new_v_3_1 = act_inv_linear_3_1;
  ap_fixed<16,1> r_131_new_v_3_2 = act_inv_linear_3_2;
  ap_fixed<16,4> r_131_new_v_3_3 = act_inv_angular_3_0;
  ap_fixed<16,4> r_131_new_v_3_4 = act_inv_angular_3_1;
  ap_fixed<16,3> r_131_new_v_3_5 = act_inv_angular_3_2;
  ap_fixed<16,2> rotation_matrix_4_0_0 = qcos_4;
  ap_fixed<16,2> rotation_matrix_4_0_1 = -(qsin_4);
  ap_fixed<16,1> rotation_matrix_4_0_2 = 0.0;
  ap_fixed<16,2> rotation_matrix_4_1_0 = qsin_4;
  ap_fixed<16,2> rotation_matrix_4_1_1 = qcos_4;
  ap_fixed<16,1> rotation_matrix_4_1_2 = 0.0;
  ap_fixed<16,1> rotation_matrix_4_2_0 = 0.0;
  ap_fixed<16,1> rotation_matrix_4_2_1 = 0.0;
  ap_fixed<16,2> rotation_matrix_4_2_2 = 1.0;
  ap_fixed<16,2> limi_rotation_4_0_0 = rotation_matrix_4_0_0;
  ap_fixed<16,2> limi_rotation_4_0_1 = rotation_matrix_4_0_1;
  ap_fixed<16,1> limi_rotation_4_0_2 = 0.0;
  ap_fixed<16,1> limi_rotation_4_1_0 = 0.0;
  ap_fixed<16,1> limi_rotation_4_1_1 = 0.0;
  ap_fixed<16,2> limi_rotation_4_1_2 = 1.0;
  ap_fixed<16,2> limi_rotation_4_2_0 = -(rotation_matrix_4_1_0);
  ap_fixed<16,2> limi_rotation_4_2_1 = -(rotation_matrix_4_1_1);
  ap_fixed<16,1> limi_rotation_4_2_2 = 0.0;
  ap_fixed<16,1> v_linear_4_0 = data_v_4_0;
  ap_fixed<16,1> v_linear_4_1 = data_v_4_1;
  ap_fixed<16,1> v_linear_4_2 = data_v_4_2;
  ap_fixed<16,1> v_angular_4_0 = data_v_4_3;
  ap_fixed<16,1> v_angular_4_1 = data_v_4_4;
  ap_fixed<16,2> v_angular_4_2 = v_4;
  ap_fixed<16,1> parent_v_linear_4_0 = r_131_new_v_3_0;
  ap_fixed<16,1> parent_v_linear_4_1 = r_131_new_v_3_1;
  ap_fixed<16,1> parent_v_linear_4_2 = r_131_new_v_3_2;
  ap_fixed<16,4> parent_v_angular_4_0 = r_131_new_v_3_3;
  ap_fixed<16,4> parent_v_angular_4_1 = r_131_new_v_3_4;
  ap_fixed<16,3> parent_v_angular_4_2 = r_131_new_v_3_5;
  ap_fixed<16,6> parent_a_gf_linear_4_0 = new_a_gf_up3_3_0;
  ap_fixed<16,6> parent_a_gf_linear_4_1 = new_a_gf_up3_3_1;
  ap_fixed<16,5> parent_a_gf_linear_4_2 = new_a_gf_up3_3_2;
  ap_fixed<16,5> parent_a_gf_angular_4_0 = new_a_gf_up3_3_3;
  ap_fixed<16,5> parent_a_gf_angular_4_1 = new_a_gf_up3_3_4;
  ap_fixed<16,4> parent_a_gf_angular_4_2 = new_a_gf_up3_3_5;
  ap_fixed<16,1> _tmp386 = (limi_translation_4_0 * parent_v_angular_4_1);
  ap_fixed<16,2> _tmp387 = (limi_translation_4_1 * parent_v_angular_4_0);
  ap_fixed<16,2> actInv1_4_0 = (_tmp386 - _tmp387);
  ap_fixed<16,1> _tmp388 = (limi_translation_4_2 * parent_v_angular_4_0);
  ap_fixed<16,1> _tmp389 = (limi_translation_4_0 * parent_v_angular_4_2);
  ap_fixed<16,1> actInv1_4_1 = (_tmp388 - _tmp389);
  ap_fixed<16,1> _tmp390 = (limi_translation_4_0 * parent_v_angular_4_1);
  ap_fixed<16,2> _tmp391 = (limi_translation_4_1 * parent_v_angular_4_0);
  ap_fixed<16,2> actInv1_4_2 = (_tmp390 - _tmp391);
  ap_fixed<16,3> actInv2_4_0 = (parent_v_linear_4_0 - actInv1_4_0);
  ap_fixed<16,2> actInv2_4_1 = (parent_v_linear_4_1 - actInv1_4_1);
  ap_fixed<16,3> actInv2_4_2 = (parent_v_linear_4_2 - actInv1_4_2);
  ap_fixed<16,2> actInv3_4_0_0 = limi_rotation_4_0_0;
  ap_fixed<16,2> actInv3_4_1_0 = limi_rotation_4_0_1;
  ap_fixed<16,1> actInv3_4_2_0 = limi_rotation_4_0_2;
  ap_fixed<16,1> actInv3_4_0_1 = limi_rotation_4_1_0;
  ap_fixed<16,1> actInv3_4_1_1 = limi_rotation_4_1_1;
  ap_fixed<16,2> actInv3_4_2_1 = limi_rotation_4_1_2;
  ap_fixed<16,2> actInv3_4_0_2 = limi_rotation_4_2_0;
  ap_fixed<16,2> actInv3_4_1_2 = limi_rotation_4_2_1;
  ap_fixed<16,1> actInv3_4_2_2 = limi_rotation_4_2_2;
  ap_fixed<16,3> _tmp392 = (actInv3_4_0_0 * actInv2_4_0);
  ap_fixed<16,1> _tmp393 = (actInv3_4_0_1 * actInv2_4_1);
  ap_fixed<16,3> _tmp394 = (_tmp392 + _tmp393);
  ap_fixed<16,3> _tmp395 = (actInv3_4_0_2 * actInv2_4_2);
  ap_fixed<16,4> actInv4_4_0 = (_tmp394 + _tmp395);
  ap_fixed<16,3> _tmp396 = (actInv3_4_1_0 * actInv2_4_0);
  ap_fixed<16,1> _tmp397 = (actInv3_4_1_1 * actInv2_4_1);
  ap_fixed<16,3> _tmp398 = (_tmp396 + _tmp397);
  ap_fixed<16,3> _tmp399 = (actInv3_4_1_2 * actInv2_4_2);
  ap_fixed<16,4> actInv4_4_1 = (_tmp398 + _tmp399);
  ap_fixed<16,1> _tmp400 = (actInv3_4_2_0 * actInv2_4_0);
  ap_fixed<16,2> _tmp401 = (actInv3_4_2_1 * actInv2_4_1);
  ap_fixed<16,2> _tmp402 = (_tmp400 + _tmp401);
  ap_fixed<16,1> _tmp403 = (actInv3_4_2_2 * actInv2_4_2);
  ap_fixed<16,2> actInv4_4_2 = (_tmp402 + _tmp403);
  ap_fixed<16,4> act_inv_linear_4_0 = (v_linear_4_0 + actInv4_4_0);
  ap_fixed<16,4> act_inv_linear_4_1 = (v_linear_4_1 + actInv4_4_1);
  ap_fixed<16,2> act_inv_linear_4_2 = (v_linear_4_2 + actInv4_4_2);
  ap_fixed<16,4> _tmp404 = (actInv3_4_0_0 * parent_v_angular_4_0);
  ap_fixed<16,1> _tmp405 = (actInv3_4_0_1 * parent_v_angular_4_1);
  ap_fixed<16,4> _tmp406 = (_tmp404 + _tmp405);
  ap_fixed<16,3> _tmp407 = (actInv3_4_0_2 * parent_v_angular_4_2);
  ap_fixed<16,4> actInv5_4_0 = (_tmp406 + _tmp407);
  ap_fixed<16,4> _tmp408 = (actInv3_4_1_0 * parent_v_angular_4_0);
  ap_fixed<16,1> _tmp409 = (actInv3_4_1_1 * parent_v_angular_4_1);
  ap_fixed<16,4> _tmp410 = (_tmp408 + _tmp409);
  ap_fixed<16,3> _tmp411 = (actInv3_4_1_2 * parent_v_angular_4_2);
  ap_fixed<16,4> actInv5_4_1 = (_tmp410 + _tmp411);
  ap_fixed<16,1> _tmp412 = (actInv3_4_2_0 * parent_v_angular_4_0);
  ap_fixed<16,4> _tmp413 = (actInv3_4_2_1 * parent_v_angular_4_1);
  ap_fixed<16,4> _tmp414 = (_tmp412 + _tmp413);
  ap_fixed<16,1> _tmp415 = (actInv3_4_2_2 * parent_v_angular_4_2);
  ap_fixed<16,4> actInv5_4_2 = (_tmp414 + _tmp415);
  ap_fixed<16,4> act_inv_angular_4_0 = (v_angular_4_0 + actInv5_4_0);
  ap_fixed<16,4> act_inv_angular_4_1 = (v_angular_4_1 + actInv5_4_1);
  ap_fixed<16,4> act_inv_angular_4_2 = (v_angular_4_2 + actInv5_4_2);
  ap_fixed<16,2> minus_m_w_4 = -(v_4);
  ap_fixed<16,2> _tmp416 = -(minus_m_w_4);
  ap_fixed<16,4> alpha_cross1_linear_4 = (_tmp416 * act_inv_linear_4_1);
  ap_fixed<16,4> alpha_cross2_linear_4 = (minus_m_w_4 * act_inv_linear_4_0);
  ap_fixed<16,4> alpha_cross_linear_4_0 = alpha_cross1_linear_4;
  ap_fixed<16,4> alpha_cross_linear_4_1 = alpha_cross2_linear_4;
  ap_fixed<16,1> alpha_cross_linear_4_2 = 0.0;
  ap_fixed<16,2> _tmp417 = -(minus_m_w_4);
  ap_fixed<16,4> alpha_cross1_angular_4 = (_tmp417 * act_inv_angular_4_1);
  ap_fixed<16,4> alpha_cross2_angular_4 = (minus_m_w_4 * act_inv_angular_4_0);
  ap_fixed<16,4> alpha_cross_angular_4_0 = alpha_cross1_angular_4;
  ap_fixed<16,4> alpha_cross_angular_4_1 = alpha_cross2_angular_4;
  ap_fixed<16,1> alpha_cross_angular_4_2 = 0.0;
  ap_fixed<16,4> r_132_new_a_gf_4_0 = alpha_cross_linear_4_0;
  ap_fixed<16,4> r_132_new_a_gf_4_1 = alpha_cross_linear_4_1;
  ap_fixed<16,1> r_132_new_a_gf_4_2 = alpha_cross_linear_4_2;
  ap_fixed<16,4> r_132_new_a_gf_4_3 = alpha_cross_angular_4_0;
  ap_fixed<16,4> r_132_new_a_gf_4_4 = alpha_cross_angular_4_1;
  ap_fixed<16,1> r_132_new_a_gf_4_5 = alpha_cross_angular_4_2;
  ap_fixed<16,2> new_a_gf_up1_4 = (a_4 + r_132_new_a_gf_4_5);
  ap_fixed<16,4> new_a_gf2_linear_4_0 = r_132_new_a_gf_4_0;
  ap_fixed<16,4> new_a_gf2_linear_4_1 = r_132_new_a_gf_4_1;
  ap_fixed<16,1> new_a_gf2_linear_4_2 = r_132_new_a_gf_4_2;
  ap_fixed<16,4> new_a_gf2_angular_4_0 = r_132_new_a_gf_4_3;
  ap_fixed<16,4> new_a_gf2_angular_4_1 = r_132_new_a_gf_4_4;
  ap_fixed<16,2> new_a_gf2_angular_4_2 = new_a_gf_up1_4;
  ap_fixed<16,1> _tmp418 = (limi_translation_4_0 * parent_a_gf_angular_4_1);
  ap_fixed<16,4> _tmp419 = (limi_translation_4_1 * parent_a_gf_angular_4_0);
  ap_fixed<16,4> r_133_actInv1_4_0 = (_tmp418 - _tmp419);
  ap_fixed<16,1> _tmp420 = (limi_translation_4_2 * parent_a_gf_angular_4_0);
  ap_fixed<16,1> _tmp421 = (limi_translation_4_0 * parent_a_gf_angular_4_2);
  ap_fixed<16,1> r_133_actInv1_4_1 = (_tmp420 - _tmp421);
  ap_fixed<16,1> _tmp422 = (limi_translation_4_0 * parent_a_gf_angular_4_1);
  ap_fixed<16,4> _tmp423 = (limi_translation_4_1 * parent_a_gf_angular_4_0);
  ap_fixed<16,4> r_133_actInv1_4_2 = (_tmp422 - _tmp423);
  ap_fixed<16,6> r_134_actInv2_4_0 = (parent_a_gf_linear_4_0 - r_133_actInv1_4_0);
  ap_fixed<16,6> r_134_actInv2_4_1 = (parent_a_gf_linear_4_1 - r_133_actInv1_4_1);
  ap_fixed<16,6> r_134_actInv2_4_2 = (parent_a_gf_linear_4_2 - r_133_actInv1_4_2);
  ap_fixed<16,2> r_135_actInv3_4_0_0 = limi_rotation_4_0_0;
  ap_fixed<16,2> r_135_actInv3_4_1_0 = limi_rotation_4_0_1;
  ap_fixed<16,1> r_135_actInv3_4_2_0 = limi_rotation_4_0_2;
  ap_fixed<16,1> r_135_actInv3_4_0_1 = limi_rotation_4_1_0;
  ap_fixed<16,1> r_135_actInv3_4_1_1 = limi_rotation_4_1_1;
  ap_fixed<16,2> r_135_actInv3_4_2_1 = limi_rotation_4_1_2;
  ap_fixed<16,2> r_135_actInv3_4_0_2 = limi_rotation_4_2_0;
  ap_fixed<16,2> r_135_actInv3_4_1_2 = limi_rotation_4_2_1;
  ap_fixed<16,1> r_135_actInv3_4_2_2 = limi_rotation_4_2_2;
  ap_fixed<16,6> _tmp424 = (r_135_actInv3_4_0_0 * r_134_actInv2_4_0);
  ap_fixed<16,1> _tmp425 = (r_135_actInv3_4_0_1 * r_134_actInv2_4_1);
  ap_fixed<16,6> _tmp426 = (_tmp424 + _tmp425);
  ap_fixed<16,6> _tmp427 = (r_135_actInv3_4_0_2 * r_134_actInv2_4_2);
  ap_fixed<16,7> r_136_actInv4_4_0 = (_tmp426 + _tmp427);
  ap_fixed<16,6> _tmp428 = (r_135_actInv3_4_1_0 * r_134_actInv2_4_0);
  ap_fixed<16,1> _tmp429 = (r_135_actInv3_4_1_1 * r_134_actInv2_4_1);
  ap_fixed<16,6> _tmp430 = (_tmp428 + _tmp429);
  ap_fixed<16,6> _tmp431 = (r_135_actInv3_4_1_2 * r_134_actInv2_4_2);
  ap_fixed<16,7> r_136_actInv4_4_1 = (_tmp430 + _tmp431);
  ap_fixed<16,1> _tmp432 = (r_135_actInv3_4_2_0 * r_134_actInv2_4_0);
  ap_fixed<16,6> _tmp433 = (r_135_actInv3_4_2_1 * r_134_actInv2_4_1);
  ap_fixed<16,6> _tmp434 = (_tmp432 + _tmp433);
  ap_fixed<16,1> _tmp435 = (r_135_actInv3_4_2_2 * r_134_actInv2_4_2);
  ap_fixed<16,6> r_136_actInv4_4_2 = (_tmp434 + _tmp435);
  ap_fixed<16,7> r_137_act_inv_linear_4_0 = (new_a_gf2_linear_4_0 + r_136_actInv4_4_0);
  ap_fixed<16,7> r_137_act_inv_linear_4_1 = (new_a_gf2_linear_4_1 + r_136_actInv4_4_1);
  ap_fixed<16,6> r_137_act_inv_linear_4_2 = (new_a_gf2_linear_4_2 + r_136_actInv4_4_2);
  ap_fixed<16,5> _tmp436 = (r_135_actInv3_4_0_0 * parent_a_gf_angular_4_0);
  ap_fixed<16,1> _tmp437 = (r_135_actInv3_4_0_1 * parent_a_gf_angular_4_1);
  ap_fixed<16,5> _tmp438 = (_tmp436 + _tmp437);
  ap_fixed<16,4> _tmp439 = (r_135_actInv3_4_0_2 * parent_a_gf_angular_4_2);
  ap_fixed<16,6> r_138_actInv5_4_0 = (_tmp438 + _tmp439);
  ap_fixed<16,5> _tmp440 = (r_135_actInv3_4_1_0 * parent_a_gf_angular_4_0);
  ap_fixed<16,1> _tmp441 = (r_135_actInv3_4_1_1 * parent_a_gf_angular_4_1);
  ap_fixed<16,5> _tmp442 = (_tmp440 + _tmp441);
  ap_fixed<16,4> _tmp443 = (r_135_actInv3_4_1_2 * parent_a_gf_angular_4_2);
  ap_fixed<16,6> r_138_actInv5_4_1 = (_tmp442 + _tmp443);
  ap_fixed<16,1> _tmp444 = (r_135_actInv3_4_2_0 * parent_a_gf_angular_4_0);
  ap_fixed<16,5> _tmp445 = (r_135_actInv3_4_2_1 * parent_a_gf_angular_4_1);
  ap_fixed<16,5> _tmp446 = (_tmp444 + _tmp445);
  ap_fixed<16,1> _tmp447 = (r_135_actInv3_4_2_2 * parent_a_gf_angular_4_2);
  ap_fixed<16,5> r_138_actInv5_4_2 = (_tmp446 + _tmp447);
  ap_fixed<16,6> r_139_act_inv_angular_4_0 = (new_a_gf2_angular_4_0 + r_138_actInv5_4_0);
  ap_fixed<16,6> r_139_act_inv_angular_4_1 = (new_a_gf2_angular_4_1 + r_138_actInv5_4_1);
  ap_fixed<16,5> r_139_act_inv_angular_4_2 = (new_a_gf2_angular_4_2 + r_138_actInv5_4_2);
  ap_fixed<16,7> new_a_gf_up3_4_0 = r_137_act_inv_linear_4_0;
  ap_fixed<16,7> new_a_gf_up3_4_1 = r_137_act_inv_linear_4_1;
  ap_fixed<16,6> new_a_gf_up3_4_2 = r_137_act_inv_linear_4_2;
  ap_fixed<16,6> new_a_gf_up3_4_3 = r_139_act_inv_angular_4_0;
  ap_fixed<16,6> new_a_gf_up3_4_4 = r_139_act_inv_angular_4_1;
  ap_fixed<16,5> new_a_gf_up3_4_5 = r_139_act_inv_angular_4_2;
  ap_fixed<16,1> _tmp448 = (lever_4_0 * act_inv_angular_4_1);
  ap_fixed<16,1> _tmp449 = (lever_4_1 * act_inv_angular_4_0);
  ap_fixed<16,1> h_linear_1_4_0 = (_tmp448 - _tmp449);
  ap_fixed<16,1> _tmp450 = (lever_4_2 * act_inv_angular_4_0);
  ap_fixed<16,1> _tmp451 = (lever_4_0 * act_inv_angular_4_2);
  ap_fixed<16,1> h_linear_1_4_1 = (_tmp450 - _tmp451);
  ap_fixed<16,1> _tmp452 = (lever_4_0 * act_inv_angular_4_1);
  ap_fixed<16,1> _tmp453 = (lever_4_1 * act_inv_angular_4_0);
  ap_fixed<16,1> h_linear_1_4_2 = (_tmp452 - _tmp453);
  ap_fixed<16,4> h_linear_2_4_0 = (act_inv_linear_4_0 - h_linear_1_4_0);
  ap_fixed<16,4> h_linear_2_4_1 = (act_inv_linear_4_1 - h_linear_1_4_1);
  ap_fixed<16,2> h_linear_2_4_2 = (act_inv_linear_4_2 - h_linear_1_4_2);
  ap_fixed<16,4> h_linear_4_0 = (masses_4 * h_linear_2_4_0);
  ap_fixed<16,4> h_linear_4_1 = (masses_4 * h_linear_2_4_1);
  ap_fixed<16,2> h_linear_4_2 = (masses_4 * h_linear_2_4_2);
  ap_fixed<16,1> r_140_ = (inertia_4_0_0 * act_inv_angular_4_0);
  ap_fixed<16,1> r_141_ = (inertia_4_0_1 * act_inv_angular_4_1);
  ap_fixed<16,1> r_142_ = (inertia_4_0_2 * act_inv_angular_4_2);
  ap_fixed<16,1> r_143_ = (inertia_4_0_1 * act_inv_angular_4_0);
  ap_fixed<16,1> r_144_ = (inertia_4_1_1 * act_inv_angular_4_1);
  ap_fixed<16,1> r_145_ = (inertia_4_1_2 * act_inv_angular_4_2);
  ap_fixed<16,1> r_146_ = (inertia_4_0_2 * act_inv_angular_4_0);
  ap_fixed<16,1> r_147_ = (inertia_4_1_2 * act_inv_angular_4_1);
  ap_fixed<16,1> r_148_ = (inertia_4_2_2 * act_inv_angular_4_2);
  ap_fixed<16,1> rhsMult1_temp_4 = (r_140_ + r_141_);
  ap_fixed<16,1> rhsMult1_4 = (rhsMult1_temp_4 + r_142_);
  ap_fixed<16,1> rhsMult2_temp_4 = (r_143_ + r_144_);
  ap_fixed<16,1> rhsMult2_4 = (rhsMult2_temp_4 + r_145_);
  ap_fixed<16,1> rhsMult3_temp_4 = (r_146_ + r_147_);
  ap_fixed<16,1> rhsMult3_4 = (rhsMult3_temp_4 + r_148_);
  ap_fixed<16,1> rhsMult_4_0 = rhsMult1_4;
  ap_fixed<16,1> rhsMult_4_1 = rhsMult2_4;
  ap_fixed<16,1> rhsMult_4_2 = rhsMult3_4;
  ap_fixed<16,1> h_angular_first_4_0 = rhsMult_4_0;
  ap_fixed<16,1> h_angular_first_4_1 = rhsMult_4_1;
  ap_fixed<16,1> h_angular_first_4_2 = rhsMult_4_2;
  ap_fixed<16,1> _tmp454 = (lever_4_0 * h_linear_4_1);
  ap_fixed<16,1> _tmp455 = (lever_4_1 * h_linear_4_0);
  ap_fixed<16,1> h_angular_1_4_0 = (_tmp454 - _tmp455);
  ap_fixed<16,1> _tmp456 = (lever_4_2 * h_linear_4_0);
  ap_fixed<16,1> _tmp457 = (lever_4_0 * h_linear_4_2);
  ap_fixed<16,1> h_angular_1_4_1 = (_tmp456 - _tmp457);
  ap_fixed<16,1> _tmp458 = (lever_4_0 * h_linear_4_1);
  ap_fixed<16,1> _tmp459 = (lever_4_1 * h_linear_4_0);
  ap_fixed<16,1> h_angular_1_4_2 = (_tmp458 - _tmp459);
  ap_fixed<16,1> h_angular_4_0 = (h_angular_first_4_0 + h_angular_1_4_0);
  ap_fixed<16,1> h_angular_4_1 = (h_angular_first_4_1 + h_angular_1_4_1);
  ap_fixed<16,1> h_angular_4_2 = (h_angular_first_4_2 + h_angular_1_4_2);
  ap_fixed<16,1> _tmp460 = (lever_4_0 * r_139_act_inv_angular_4_1);
  ap_fixed<16,2> _tmp461 = (lever_4_1 * r_139_act_inv_angular_4_0);
  ap_fixed<16,2> f_linear_1_4_0 = (_tmp460 - _tmp461);
  ap_fixed<16,1> _tmp462 = (lever_4_2 * r_139_act_inv_angular_4_0);
  ap_fixed<16,1> _tmp463 = (lever_4_0 * r_139_act_inv_angular_4_2);
  ap_fixed<16,2> f_linear_1_4_1 = (_tmp462 - _tmp463);
  ap_fixed<16,1> _tmp464 = (lever_4_0 * r_139_act_inv_angular_4_1);
  ap_fixed<16,2> _tmp465 = (lever_4_1 * r_139_act_inv_angular_4_0);
  ap_fixed<16,2> f_linear_1_4_2 = (_tmp464 - _tmp465);
  ap_fixed<16,7> f_linear_2_4_0 = (r_137_act_inv_linear_4_0 - f_linear_1_4_0);
  ap_fixed<16,7> f_linear_2_4_1 = (r_137_act_inv_linear_4_1 - f_linear_1_4_1);
  ap_fixed<16,6> f_linear_2_4_2 = (r_137_act_inv_linear_4_2 - f_linear_1_4_2);
  ap_fixed<16,8> f_linear_3_4_0 = (masses_4 * f_linear_2_4_0);
  ap_fixed<16,8> f_linear_3_4_1 = (masses_4 * f_linear_2_4_1);
  ap_fixed<16,6> f_linear_3_4_2 = (masses_4 * f_linear_2_4_2);
  ap_fixed<16,1> r_149_ = (inertia_4_0_0 * r_139_act_inv_angular_4_0);
  ap_fixed<16,1> r_150_ = (inertia_4_0_1 * r_139_act_inv_angular_4_1);
  ap_fixed<16,1> r_151_ = (inertia_4_0_2 * r_139_act_inv_angular_4_2);
  ap_fixed<16,1> r_152_ = (inertia_4_0_1 * r_139_act_inv_angular_4_0);
  ap_fixed<16,1> r_153_ = (inertia_4_1_1 * r_139_act_inv_angular_4_1);
  ap_fixed<16,1> r_154_ = (inertia_4_1_2 * r_139_act_inv_angular_4_2);
  ap_fixed<16,1> r_155_ = (inertia_4_0_2 * r_139_act_inv_angular_4_0);
  ap_fixed<16,1> r_156_ = (inertia_4_1_2 * r_139_act_inv_angular_4_1);
  ap_fixed<16,1> r_157_ = (inertia_4_2_2 * r_139_act_inv_angular_4_2);
  ap_fixed<16,1> r_158_rhsMult1_temp_4 = (r_149_ + r_150_);
  ap_fixed<16,1> r_159_rhsMult1_4 = (r_158_rhsMult1_temp_4 + r_151_);
  ap_fixed<16,1> r_160_rhsMult2_temp_4 = (r_152_ + r_153_);
  ap_fixed<16,1> r_161_rhsMult2_4 = (r_160_rhsMult2_temp_4 + r_154_);
  ap_fixed<16,1> r_162_rhsMult3_temp_4 = (r_155_ + r_156_);
  ap_fixed<16,1> r_163_rhsMult3_4 = (r_162_rhsMult3_temp_4 + r_157_);
  ap_fixed<16,1> r_164_rhsMult_4_0 = r_159_rhsMult1_4;
  ap_fixed<16,1> r_164_rhsMult_4_1 = r_161_rhsMult2_4;
  ap_fixed<16,1> r_164_rhsMult_4_2 = r_163_rhsMult3_4;
  ap_fixed<16,1> f_angular_first_4_0 = r_164_rhsMult_4_0;
  ap_fixed<16,1> f_angular_first_4_1 = r_164_rhsMult_4_1;
  ap_fixed<16,1> f_angular_first_4_2 = r_164_rhsMult_4_2;
  ap_fixed<16,1> _tmp466 = (lever_4_0 * f_linear_3_4_1);
  ap_fixed<16,3> _tmp467 = (lever_4_1 * f_linear_3_4_0);
  ap_fixed<16,3> f_angular_1_4_0 = (_tmp466 - _tmp467);
  ap_fixed<16,3> _tmp468 = (lever_4_2 * f_linear_3_4_0);
  ap_fixed<16,1> _tmp469 = (lever_4_0 * f_linear_3_4_2);
  ap_fixed<16,3> f_angular_1_4_1 = (_tmp468 - _tmp469);
  ap_fixed<16,1> _tmp470 = (lever_4_0 * f_linear_3_4_1);
  ap_fixed<16,3> _tmp471 = (lever_4_1 * f_linear_3_4_0);
  ap_fixed<16,3> f_angular_1_4_2 = (_tmp470 - _tmp471);
  ap_fixed<16,4> f_angular_2_4_0 = (f_angular_first_4_0 + f_angular_1_4_0);
  ap_fixed<16,3> f_angular_2_4_1 = (f_angular_first_4_1 + f_angular_1_4_1);
  ap_fixed<16,3> f_angular_2_4_2 = (f_angular_first_4_2 + f_angular_1_4_2);
  ap_fixed<16,7> _tmp472 = (act_inv_angular_4_0 * h_linear_4_1);
  ap_fixed<16,7> _tmp473 = (act_inv_angular_4_1 * h_linear_4_0);
  ap_fixed<16,8> f_linear_4_temp_4_0 = (_tmp472 - _tmp473);
  ap_fixed<16,7> _tmp474 = (act_inv_angular_4_2 * h_linear_4_0);
  ap_fixed<16,5> _tmp475 = (act_inv_angular_4_0 * h_linear_4_2);
  ap_fixed<16,7> f_linear_4_temp_4_1 = (_tmp474 - _tmp475);
  ap_fixed<16,7> _tmp476 = (act_inv_angular_4_0 * h_linear_4_1);
  ap_fixed<16,7> _tmp477 = (act_inv_angular_4_1 * h_linear_4_0);
  ap_fixed<16,8> f_linear_4_temp_4_2 = (_tmp476 - _tmp477);
  ap_fixed<16,9> f_linear_4_4_0 = (f_linear_3_4_0 + f_linear_4_temp_4_0);
  ap_fixed<16,8> f_linear_4_4_1 = (f_linear_3_4_1 + f_linear_4_temp_4_1);
  ap_fixed<16,9> f_linear_4_4_2 = (f_linear_3_4_2 + f_linear_4_temp_4_2);
  ap_fixed<16,2> _tmp478 = (act_inv_angular_4_0 * h_angular_first_4_1);
  ap_fixed<16,2> _tmp479 = (act_inv_angular_4_1 * h_angular_first_4_0);
  ap_fixed<16,3> f_angular_3_temp_4_0 = (_tmp478 - _tmp479);
  ap_fixed<16,2> _tmp480 = (act_inv_angular_4_2 * h_angular_first_4_0);
  ap_fixed<16,1> _tmp481 = (act_inv_angular_4_0 * h_angular_first_4_2);
  ap_fixed<16,2> f_angular_3_temp_4_1 = (_tmp480 - _tmp481);
  ap_fixed<16,2> _tmp482 = (act_inv_angular_4_0 * h_angular_first_4_1);
  ap_fixed<16,2> _tmp483 = (act_inv_angular_4_1 * h_angular_first_4_0);
  ap_fixed<16,3> f_angular_3_temp_4_2 = (_tmp482 - _tmp483);
  ap_fixed<16,5> f_angular_3_4_0 = (f_angular_2_4_0 + f_angular_3_temp_4_0);
  ap_fixed<16,4> f_angular_3_4_1 = (f_angular_2_4_1 + f_angular_3_temp_4_1);
  ap_fixed<16,4> f_angular_3_4_2 = (f_angular_2_4_2 + f_angular_3_temp_4_2);
  ap_fixed<16,7> _tmp484 = (act_inv_linear_4_0 * h_linear_4_1);
  ap_fixed<16,7> _tmp485 = (act_inv_linear_4_1 * h_linear_4_0);
  ap_fixed<16,8> f_angular_4_temp_4_0 = (_tmp484 - _tmp485);
  ap_fixed<16,5> _tmp486 = (act_inv_linear_4_2 * h_linear_4_0);
  ap_fixed<16,5> _tmp487 = (act_inv_linear_4_0 * h_linear_4_2);
  ap_fixed<16,6> f_angular_4_temp_4_1 = (_tmp486 - _tmp487);
  ap_fixed<16,7> _tmp488 = (act_inv_linear_4_0 * h_linear_4_1);
  ap_fixed<16,7> _tmp489 = (act_inv_linear_4_1 * h_linear_4_0);
  ap_fixed<16,8> f_angular_4_temp_4_2 = (_tmp488 - _tmp489);
  ap_fixed<16,8> f_angular_4_4_0 = (f_angular_3_4_0 + f_angular_4_temp_4_0);
  ap_fixed<16,6> f_angular_4_4_1 = (f_angular_3_4_1 + f_angular_4_temp_4_1);
  ap_fixed<16,8> f_angular_4_4_2 = (f_angular_3_4_2 + f_angular_4_temp_4_2);
  ap_fixed<16,4> h_rnea_firstpass4_0 = h_linear_4_0;
  ap_fixed<16,4> h_rnea_firstpass4_1 = h_linear_4_1;
  ap_fixed<16,2> h_rnea_firstpass4_2 = h_linear_4_2;
  ap_fixed<16,1> h_rnea_firstpass4_3 = h_angular_4_0;
  ap_fixed<16,1> h_rnea_firstpass4_4 = h_angular_4_1;
  ap_fixed<16,1> h_rnea_firstpass4_5 = h_angular_4_2;
  ap_fixed<16,9> f_rnea_firstpass4_0 = f_linear_4_4_0;
  ap_fixed<16,8> f_rnea_firstpass4_1 = f_linear_4_4_1;
  ap_fixed<16,9> f_rnea_firstpass4_2 = f_linear_4_4_2;
  ap_fixed<16,8> f_rnea_firstpass4_3 = f_angular_4_4_0;
  ap_fixed<16,6> f_rnea_firstpass4_4 = f_angular_4_4_1;
  ap_fixed<16,8> f_rnea_firstpass4_5 = f_angular_4_4_2;
  ap_fixed<16,4> r_165_new_v_4_0 = act_inv_linear_4_0;
  ap_fixed<16,4> r_165_new_v_4_1 = act_inv_linear_4_1;
  ap_fixed<16,2> r_165_new_v_4_2 = act_inv_linear_4_2;
  ap_fixed<16,4> r_165_new_v_4_3 = act_inv_angular_4_0;
  ap_fixed<16,4> r_165_new_v_4_4 = act_inv_angular_4_1;
  ap_fixed<16,4> r_165_new_v_4_5 = act_inv_angular_4_2;
  ap_fixed<16,2> rotation_matrix_5_0_0 = qcos_5;
  ap_fixed<16,2> rotation_matrix_5_0_1 = -(qsin_5);
  ap_fixed<16,1> rotation_matrix_5_0_2 = 0.0;
  ap_fixed<16,2> rotation_matrix_5_1_0 = qsin_5;
  ap_fixed<16,2> rotation_matrix_5_1_1 = qcos_5;
  ap_fixed<16,1> rotation_matrix_5_1_2 = 0.0;
  ap_fixed<16,1> rotation_matrix_5_2_0 = 0.0;
  ap_fixed<16,1> rotation_matrix_5_2_1 = 0.0;
  ap_fixed<16,2> rotation_matrix_5_2_2 = 1.0;
  ap_fixed<16,2> limi_rotation_5_0_0 = rotation_matrix_5_0_0;
  ap_fixed<16,2> limi_rotation_5_0_1 = rotation_matrix_5_0_1;
  ap_fixed<16,1> limi_rotation_5_0_2 = 0.0;
  ap_fixed<16,1> limi_rotation_5_1_0 = 0.0;
  ap_fixed<16,1> limi_rotation_5_1_1 = 0.0;
  ap_fixed<16,2> limi_rotation_5_1_2 = -1.0;
  ap_fixed<16,2> limi_rotation_5_2_0 = rotation_matrix_5_1_0;
  ap_fixed<16,2> limi_rotation_5_2_1 = rotation_matrix_5_1_1;
  ap_fixed<16,1> limi_rotation_5_2_2 = 0.0;
  ap_fixed<16,1> v_linear_5_0 = data_v_5_0;
  ap_fixed<16,1> v_linear_5_1 = data_v_5_1;
  ap_fixed<16,1> v_linear_5_2 = data_v_5_2;
  ap_fixed<16,1> v_angular_5_0 = data_v_5_3;
  ap_fixed<16,1> v_angular_5_1 = data_v_5_4;
  ap_fixed<16,2> v_angular_5_2 = v_5;
  ap_fixed<16,4> parent_v_linear_5_0 = r_165_new_v_4_0;
  ap_fixed<16,4> parent_v_linear_5_1 = r_165_new_v_4_1;
  ap_fixed<16,2> parent_v_linear_5_2 = r_165_new_v_4_2;
  ap_fixed<16,4> parent_v_angular_5_0 = r_165_new_v_4_3;
  ap_fixed<16,4> parent_v_angular_5_1 = r_165_new_v_4_4;
  ap_fixed<16,4> parent_v_angular_5_2 = r_165_new_v_4_5;
  ap_fixed<16,7> parent_a_gf_linear_5_0 = new_a_gf_up3_4_0;
  ap_fixed<16,7> parent_a_gf_linear_5_1 = new_a_gf_up3_4_1;
  ap_fixed<16,6> parent_a_gf_linear_5_2 = new_a_gf_up3_4_2;
  ap_fixed<16,6> parent_a_gf_angular_5_0 = new_a_gf_up3_4_3;
  ap_fixed<16,6> parent_a_gf_angular_5_1 = new_a_gf_up3_4_4;
  ap_fixed<16,5> parent_a_gf_angular_5_2 = new_a_gf_up3_4_5;
  ap_fixed<16,1> _tmp490 = (limi_translation_5_0 * parent_v_angular_5_1);
  ap_fixed<16,1> _tmp491 = (limi_translation_5_1 * parent_v_angular_5_0);
  ap_fixed<16,1> actInv1_5_0 = (_tmp490 - _tmp491);
  ap_fixed<16,1> _tmp492 = (limi_translation_5_2 * parent_v_angular_5_0);
  ap_fixed<16,1> _tmp493 = (limi_translation_5_0 * parent_v_angular_5_2);
  ap_fixed<16,1> actInv1_5_1 = (_tmp492 - _tmp493);
  ap_fixed<16,1> _tmp494 = (limi_translation_5_0 * parent_v_angular_5_1);
  ap_fixed<16,1> _tmp495 = (limi_translation_5_1 * parent_v_angular_5_0);
  ap_fixed<16,1> actInv1_5_2 = (_tmp494 - _tmp495);
  ap_fixed<16,4> actInv2_5_0 = (parent_v_linear_5_0 - actInv1_5_0);
  ap_fixed<16,4> actInv2_5_1 = (parent_v_linear_5_1 - actInv1_5_1);
  ap_fixed<16,2> actInv2_5_2 = (parent_v_linear_5_2 - actInv1_5_2);
  ap_fixed<16,2> actInv3_5_0_0 = limi_rotation_5_0_0;
  ap_fixed<16,2> actInv3_5_1_0 = limi_rotation_5_0_1;
  ap_fixed<16,1> actInv3_5_2_0 = limi_rotation_5_0_2;
  ap_fixed<16,1> actInv3_5_0_1 = limi_rotation_5_1_0;
  ap_fixed<16,1> actInv3_5_1_1 = limi_rotation_5_1_1;
  ap_fixed<16,2> actInv3_5_2_1 = limi_rotation_5_1_2;
  ap_fixed<16,2> actInv3_5_0_2 = limi_rotation_5_2_0;
  ap_fixed<16,2> actInv3_5_1_2 = limi_rotation_5_2_1;
  ap_fixed<16,1> actInv3_5_2_2 = limi_rotation_5_2_2;
  ap_fixed<16,4> _tmp496 = (actInv3_5_0_0 * actInv2_5_0);
  ap_fixed<16,1> _tmp497 = (actInv3_5_0_1 * actInv2_5_1);
  ap_fixed<16,4> _tmp498 = (_tmp496 + _tmp497);
  ap_fixed<16,2> _tmp499 = (actInv3_5_0_2 * actInv2_5_2);
  ap_fixed<16,4> actInv4_5_0 = (_tmp498 + _tmp499);
  ap_fixed<16,4> _tmp500 = (actInv3_5_1_0 * actInv2_5_0);
  ap_fixed<16,1> _tmp501 = (actInv3_5_1_1 * actInv2_5_1);
  ap_fixed<16,4> _tmp502 = (_tmp500 + _tmp501);
  ap_fixed<16,2> _tmp503 = (actInv3_5_1_2 * actInv2_5_2);
  ap_fixed<16,4> actInv4_5_1 = (_tmp502 + _tmp503);
  ap_fixed<16,1> _tmp504 = (actInv3_5_2_0 * actInv2_5_0);
  ap_fixed<16,4> _tmp505 = (actInv3_5_2_1 * actInv2_5_1);
  ap_fixed<16,4> _tmp506 = (_tmp504 + _tmp505);
  ap_fixed<16,1> _tmp507 = (actInv3_5_2_2 * actInv2_5_2);
  ap_fixed<16,4> actInv4_5_2 = (_tmp506 + _tmp507);
  ap_fixed<16,4> act_inv_linear_5_0 = (v_linear_5_0 + actInv4_5_0);
  ap_fixed<16,4> act_inv_linear_5_1 = (v_linear_5_1 + actInv4_5_1);
  ap_fixed<16,4> act_inv_linear_5_2 = (v_linear_5_2 + actInv4_5_2);
  ap_fixed<16,4> _tmp508 = (actInv3_5_0_0 * parent_v_angular_5_0);
  ap_fixed<16,1> _tmp509 = (actInv3_5_0_1 * parent_v_angular_5_1);
  ap_fixed<16,4> _tmp510 = (_tmp508 + _tmp509);
  ap_fixed<16,4> _tmp511 = (actInv3_5_0_2 * parent_v_angular_5_2);
  ap_fixed<16,5> actInv5_5_0 = (_tmp510 + _tmp511);
  ap_fixed<16,4> _tmp512 = (actInv3_5_1_0 * parent_v_angular_5_0);
  ap_fixed<16,1> _tmp513 = (actInv3_5_1_1 * parent_v_angular_5_1);
  ap_fixed<16,4> _tmp514 = (_tmp512 + _tmp513);
  ap_fixed<16,4> _tmp515 = (actInv3_5_1_2 * parent_v_angular_5_2);
  ap_fixed<16,5> actInv5_5_1 = (_tmp514 + _tmp515);
  ap_fixed<16,1> _tmp516 = (actInv3_5_2_0 * parent_v_angular_5_0);
  ap_fixed<16,4> _tmp517 = (actInv3_5_2_1 * parent_v_angular_5_1);
  ap_fixed<16,4> _tmp518 = (_tmp516 + _tmp517);
  ap_fixed<16,1> _tmp519 = (actInv3_5_2_2 * parent_v_angular_5_2);
  ap_fixed<16,4> actInv5_5_2 = (_tmp518 + _tmp519);
  ap_fixed<16,5> act_inv_angular_5_0 = (v_angular_5_0 + actInv5_5_0);
  ap_fixed<16,5> act_inv_angular_5_1 = (v_angular_5_1 + actInv5_5_1);
  ap_fixed<16,5> act_inv_angular_5_2 = (v_angular_5_2 + actInv5_5_2);
  ap_fixed<16,2> minus_m_w_5 = -(v_5);
  ap_fixed<16,2> _tmp520 = -(minus_m_w_5);
  ap_fixed<16,4> alpha_cross1_linear_5 = (_tmp520 * act_inv_linear_5_1);
  ap_fixed<16,4> alpha_cross2_linear_5 = (minus_m_w_5 * act_inv_linear_5_0);
  ap_fixed<16,4> alpha_cross_linear_5_0 = alpha_cross1_linear_5;
  ap_fixed<16,4> alpha_cross_linear_5_1 = alpha_cross2_linear_5;
  ap_fixed<16,1> alpha_cross_linear_5_2 = 0.0;
  ap_fixed<16,2> _tmp521 = -(minus_m_w_5);
  ap_fixed<16,5> alpha_cross1_angular_5 = (_tmp521 * act_inv_angular_5_1);
  ap_fixed<16,5> alpha_cross2_angular_5 = (minus_m_w_5 * act_inv_angular_5_0);
  ap_fixed<16,5> alpha_cross_angular_5_0 = alpha_cross1_angular_5;
  ap_fixed<16,5> alpha_cross_angular_5_1 = alpha_cross2_angular_5;
  ap_fixed<16,1> alpha_cross_angular_5_2 = 0.0;
  ap_fixed<16,4> r_166_new_a_gf_5_0 = alpha_cross_linear_5_0;
  ap_fixed<16,4> r_166_new_a_gf_5_1 = alpha_cross_linear_5_1;
  ap_fixed<16,1> r_166_new_a_gf_5_2 = alpha_cross_linear_5_2;
  ap_fixed<16,5> r_166_new_a_gf_5_3 = alpha_cross_angular_5_0;
  ap_fixed<16,5> r_166_new_a_gf_5_4 = alpha_cross_angular_5_1;
  ap_fixed<16,1> r_166_new_a_gf_5_5 = alpha_cross_angular_5_2;
  ap_fixed<16,2> new_a_gf_up1_5 = (a_5 + r_166_new_a_gf_5_5);
  ap_fixed<16,4> new_a_gf2_linear_5_0 = r_166_new_a_gf_5_0;
  ap_fixed<16,4> new_a_gf2_linear_5_1 = r_166_new_a_gf_5_1;
  ap_fixed<16,1> new_a_gf2_linear_5_2 = r_166_new_a_gf_5_2;
  ap_fixed<16,5> new_a_gf2_angular_5_0 = r_166_new_a_gf_5_3;
  ap_fixed<16,5> new_a_gf2_angular_5_1 = r_166_new_a_gf_5_4;
  ap_fixed<16,2> new_a_gf2_angular_5_2 = new_a_gf_up1_5;
  ap_fixed<16,1> _tmp522 = (limi_translation_5_0 * parent_a_gf_angular_5_1);
  ap_fixed<16,1> _tmp523 = (limi_translation_5_1 * parent_a_gf_angular_5_0);
  ap_fixed<16,1> r_167_actInv1_5_0 = (_tmp522 - _tmp523);
  ap_fixed<16,1> _tmp524 = (limi_translation_5_2 * parent_a_gf_angular_5_0);
  ap_fixed<16,1> _tmp525 = (limi_translation_5_0 * parent_a_gf_angular_5_2);
  ap_fixed<16,1> r_167_actInv1_5_1 = (_tmp524 - _tmp525);
  ap_fixed<16,1> _tmp526 = (limi_translation_5_0 * parent_a_gf_angular_5_1);
  ap_fixed<16,1> _tmp527 = (limi_translation_5_1 * parent_a_gf_angular_5_0);
  ap_fixed<16,1> r_167_actInv1_5_2 = (_tmp526 - _tmp527);
  ap_fixed<16,7> r_168_actInv2_5_0 = (parent_a_gf_linear_5_0 - r_167_actInv1_5_0);
  ap_fixed<16,7> r_168_actInv2_5_1 = (parent_a_gf_linear_5_1 - r_167_actInv1_5_1);
  ap_fixed<16,6> r_168_actInv2_5_2 = (parent_a_gf_linear_5_2 - r_167_actInv1_5_2);
  ap_fixed<16,2> r_169_actInv3_5_0_0 = limi_rotation_5_0_0;
  ap_fixed<16,2> r_169_actInv3_5_1_0 = limi_rotation_5_0_1;
  ap_fixed<16,1> r_169_actInv3_5_2_0 = limi_rotation_5_0_2;
  ap_fixed<16,1> r_169_actInv3_5_0_1 = limi_rotation_5_1_0;
  ap_fixed<16,1> r_169_actInv3_5_1_1 = limi_rotation_5_1_1;
  ap_fixed<16,2> r_169_actInv3_5_2_1 = limi_rotation_5_1_2;
  ap_fixed<16,2> r_169_actInv3_5_0_2 = limi_rotation_5_2_0;
  ap_fixed<16,2> r_169_actInv3_5_1_2 = limi_rotation_5_2_1;
  ap_fixed<16,1> r_169_actInv3_5_2_2 = limi_rotation_5_2_2;
  ap_fixed<16,7> _tmp528 = (r_169_actInv3_5_0_0 * r_168_actInv2_5_0);
  ap_fixed<16,1> _tmp529 = (r_169_actInv3_5_0_1 * r_168_actInv2_5_1);
  ap_fixed<16,7> _tmp530 = (_tmp528 + _tmp529);
  ap_fixed<16,6> _tmp531 = (r_169_actInv3_5_0_2 * r_168_actInv2_5_2);
  ap_fixed<16,8> r_170_actInv4_5_0 = (_tmp530 + _tmp531);
  ap_fixed<16,7> _tmp532 = (r_169_actInv3_5_1_0 * r_168_actInv2_5_0);
  ap_fixed<16,1> _tmp533 = (r_169_actInv3_5_1_1 * r_168_actInv2_5_1);
  ap_fixed<16,7> _tmp534 = (_tmp532 + _tmp533);
  ap_fixed<16,6> _tmp535 = (r_169_actInv3_5_1_2 * r_168_actInv2_5_2);
  ap_fixed<16,8> r_170_actInv4_5_1 = (_tmp534 + _tmp535);
  ap_fixed<16,1> _tmp536 = (r_169_actInv3_5_2_0 * r_168_actInv2_5_0);
  ap_fixed<16,7> _tmp537 = (r_169_actInv3_5_2_1 * r_168_actInv2_5_1);
  ap_fixed<16,7> _tmp538 = (_tmp536 + _tmp537);
  ap_fixed<16,1> _tmp539 = (r_169_actInv3_5_2_2 * r_168_actInv2_5_2);
  ap_fixed<16,7> r_170_actInv4_5_2 = (_tmp538 + _tmp539);
  ap_fixed<16,8> r_171_act_inv_linear_5_0 = (new_a_gf2_linear_5_0 + r_170_actInv4_5_0);
  ap_fixed<16,8> r_171_act_inv_linear_5_1 = (new_a_gf2_linear_5_1 + r_170_actInv4_5_1);
  ap_fixed<16,7> r_171_act_inv_linear_5_2 = (new_a_gf2_linear_5_2 + r_170_actInv4_5_2);
  ap_fixed<16,6> _tmp540 = (r_169_actInv3_5_0_0 * parent_a_gf_angular_5_0);
  ap_fixed<16,1> _tmp541 = (r_169_actInv3_5_0_1 * parent_a_gf_angular_5_1);
  ap_fixed<16,6> _tmp542 = (_tmp540 + _tmp541);
  ap_fixed<16,5> _tmp543 = (r_169_actInv3_5_0_2 * parent_a_gf_angular_5_2);
  ap_fixed<16,7> r_172_actInv5_5_0 = (_tmp542 + _tmp543);
  ap_fixed<16,6> _tmp544 = (r_169_actInv3_5_1_0 * parent_a_gf_angular_5_0);
  ap_fixed<16,1> _tmp545 = (r_169_actInv3_5_1_1 * parent_a_gf_angular_5_1);
  ap_fixed<16,6> _tmp546 = (_tmp544 + _tmp545);
  ap_fixed<16,5> _tmp547 = (r_169_actInv3_5_1_2 * parent_a_gf_angular_5_2);
  ap_fixed<16,7> r_172_actInv5_5_1 = (_tmp546 + _tmp547);
  ap_fixed<16,1> _tmp548 = (r_169_actInv3_5_2_0 * parent_a_gf_angular_5_0);
  ap_fixed<16,6> _tmp549 = (r_169_actInv3_5_2_1 * parent_a_gf_angular_5_1);
  ap_fixed<16,6> _tmp550 = (_tmp548 + _tmp549);
  ap_fixed<16,1> _tmp551 = (r_169_actInv3_5_2_2 * parent_a_gf_angular_5_2);
  ap_fixed<16,6> r_172_actInv5_5_2 = (_tmp550 + _tmp551);
  ap_fixed<16,7> r_173_act_inv_angular_5_0 = (new_a_gf2_angular_5_0 + r_172_actInv5_5_0);
  ap_fixed<16,7> r_173_act_inv_angular_5_1 = (new_a_gf2_angular_5_1 + r_172_actInv5_5_1);
  ap_fixed<16,6> r_173_act_inv_angular_5_2 = (new_a_gf2_angular_5_2 + r_172_actInv5_5_2);
  ap_fixed<16,8> new_a_gf_up3_5_0 = r_171_act_inv_linear_5_0;
  ap_fixed<16,8> new_a_gf_up3_5_1 = r_171_act_inv_linear_5_1;
  ap_fixed<16,7> new_a_gf_up3_5_2 = r_171_act_inv_linear_5_2;
  ap_fixed<16,7> new_a_gf_up3_5_3 = r_173_act_inv_angular_5_0;
  ap_fixed<16,7> new_a_gf_up3_5_4 = r_173_act_inv_angular_5_1;
  ap_fixed<16,6> new_a_gf_up3_5_5 = r_173_act_inv_angular_5_2;
  ap_fixed<16,1> _tmp552 = (lever_5_0 * act_inv_angular_5_1);
  ap_fixed<16,1> _tmp553 = (lever_5_1 * act_inv_angular_5_0);
  ap_fixed<16,1> h_linear_1_5_0 = (_tmp552 - _tmp553);
  ap_fixed<16,1> _tmp554 = (lever_5_2 * act_inv_angular_5_0);
  ap_fixed<16,1> _tmp555 = (lever_5_0 * act_inv_angular_5_2);
  ap_fixed<16,1> h_linear_1_5_1 = (_tmp554 - _tmp555);
  ap_fixed<16,1> _tmp556 = (lever_5_0 * act_inv_angular_5_1);
  ap_fixed<16,1> _tmp557 = (lever_5_1 * act_inv_angular_5_0);
  ap_fixed<16,1> h_linear_1_5_2 = (_tmp556 - _tmp557);
  ap_fixed<16,4> h_linear_2_5_0 = (act_inv_linear_5_0 - h_linear_1_5_0);
  ap_fixed<16,4> h_linear_2_5_1 = (act_inv_linear_5_1 - h_linear_1_5_1);
  ap_fixed<16,4> h_linear_2_5_2 = (act_inv_linear_5_2 - h_linear_1_5_2);
  ap_fixed<16,5> h_linear_5_0 = (masses_5 * h_linear_2_5_0);
  ap_fixed<16,5> h_linear_5_1 = (masses_5 * h_linear_2_5_1);
  ap_fixed<16,5> h_linear_5_2 = (masses_5 * h_linear_2_5_2);
  ap_fixed<16,1> r_174_ = (inertia_5_0_0 * act_inv_angular_5_0);
  ap_fixed<16,1> r_175_ = (inertia_5_0_1 * act_inv_angular_5_1);
  ap_fixed<16,1> r_176_ = (inertia_5_0_2 * act_inv_angular_5_2);
  ap_fixed<16,1> r_177_ = (inertia_5_0_1 * act_inv_angular_5_0);
  ap_fixed<16,1> r_178_ = (inertia_5_1_1 * act_inv_angular_5_1);
  ap_fixed<16,1> r_179_ = (inertia_5_1_2 * act_inv_angular_5_2);
  ap_fixed<16,1> r_180_ = (inertia_5_0_2 * act_inv_angular_5_0);
  ap_fixed<16,1> r_181_ = (inertia_5_1_2 * act_inv_angular_5_1);
  ap_fixed<16,1> r_182_ = (inertia_5_2_2 * act_inv_angular_5_2);
  ap_fixed<16,1> rhsMult1_temp_5 = (r_174_ + r_175_);
  ap_fixed<16,1> rhsMult1_5 = (rhsMult1_temp_5 + r_176_);
  ap_fixed<16,1> rhsMult2_temp_5 = (r_177_ + r_178_);
  ap_fixed<16,1> rhsMult2_5 = (rhsMult2_temp_5 + r_179_);
  ap_fixed<16,1> rhsMult3_temp_5 = (r_180_ + r_181_);
  ap_fixed<16,1> rhsMult3_5 = (rhsMult3_temp_5 + r_182_);
  ap_fixed<16,1> rhsMult_5_0 = rhsMult1_5;
  ap_fixed<16,1> rhsMult_5_1 = rhsMult2_5;
  ap_fixed<16,1> rhsMult_5_2 = rhsMult3_5;
  ap_fixed<16,1> h_angular_first_5_0 = rhsMult_5_0;
  ap_fixed<16,1> h_angular_first_5_1 = rhsMult_5_1;
  ap_fixed<16,1> h_angular_first_5_2 = rhsMult_5_2;
  ap_fixed<16,1> _tmp558 = (lever_5_0 * h_linear_5_1);
  ap_fixed<16,1> _tmp559 = (lever_5_1 * h_linear_5_0);
  ap_fixed<16,1> h_angular_1_5_0 = (_tmp558 - _tmp559);
  ap_fixed<16,1> _tmp560 = (lever_5_2 * h_linear_5_0);
  ap_fixed<16,1> _tmp561 = (lever_5_0 * h_linear_5_2);
  ap_fixed<16,1> h_angular_1_5_1 = (_tmp560 - _tmp561);
  ap_fixed<16,1> _tmp562 = (lever_5_0 * h_linear_5_1);
  ap_fixed<16,1> _tmp563 = (lever_5_1 * h_linear_5_0);
  ap_fixed<16,1> h_angular_1_5_2 = (_tmp562 - _tmp563);
  ap_fixed<16,1> h_angular_5_0 = (h_angular_first_5_0 + h_angular_1_5_0);
  ap_fixed<16,1> h_angular_5_1 = (h_angular_first_5_1 + h_angular_1_5_1);
  ap_fixed<16,1> h_angular_5_2 = (h_angular_first_5_2 + h_angular_1_5_2);
  ap_fixed<16,3> _tmp564 = (lever_5_0 * r_173_act_inv_angular_5_1);
  ap_fixed<16,1> _tmp565 = (lever_5_1 * r_173_act_inv_angular_5_0);
  ap_fixed<16,3> f_linear_1_5_0 = (_tmp564 - _tmp565);
  ap_fixed<16,1> _tmp566 = (lever_5_2 * r_173_act_inv_angular_5_0);
  ap_fixed<16,2> _tmp567 = (lever_5_0 * r_173_act_inv_angular_5_2);
  ap_fixed<16,3> f_linear_1_5_1 = (_tmp566 - _tmp567);
  ap_fixed<16,3> _tmp568 = (lever_5_0 * r_173_act_inv_angular_5_1);
  ap_fixed<16,1> _tmp569 = (lever_5_1 * r_173_act_inv_angular_5_0);
  ap_fixed<16,3> f_linear_1_5_2 = (_tmp568 - _tmp569);
  ap_fixed<16,8> f_linear_2_5_0 = (r_171_act_inv_linear_5_0 - f_linear_1_5_0);
  ap_fixed<16,8> f_linear_2_5_1 = (r_171_act_inv_linear_5_1 - f_linear_1_5_1);
  ap_fixed<16,7> f_linear_2_5_2 = (r_171_act_inv_linear_5_2 - f_linear_1_5_2);
  ap_fixed<16,9> f_linear_3_5_0 = (masses_5 * f_linear_2_5_0);
  ap_fixed<16,9> f_linear_3_5_1 = (masses_5 * f_linear_2_5_1);
  ap_fixed<16,8> f_linear_3_5_2 = (masses_5 * f_linear_2_5_2);
  ap_fixed<16,1> r_183_ = (inertia_5_0_0 * r_173_act_inv_angular_5_0);
  ap_fixed<16,1> r_184_ = (inertia_5_0_1 * r_173_act_inv_angular_5_1);
  ap_fixed<16,1> r_185_ = (inertia_5_0_2 * r_173_act_inv_angular_5_2);
  ap_fixed<16,1> r_186_ = (inertia_5_0_1 * r_173_act_inv_angular_5_0);
  ap_fixed<16,1> r_187_ = (inertia_5_1_1 * r_173_act_inv_angular_5_1);
  ap_fixed<16,1> r_188_ = (inertia_5_1_2 * r_173_act_inv_angular_5_2);
  ap_fixed<16,1> r_189_ = (inertia_5_0_2 * r_173_act_inv_angular_5_0);
  ap_fixed<16,1> r_190_ = (inertia_5_1_2 * r_173_act_inv_angular_5_1);
  ap_fixed<16,1> r_191_ = (inertia_5_2_2 * r_173_act_inv_angular_5_2);
  ap_fixed<16,1> r_192_rhsMult1_temp_5 = (r_183_ + r_184_);
  ap_fixed<16,1> r_193_rhsMult1_5 = (r_192_rhsMult1_temp_5 + r_185_);
  ap_fixed<16,1> r_194_rhsMult2_temp_5 = (r_186_ + r_187_);
  ap_fixed<16,1> r_195_rhsMult2_5 = (r_194_rhsMult2_temp_5 + r_188_);
  ap_fixed<16,1> r_196_rhsMult3_temp_5 = (r_189_ + r_190_);
  ap_fixed<16,1> r_197_rhsMult3_5 = (r_196_rhsMult3_temp_5 + r_191_);
  ap_fixed<16,1> r_198_rhsMult_5_0 = r_193_rhsMult1_5;
  ap_fixed<16,1> r_198_rhsMult_5_1 = r_195_rhsMult2_5;
  ap_fixed<16,1> r_198_rhsMult_5_2 = r_197_rhsMult3_5;
  ap_fixed<16,1> f_angular_first_5_0 = r_198_rhsMult_5_0;
  ap_fixed<16,1> f_angular_first_5_1 = r_198_rhsMult_5_1;
  ap_fixed<16,1> f_angular_first_5_2 = r_198_rhsMult_5_2;
  ap_fixed<16,5> _tmp570 = (lever_5_0 * f_linear_3_5_1);
  ap_fixed<16,3> _tmp571 = (lever_5_1 * f_linear_3_5_0);
  ap_fixed<16,5> f_angular_1_5_0 = (_tmp570 - _tmp571);
  ap_fixed<16,2> _tmp572 = (lever_5_2 * f_linear_3_5_0);
  ap_fixed<16,4> _tmp573 = (lever_5_0 * f_linear_3_5_2);
  ap_fixed<16,4> f_angular_1_5_1 = (_tmp572 - _tmp573);
  ap_fixed<16,5> _tmp574 = (lever_5_0 * f_linear_3_5_1);
  ap_fixed<16,3> _tmp575 = (lever_5_1 * f_linear_3_5_0);
  ap_fixed<16,5> f_angular_1_5_2 = (_tmp574 - _tmp575);
  ap_fixed<16,5> f_angular_2_5_0 = (f_angular_first_5_0 + f_angular_1_5_0);
  ap_fixed<16,4> f_angular_2_5_1 = (f_angular_first_5_1 + f_angular_1_5_1);
  ap_fixed<16,5> f_angular_2_5_2 = (f_angular_first_5_2 + f_angular_1_5_2);
  ap_fixed<16,9> _tmp576 = (act_inv_angular_5_0 * h_linear_5_1);
  ap_fixed<16,9> _tmp577 = (act_inv_angular_5_1 * h_linear_5_0);
  ap_fixed<16,10> f_linear_4_temp_5_0 = (_tmp576 - _tmp577);
  ap_fixed<16,8> _tmp578 = (act_inv_angular_5_2 * h_linear_5_0);
  ap_fixed<16,9> _tmp579 = (act_inv_angular_5_0 * h_linear_5_2);
  ap_fixed<16,9> f_linear_4_temp_5_1 = (_tmp578 - _tmp579);
  ap_fixed<16,9> _tmp580 = (act_inv_angular_5_0 * h_linear_5_1);
  ap_fixed<16,9> _tmp581 = (act_inv_angular_5_1 * h_linear_5_0);
  ap_fixed<16,10> f_linear_4_temp_5_2 = (_tmp580 - _tmp581);
  ap_fixed<16,10> f_linear_4_5_0 = (f_linear_3_5_0 + f_linear_4_temp_5_0);
  ap_fixed<16,10> f_linear_4_5_1 = (f_linear_3_5_1 + f_linear_4_temp_5_1);
  ap_fixed<16,10> f_linear_4_5_2 = (f_linear_3_5_2 + f_linear_4_temp_5_2);
  ap_fixed<16,1> _tmp582 = (act_inv_angular_5_0 * h_angular_first_5_1);
  ap_fixed<16,1> _tmp583 = (act_inv_angular_5_1 * h_angular_first_5_0);
  ap_fixed<16,2> f_angular_3_temp_5_0 = (_tmp582 - _tmp583);
  ap_fixed<16,1> _tmp584 = (act_inv_angular_5_2 * h_angular_first_5_0);
  ap_fixed<16,1> _tmp585 = (act_inv_angular_5_0 * h_angular_first_5_2);
  ap_fixed<16,2> f_angular_3_temp_5_1 = (_tmp584 - _tmp585);
  ap_fixed<16,1> _tmp586 = (act_inv_angular_5_0 * h_angular_first_5_1);
  ap_fixed<16,1> _tmp587 = (act_inv_angular_5_1 * h_angular_first_5_0);
  ap_fixed<16,2> f_angular_3_temp_5_2 = (_tmp586 - _tmp587);
  ap_fixed<16,5> f_angular_3_5_0 = (f_angular_2_5_0 + f_angular_3_temp_5_0);
  ap_fixed<16,5> f_angular_3_5_1 = (f_angular_2_5_1 + f_angular_3_temp_5_1);
  ap_fixed<16,5> f_angular_3_5_2 = (f_angular_2_5_2 + f_angular_3_temp_5_2);
  ap_fixed<16,8> _tmp588 = (act_inv_linear_5_0 * h_linear_5_1);
  ap_fixed<16,8> _tmp589 = (act_inv_linear_5_1 * h_linear_5_0);
  ap_fixed<16,9> f_angular_4_temp_5_0 = (_tmp588 - _tmp589);
  ap_fixed<16,8> _tmp590 = (act_inv_linear_5_2 * h_linear_5_0);
  ap_fixed<16,8> _tmp591 = (act_inv_linear_5_0 * h_linear_5_2);
  ap_fixed<16,9> f_angular_4_temp_5_1 = (_tmp590 - _tmp591);
  ap_fixed<16,8> _tmp592 = (act_inv_linear_5_0 * h_linear_5_1);
  ap_fixed<16,8> _tmp593 = (act_inv_linear_5_1 * h_linear_5_0);
  ap_fixed<16,9> f_angular_4_temp_5_2 = (_tmp592 - _tmp593);
  ap_fixed<16,9> f_angular_4_5_0 = (f_angular_3_5_0 + f_angular_4_temp_5_0);
  ap_fixed<16,9> f_angular_4_5_1 = (f_angular_3_5_1 + f_angular_4_temp_5_1);
  ap_fixed<16,9> f_angular_4_5_2 = (f_angular_3_5_2 + f_angular_4_temp_5_2);
  ap_fixed<16,5> h_rnea_firstpass5_0 = h_linear_5_0;
  ap_fixed<16,5> h_rnea_firstpass5_1 = h_linear_5_1;
  ap_fixed<16,5> h_rnea_firstpass5_2 = h_linear_5_2;
  ap_fixed<16,1> h_rnea_firstpass5_3 = h_angular_5_0;
  ap_fixed<16,1> h_rnea_firstpass5_4 = h_angular_5_1;
  ap_fixed<16,1> h_rnea_firstpass5_5 = h_angular_5_2;
  ap_fixed<16,10> f_rnea_firstpass5_0 = f_linear_4_5_0;
  ap_fixed<16,10> f_rnea_firstpass5_1 = f_linear_4_5_1;
  ap_fixed<16,10> f_rnea_firstpass5_2 = f_linear_4_5_2;
  ap_fixed<16,9> f_rnea_firstpass5_3 = f_angular_4_5_0;
  ap_fixed<16,9> f_rnea_firstpass5_4 = f_angular_4_5_1;
  ap_fixed<16,9> f_rnea_firstpass5_5 = f_angular_4_5_2;
  ap_fixed<16,4> r_199_new_v_5_0 = act_inv_linear_5_0;
  ap_fixed<16,4> r_199_new_v_5_1 = act_inv_linear_5_1;
  ap_fixed<16,4> r_199_new_v_5_2 = act_inv_linear_5_2;
  ap_fixed<16,5> r_199_new_v_5_3 = act_inv_angular_5_0;
  ap_fixed<16,5> r_199_new_v_5_4 = act_inv_angular_5_1;
  ap_fixed<16,5> r_199_new_v_5_5 = act_inv_angular_5_2;
  ap_fixed<16,9> data_tau_temp_5 = f_rnea_firstpass5_5;
  ap_fixed<16,10> f_linear_5_0 = f_rnea_firstpass5_0;
  ap_fixed<16,10> f_linear_5_1 = f_rnea_firstpass5_1;
  ap_fixed<16,10> f_linear_5_2 = f_rnea_firstpass5_2;
  ap_fixed<16,9> f_angular_5_0 = f_rnea_firstpass5_3;
  ap_fixed<16,9> f_angular_5_1 = f_rnea_firstpass5_4;
  ap_fixed<16,9> f_angular_5_2 = f_rnea_firstpass5_5;
  ap_fixed<16,10> _tmp594 = (limi_rotation_5_0_0 * f_linear_5_0);
  ap_fixed<16,10> _tmp595 = (limi_rotation_5_0_1 * f_linear_5_1);
  ap_fixed<16,11> _tmp596 = (_tmp594 + _tmp595);
  ap_fixed<16,1> _tmp597 = (limi_rotation_5_0_2 * f_linear_5_2);
  ap_fixed<16,11> new_f_linear_5_0 = (_tmp596 + _tmp597);
  ap_fixed<16,1> _tmp598 = (limi_rotation_5_1_0 * f_linear_5_0);
  ap_fixed<16,1> _tmp599 = (limi_rotation_5_1_1 * f_linear_5_1);
  ap_fixed<16,1> _tmp600 = (_tmp598 + _tmp599);
  ap_fixed<16,10> _tmp601 = (limi_rotation_5_1_2 * f_linear_5_2);
  ap_fixed<16,10> new_f_linear_5_1 = (_tmp600 + _tmp601);
  ap_fixed<16,10> _tmp602 = (limi_rotation_5_2_0 * f_linear_5_0);
  ap_fixed<16,10> _tmp603 = (limi_rotation_5_2_1 * f_linear_5_1);
  ap_fixed<16,11> _tmp604 = (_tmp602 + _tmp603);
  ap_fixed<16,1> _tmp605 = (limi_rotation_5_2_2 * f_linear_5_2);
  ap_fixed<16,11> new_f_linear_5_2 = (_tmp604 + _tmp605);
  ap_fixed<16,9> _tmp606 = (limi_rotation_5_0_0 * f_angular_5_0);
  ap_fixed<16,9> _tmp607 = (limi_rotation_5_0_1 * f_angular_5_1);
  ap_fixed<16,10> _tmp608 = (_tmp606 + _tmp607);
  ap_fixed<16,1> _tmp609 = (limi_rotation_5_0_2 * f_angular_5_2);
  ap_fixed<16,10> new_f_angular_temp_5_0 = (_tmp608 + _tmp609);
  ap_fixed<16,1> _tmp610 = (limi_rotation_5_1_0 * f_angular_5_0);
  ap_fixed<16,1> _tmp611 = (limi_rotation_5_1_1 * f_angular_5_1);
  ap_fixed<16,1> _tmp612 = (_tmp610 + _tmp611);
  ap_fixed<16,9> _tmp613 = (limi_rotation_5_1_2 * f_angular_5_2);
  ap_fixed<16,9> new_f_angular_temp_5_1 = (_tmp612 + _tmp613);
  ap_fixed<16,9> _tmp614 = (limi_rotation_5_2_0 * f_angular_5_0);
  ap_fixed<16,9> _tmp615 = (limi_rotation_5_2_1 * f_angular_5_1);
  ap_fixed<16,10> _tmp616 = (_tmp614 + _tmp615);
  ap_fixed<16,1> _tmp617 = (limi_rotation_5_2_2 * f_angular_5_2);
  ap_fixed<16,10> new_f_angular_temp_5_2 = (_tmp616 + _tmp617);
  ap_fixed<16,1> _tmp618 = (limi_translation_5_0 * new_f_linear_5_1);
  ap_fixed<16,1> _tmp619 = (limi_translation_5_1 * new_f_linear_5_0);
  ap_fixed<16,1> f_angular_cross_5_0 = (_tmp618 - _tmp619);
  ap_fixed<16,1> _tmp620 = (limi_translation_5_2 * new_f_linear_5_0);
  ap_fixed<16,1> _tmp621 = (limi_translation_5_0 * new_f_linear_5_2);
  ap_fixed<16,1> f_angular_cross_5_1 = (_tmp620 - _tmp621);
  ap_fixed<16,1> _tmp622 = (limi_translation_5_0 * new_f_linear_5_1);
  ap_fixed<16,1> _tmp623 = (limi_translation_5_1 * new_f_linear_5_0);
  ap_fixed<16,1> f_angular_cross_5_2 = (_tmp622 - _tmp623);
  ap_fixed<16,10> new_f_angular_5_0 = (new_f_angular_temp_5_0 + f_angular_cross_5_0);
  ap_fixed<16,9> new_f_angular_5_1 = (new_f_angular_temp_5_1 + f_angular_cross_5_1);
  ap_fixed<16,10> new_f_angular_5_2 = (new_f_angular_temp_5_2 + f_angular_cross_5_2);
  ap_fixed<16,11> r_200_new_f_5_0 = new_f_linear_5_0;
  ap_fixed<16,10> r_200_new_f_5_1 = new_f_linear_5_1;
  ap_fixed<16,11> r_200_new_f_5_2 = new_f_linear_5_2;
  ap_fixed<16,10> r_200_new_f_5_3 = new_f_angular_5_0;
  ap_fixed<16,9> r_200_new_f_5_4 = new_f_angular_5_1;
  ap_fixed<16,10> r_200_new_f_5_5 = new_f_angular_5_2;
  ap_fixed<16,11> new_data_f_parent_5_0 = (f_rnea_firstpass4_0 + r_200_new_f_5_0);
  ap_fixed<16,10> new_data_f_parent_5_1 = (f_rnea_firstpass4_1 + r_200_new_f_5_1);
  ap_fixed<16,11> new_data_f_parent_5_2 = (f_rnea_firstpass4_2 + r_200_new_f_5_2);
  ap_fixed<16,10> new_data_f_parent_5_3 = (f_rnea_firstpass4_3 + r_200_new_f_5_3);
  ap_fixed<16,9> new_data_f_parent_5_4 = (f_rnea_firstpass4_4 + r_200_new_f_5_4);
  ap_fixed<16,10> new_data_f_parent_5_5 = (f_rnea_firstpass4_5 + r_200_new_f_5_5);
  ap_fixed<16,10> data_tau_temp_4 = new_data_f_parent_5_5;
  ap_fixed<16,11> f_linear_4_0 = new_data_f_parent_5_0;
  ap_fixed<16,10> f_linear_4_1 = new_data_f_parent_5_1;
  ap_fixed<16,11> f_linear_4_2 = new_data_f_parent_5_2;
  ap_fixed<16,10> f_angular_4_0 = new_data_f_parent_5_3;
  ap_fixed<16,9> f_angular_4_1 = new_data_f_parent_5_4;
  ap_fixed<16,10> f_angular_4_2 = new_data_f_parent_5_5;
  ap_fixed<16,11> _tmp624 = (limi_rotation_4_0_0 * f_linear_4_0);
  ap_fixed<16,10> _tmp625 = (limi_rotation_4_0_1 * f_linear_4_1);
  ap_fixed<16,12> _tmp626 = (_tmp624 + _tmp625);
  ap_fixed<16,1> _tmp627 = (limi_rotation_4_0_2 * f_linear_4_2);
  ap_fixed<16,12> new_f_linear_4_0 = (_tmp626 + _tmp627);
  ap_fixed<16,1> _tmp628 = (limi_rotation_4_1_0 * f_linear_4_0);
  ap_fixed<16,1> _tmp629 = (limi_rotation_4_1_1 * f_linear_4_1);
  ap_fixed<16,1> _tmp630 = (_tmp628 + _tmp629);
  ap_fixed<16,11> _tmp631 = (limi_rotation_4_1_2 * f_linear_4_2);
  ap_fixed<16,11> new_f_linear_4_1 = (_tmp630 + _tmp631);
  ap_fixed<16,11> _tmp632 = (limi_rotation_4_2_0 * f_linear_4_0);
  ap_fixed<16,10> _tmp633 = (limi_rotation_4_2_1 * f_linear_4_1);
  ap_fixed<16,12> _tmp634 = (_tmp632 + _tmp633);
  ap_fixed<16,1> _tmp635 = (limi_rotation_4_2_2 * f_linear_4_2);
  ap_fixed<16,12> new_f_linear_4_2 = (_tmp634 + _tmp635);
  ap_fixed<16,10> _tmp636 = (limi_rotation_4_0_0 * f_angular_4_0);
  ap_fixed<16,9> _tmp637 = (limi_rotation_4_0_1 * f_angular_4_1);
  ap_fixed<16,11> _tmp638 = (_tmp636 + _tmp637);
  ap_fixed<16,1> _tmp639 = (limi_rotation_4_0_2 * f_angular_4_2);
  ap_fixed<16,11> new_f_angular_temp_4_0 = (_tmp638 + _tmp639);
  ap_fixed<16,1> _tmp640 = (limi_rotation_4_1_0 * f_angular_4_0);
  ap_fixed<16,1> _tmp641 = (limi_rotation_4_1_1 * f_angular_4_1);
  ap_fixed<16,1> _tmp642 = (_tmp640 + _tmp641);
  ap_fixed<16,10> _tmp643 = (limi_rotation_4_1_2 * f_angular_4_2);
  ap_fixed<16,10> new_f_angular_temp_4_1 = (_tmp642 + _tmp643);
  ap_fixed<16,10> _tmp644 = (limi_rotation_4_2_0 * f_angular_4_0);
  ap_fixed<16,9> _tmp645 = (limi_rotation_4_2_1 * f_angular_4_1);
  ap_fixed<16,11> _tmp646 = (_tmp644 + _tmp645);
  ap_fixed<16,1> _tmp647 = (limi_rotation_4_2_2 * f_angular_4_2);
  ap_fixed<16,11> new_f_angular_temp_4_2 = (_tmp646 + _tmp647);
  ap_fixed<16,8> _tmp648 = (limi_translation_4_0 * new_f_linear_4_1);
  ap_fixed<16,11> _tmp649 = (limi_translation_4_1 * new_f_linear_4_0);
  ap_fixed<16,11> f_angular_cross_4_0 = (_tmp648 - _tmp649);
  ap_fixed<16,1> _tmp650 = (limi_translation_4_2 * new_f_linear_4_0);
  ap_fixed<16,8> _tmp651 = (limi_translation_4_0 * new_f_linear_4_2);
  ap_fixed<16,8> f_angular_cross_4_1 = (_tmp650 - _tmp651);
  ap_fixed<16,8> _tmp652 = (limi_translation_4_0 * new_f_linear_4_1);
  ap_fixed<16,11> _tmp653 = (limi_translation_4_1 * new_f_linear_4_0);
  ap_fixed<16,11> f_angular_cross_4_2 = (_tmp652 - _tmp653);
  ap_fixed<16,12> new_f_angular_4_0 = (new_f_angular_temp_4_0 + f_angular_cross_4_0);
  ap_fixed<16,11> new_f_angular_4_1 = (new_f_angular_temp_4_1 + f_angular_cross_4_1);
  ap_fixed<16,12> new_f_angular_4_2 = (new_f_angular_temp_4_2 + f_angular_cross_4_2);
  ap_fixed<16,12> r_201_new_f_4_0 = new_f_linear_4_0;
  ap_fixed<16,11> r_201_new_f_4_1 = new_f_linear_4_1;
  ap_fixed<16,12> r_201_new_f_4_2 = new_f_linear_4_2;
  ap_fixed<16,12> r_201_new_f_4_3 = new_f_angular_4_0;
  ap_fixed<16,11> r_201_new_f_4_4 = new_f_angular_4_1;
  ap_fixed<16,12> r_201_new_f_4_5 = new_f_angular_4_2;
  ap_fixed<16,12> new_data_f_parent_4_0 = (f_rnea_firstpass3_0 + r_201_new_f_4_0);
  ap_fixed<16,12> new_data_f_parent_4_1 = (f_rnea_firstpass3_1 + r_201_new_f_4_1);
  ap_fixed<16,12> new_data_f_parent_4_2 = (f_rnea_firstpass3_2 + r_201_new_f_4_2);
  ap_fixed<16,12> new_data_f_parent_4_3 = (f_rnea_firstpass3_3 + r_201_new_f_4_3);
  ap_fixed<16,11> new_data_f_parent_4_4 = (f_rnea_firstpass3_4 + r_201_new_f_4_4);
  ap_fixed<16,12> new_data_f_parent_4_5 = (f_rnea_firstpass3_5 + r_201_new_f_4_5);
  ap_fixed<16,12> data_tau_temp_3 = new_data_f_parent_4_5;
  ap_fixed<16,12> f_linear_3_0 = new_data_f_parent_4_0;
  ap_fixed<16,12> f_linear_3_1 = new_data_f_parent_4_1;
  ap_fixed<16,12> f_linear_3_2 = new_data_f_parent_4_2;
  ap_fixed<16,12> f_angular_3_0 = new_data_f_parent_4_3;
  ap_fixed<16,11> f_angular_3_1 = new_data_f_parent_4_4;
  ap_fixed<16,12> f_angular_3_2 = new_data_f_parent_4_5;
  ap_fixed<16,12> _tmp654 = (limi_rotation_3_0_0 * f_linear_3_0);
  ap_fixed<16,12> _tmp655 = (limi_rotation_3_0_1 * f_linear_3_1);
  ap_fixed<16,13> _tmp656 = (_tmp654 + _tmp655);
  ap_fixed<16,1> _tmp657 = (limi_rotation_3_0_2 * f_linear_3_2);
  ap_fixed<16,13> new_f_linear_3_0 = (_tmp656 + _tmp657);
  ap_fixed<16,1> _tmp658 = (limi_rotation_3_1_0 * f_linear_3_0);
  ap_fixed<16,1> _tmp659 = (limi_rotation_3_1_1 * f_linear_3_1);
  ap_fixed<16,1> _tmp660 = (_tmp658 + _tmp659);
  ap_fixed<16,12> _tmp661 = (limi_rotation_3_1_2 * f_linear_3_2);
  ap_fixed<16,12> new_f_linear_3_1 = (_tmp660 + _tmp661);
  ap_fixed<16,12> _tmp662 = (limi_rotation_3_2_0 * f_linear_3_0);
  ap_fixed<16,12> _tmp663 = (limi_rotation_3_2_1 * f_linear_3_1);
  ap_fixed<16,13> _tmp664 = (_tmp662 + _tmp663);
  ap_fixed<16,1> _tmp665 = (limi_rotation_3_2_2 * f_linear_3_2);
  ap_fixed<16,13> new_f_linear_3_2 = (_tmp664 + _tmp665);
  ap_fixed<16,12> _tmp666 = (limi_rotation_3_0_0 * f_angular_3_0);
  ap_fixed<16,11> _tmp667 = (limi_rotation_3_0_1 * f_angular_3_1);
  ap_fixed<16,12> _tmp668 = (_tmp666 + _tmp667);
  ap_fixed<16,1> _tmp669 = (limi_rotation_3_0_2 * f_angular_3_2);
  ap_fixed<16,12> new_f_angular_temp_3_0 = (_tmp668 + _tmp669);
  ap_fixed<16,1> _tmp670 = (limi_rotation_3_1_0 * f_angular_3_0);
  ap_fixed<16,1> _tmp671 = (limi_rotation_3_1_1 * f_angular_3_1);
  ap_fixed<16,1> _tmp672 = (_tmp670 + _tmp671);
  ap_fixed<16,12> _tmp673 = (limi_rotation_3_1_2 * f_angular_3_2);
  ap_fixed<16,12> new_f_angular_temp_3_1 = (_tmp672 + _tmp673);
  ap_fixed<16,12> _tmp674 = (limi_rotation_3_2_0 * f_angular_3_0);
  ap_fixed<16,11> _tmp675 = (limi_rotation_3_2_1 * f_angular_3_1);
  ap_fixed<16,12> _tmp676 = (_tmp674 + _tmp675);
  ap_fixed<16,1> _tmp677 = (limi_rotation_3_2_2 * f_angular_3_2);
  ap_fixed<16,12> new_f_angular_temp_3_2 = (_tmp676 + _tmp677);
  ap_fixed<16,9> _tmp678 = (limi_translation_3_0 * new_f_linear_3_1);
  ap_fixed<16,1> _tmp679 = (limi_translation_3_1 * new_f_linear_3_0);
  ap_fixed<16,9> f_angular_cross_3_0 = (_tmp678 - _tmp679);
  ap_fixed<16,1> _tmp680 = (limi_translation_3_2 * new_f_linear_3_0);
  ap_fixed<16,9> _tmp681 = (limi_translation_3_0 * new_f_linear_3_2);
  ap_fixed<16,9> f_angular_cross_3_1 = (_tmp680 - _tmp681);
  ap_fixed<16,9> _tmp682 = (limi_translation_3_0 * new_f_linear_3_1);
  ap_fixed<16,1> _tmp683 = (limi_translation_3_1 * new_f_linear_3_0);
  ap_fixed<16,9> f_angular_cross_3_2 = (_tmp682 - _tmp683);
  ap_fixed<16,12> new_f_angular_3_0 = (new_f_angular_temp_3_0 + f_angular_cross_3_0);
  ap_fixed<16,12> new_f_angular_3_1 = (new_f_angular_temp_3_1 + f_angular_cross_3_1);
  ap_fixed<16,12> new_f_angular_3_2 = (new_f_angular_temp_3_2 + f_angular_cross_3_2);
  ap_fixed<16,13> r_202_new_f_3_0 = new_f_linear_3_0;
  ap_fixed<16,12> r_202_new_f_3_1 = new_f_linear_3_1;
  ap_fixed<16,13> r_202_new_f_3_2 = new_f_linear_3_2;
  ap_fixed<16,12> r_202_new_f_3_3 = new_f_angular_3_0;
  ap_fixed<16,12> r_202_new_f_3_4 = new_f_angular_3_1;
  ap_fixed<16,12> r_202_new_f_3_5 = new_f_angular_3_2;
  ap_fixed<16,13> new_data_f_parent_3_0 = (f_rnea_firstpass2_0 + r_202_new_f_3_0);
  ap_fixed<16,12> new_data_f_parent_3_1 = (f_rnea_firstpass2_1 + r_202_new_f_3_1);
  ap_fixed<16,13> new_data_f_parent_3_2 = (f_rnea_firstpass2_2 + r_202_new_f_3_2);
  ap_fixed<16,12> new_data_f_parent_3_3 = (f_rnea_firstpass2_3 + r_202_new_f_3_3);
  ap_fixed<16,12> new_data_f_parent_3_4 = (f_rnea_firstpass2_4 + r_202_new_f_3_4);
  ap_fixed<16,12> new_data_f_parent_3_5 = (f_rnea_firstpass2_5 + r_202_new_f_3_5);
  ap_fixed<16,12> data_tau_temp_2 = new_data_f_parent_3_5;
  ap_fixed<16,13> f_linear_2_0 = new_data_f_parent_3_0;
  ap_fixed<16,12> f_linear_2_1 = new_data_f_parent_3_1;
  ap_fixed<16,13> f_linear_2_2 = new_data_f_parent_3_2;
  ap_fixed<16,12> f_angular_2_0 = new_data_f_parent_3_3;
  ap_fixed<16,12> f_angular_2_1 = new_data_f_parent_3_4;
  ap_fixed<16,12> f_angular_2_2 = new_data_f_parent_3_5;
  ap_fixed<16,13> _tmp684 = (limi_rotation_2_0_0 * f_linear_2_0);
  ap_fixed<16,12> _tmp685 = (limi_rotation_2_0_1 * f_linear_2_1);
  ap_fixed<16,14> _tmp686 = (_tmp684 + _tmp685);
  ap_fixed<16,1> _tmp687 = (limi_rotation_2_0_2 * f_linear_2_2);
  ap_fixed<16,14> new_f_linear_2_0 = (_tmp686 + _tmp687);
  ap_fixed<16,1> _tmp688 = (limi_rotation_2_1_0 * f_linear_2_0);
  ap_fixed<16,1> _tmp689 = (limi_rotation_2_1_1 * f_linear_2_1);
  ap_fixed<16,1> _tmp690 = (_tmp688 + _tmp689);
  ap_fixed<16,13> _tmp691 = (limi_rotation_2_1_2 * f_linear_2_2);
  ap_fixed<16,13> new_f_linear_2_1 = (_tmp690 + _tmp691);
  ap_fixed<16,13> _tmp692 = (limi_rotation_2_2_0 * f_linear_2_0);
  ap_fixed<16,12> _tmp693 = (limi_rotation_2_2_1 * f_linear_2_1);
  ap_fixed<16,14> _tmp694 = (_tmp692 + _tmp693);
  ap_fixed<16,1> _tmp695 = (limi_rotation_2_2_2 * f_linear_2_2);
  ap_fixed<16,14> new_f_linear_2_2 = (_tmp694 + _tmp695);
  ap_fixed<16,12> _tmp696 = (limi_rotation_2_0_0 * f_angular_2_0);
  ap_fixed<16,12> _tmp697 = (limi_rotation_2_0_1 * f_angular_2_1);
  ap_fixed<16,13> _tmp698 = (_tmp696 + _tmp697);
  ap_fixed<16,1> _tmp699 = (limi_rotation_2_0_2 * f_angular_2_2);
  ap_fixed<16,13> new_f_angular_temp_2_0 = (_tmp698 + _tmp699);
  ap_fixed<16,1> _tmp700 = (limi_rotation_2_1_0 * f_angular_2_0);
  ap_fixed<16,1> _tmp701 = (limi_rotation_2_1_1 * f_angular_2_1);
  ap_fixed<16,1> _tmp702 = (_tmp700 + _tmp701);
  ap_fixed<16,12> _tmp703 = (limi_rotation_2_1_2 * f_angular_2_2);
  ap_fixed<16,12> new_f_angular_temp_2_1 = (_tmp702 + _tmp703);
  ap_fixed<16,12> _tmp704 = (limi_rotation_2_2_0 * f_angular_2_0);
  ap_fixed<16,12> _tmp705 = (limi_rotation_2_2_1 * f_angular_2_1);
  ap_fixed<16,13> _tmp706 = (_tmp704 + _tmp705);
  ap_fixed<16,1> _tmp707 = (limi_rotation_2_2_2 * f_angular_2_2);
  ap_fixed<16,13> new_f_angular_temp_2_2 = (_tmp706 + _tmp707);
  ap_fixed<16,1> _tmp708 = (limi_translation_2_0 * new_f_linear_2_1);
  ap_fixed<16,12> _tmp709 = (limi_translation_2_1 * new_f_linear_2_0);
  ap_fixed<16,12> f_angular_cross_2_0 = (_tmp708 - _tmp709);
  ap_fixed<16,1> _tmp710 = (limi_translation_2_2 * new_f_linear_2_0);
  ap_fixed<16,1> _tmp711 = (limi_translation_2_0 * new_f_linear_2_2);
  ap_fixed<16,1> f_angular_cross_2_1 = (_tmp710 - _tmp711);
  ap_fixed<16,1> _tmp712 = (limi_translation_2_0 * new_f_linear_2_1);
  ap_fixed<16,12> _tmp713 = (limi_translation_2_1 * new_f_linear_2_0);
  ap_fixed<16,12> f_angular_cross_2_2 = (_tmp712 - _tmp713);
  ap_fixed<16,14> new_f_angular_2_0 = (new_f_angular_temp_2_0 + f_angular_cross_2_0);
  ap_fixed<16,12> new_f_angular_2_1 = (new_f_angular_temp_2_1 + f_angular_cross_2_1);
  ap_fixed<16,14> new_f_angular_2_2 = (new_f_angular_temp_2_2 + f_angular_cross_2_2);
  ap_fixed<16,14> r_203_new_f_2_0 = new_f_linear_2_0;
  ap_fixed<16,13> r_203_new_f_2_1 = new_f_linear_2_1;
  ap_fixed<16,14> r_203_new_f_2_2 = new_f_linear_2_2;
  ap_fixed<16,14> r_203_new_f_2_3 = new_f_angular_2_0;
  ap_fixed<16,12> r_203_new_f_2_4 = new_f_angular_2_1;
  ap_fixed<16,14> r_203_new_f_2_5 = new_f_angular_2_2;
  ap_fixed<16,14> new_data_f_parent_2_0 = (f_rnea_firstpass1_0 + r_203_new_f_2_0);
  ap_fixed<16,13> new_data_f_parent_2_1 = (f_rnea_firstpass1_1 + r_203_new_f_2_1);
  ap_fixed<16,14> new_data_f_parent_2_2 = (f_rnea_firstpass1_2 + r_203_new_f_2_2);
  ap_fixed<16,14> new_data_f_parent_2_3 = (f_rnea_firstpass1_3 + r_203_new_f_2_3);
  ap_fixed<16,12> new_data_f_parent_2_4 = (f_rnea_firstpass1_4 + r_203_new_f_2_4);
  ap_fixed<16,14> new_data_f_parent_2_5 = (f_rnea_firstpass1_5 + r_203_new_f_2_5);
  ap_fixed<16,14> data_tau_temp_1 = new_data_f_parent_2_5;
  ap_fixed<16,14> f_linear_1_0 = new_data_f_parent_2_0;
  ap_fixed<16,13> f_linear_1_1 = new_data_f_parent_2_1;
  ap_fixed<16,14> f_linear_1_2 = new_data_f_parent_2_2;
  ap_fixed<16,14> f_angular_1_0 = new_data_f_parent_2_3;
  ap_fixed<16,12> f_angular_1_1 = new_data_f_parent_2_4;
  ap_fixed<16,14> f_angular_1_2 = new_data_f_parent_2_5;
  ap_fixed<16,14> _tmp714 = (limi_rotation_1_0_0 * f_linear_1_0);
  ap_fixed<16,13> _tmp715 = (limi_rotation_1_0_1 * f_linear_1_1);
  ap_fixed<16,14> _tmp716 = (_tmp714 + _tmp715);
  ap_fixed<16,1> _tmp717 = (limi_rotation_1_0_2 * f_linear_1_2);
  ap_fixed<16,14> new_f_linear_1_0 = (_tmp716 + _tmp717);
  ap_fixed<16,1> _tmp718 = (limi_rotation_1_1_0 * f_linear_1_0);
  ap_fixed<16,1> _tmp719 = (limi_rotation_1_1_1 * f_linear_1_1);
  ap_fixed<16,1> _tmp720 = (_tmp718 + _tmp719);
  ap_fixed<16,14> _tmp721 = (limi_rotation_1_1_2 * f_linear_1_2);
  ap_fixed<16,14> new_f_linear_1_1 = (_tmp720 + _tmp721);
  ap_fixed<16,14> _tmp722 = (limi_rotation_1_2_0 * f_linear_1_0);
  ap_fixed<16,13> _tmp723 = (limi_rotation_1_2_1 * f_linear_1_1);
  ap_fixed<16,14> _tmp724 = (_tmp722 + _tmp723);
  ap_fixed<16,1> _tmp725 = (limi_rotation_1_2_2 * f_linear_1_2);
  ap_fixed<16,14> new_f_linear_1_2 = (_tmp724 + _tmp725);
  ap_fixed<16,14> _tmp726 = (limi_rotation_1_0_0 * f_angular_1_0);
  ap_fixed<16,12> _tmp727 = (limi_rotation_1_0_1 * f_angular_1_1);
  ap_fixed<16,14> _tmp728 = (_tmp726 + _tmp727);
  ap_fixed<16,1> _tmp729 = (limi_rotation_1_0_2 * f_angular_1_2);
  ap_fixed<16,14> new_f_angular_temp_1_0 = (_tmp728 + _tmp729);
  ap_fixed<16,1> _tmp730 = (limi_rotation_1_1_0 * f_angular_1_0);
  ap_fixed<16,1> _tmp731 = (limi_rotation_1_1_1 * f_angular_1_1);
  ap_fixed<16,1> _tmp732 = (_tmp730 + _tmp731);
  ap_fixed<16,14> _tmp733 = (limi_rotation_1_1_2 * f_angular_1_2);
  ap_fixed<16,14> new_f_angular_temp_1_1 = (_tmp732 + _tmp733);
  ap_fixed<16,14> _tmp734 = (limi_rotation_1_2_0 * f_angular_1_0);
  ap_fixed<16,12> _tmp735 = (limi_rotation_1_2_1 * f_angular_1_1);
  ap_fixed<16,14> _tmp736 = (_tmp734 + _tmp735);
  ap_fixed<16,1> _tmp737 = (limi_rotation_1_2_2 * f_angular_1_2);
  ap_fixed<16,14> new_f_angular_temp_1_2 = (_tmp736 + _tmp737);
  ap_fixed<16,1> _tmp738 = (limi_translation_1_0 * new_f_linear_1_1);
  ap_fixed<16,1> _tmp739 = (limi_translation_1_1 * new_f_linear_1_0);
  ap_fixed<16,1> f_angular_cross_1_0 = (_tmp738 - _tmp739);
  ap_fixed<16,1> _tmp740 = (limi_translation_1_2 * new_f_linear_1_0);
  ap_fixed<16,1> _tmp741 = (limi_translation_1_0 * new_f_linear_1_2);
  ap_fixed<16,1> f_angular_cross_1_1 = (_tmp740 - _tmp741);
  ap_fixed<16,1> _tmp742 = (limi_translation_1_0 * new_f_linear_1_1);
  ap_fixed<16,1> _tmp743 = (limi_translation_1_1 * new_f_linear_1_0);
  ap_fixed<16,1> f_angular_cross_1_2 = (_tmp742 - _tmp743);
  ap_fixed<16,14> new_f_angular_1_0 = (new_f_angular_temp_1_0 + f_angular_cross_1_0);
  ap_fixed<16,14> new_f_angular_1_1 = (new_f_angular_temp_1_1 + f_angular_cross_1_1);
  ap_fixed<16,14> new_f_angular_1_2 = (new_f_angular_temp_1_2 + f_angular_cross_1_2);
  ap_fixed<16,14> r_204_new_f_1_0 = new_f_linear_1_0;
  ap_fixed<16,14> r_204_new_f_1_1 = new_f_linear_1_1;
  ap_fixed<16,14> r_204_new_f_1_2 = new_f_linear_1_2;
  ap_fixed<16,14> r_204_new_f_1_3 = new_f_angular_1_0;
  ap_fixed<16,14> r_204_new_f_1_4 = new_f_angular_1_1;
  ap_fixed<16,14> r_204_new_f_1_5 = new_f_angular_1_2;
  ap_fixed<16,14> new_data_f_parent_1_0 = (f_rnea_firstpass0_0 + r_204_new_f_1_0);
  ap_fixed<16,14> new_data_f_parent_1_1 = (f_rnea_firstpass0_1 + r_204_new_f_1_1);
  ap_fixed<16,14> new_data_f_parent_1_2 = (f_rnea_firstpass0_2 + r_204_new_f_1_2);
  ap_fixed<16,14> new_data_f_parent_1_3 = (f_rnea_firstpass0_3 + r_204_new_f_1_3);
  ap_fixed<16,14> new_data_f_parent_1_4 = (f_rnea_firstpass0_4 + r_204_new_f_1_4);
  ap_fixed<16,14> new_data_f_parent_1_5 = (f_rnea_firstpass0_5 + r_204_new_f_1_5);
  ap_fixed<16,14> data_tau_temp_0 = new_data_f_parent_1_5;
  ap_fixed<16,14> data_tau_0 = data_tau_temp_0;
  ap_fixed<16,14> data_tau_1 = data_tau_temp_1;
  ap_fixed<16,12> data_tau_2 = data_tau_temp_2;
  ap_fixed<16,12> data_tau_3 = data_tau_temp_3;
  ap_fixed<16,10> data_tau_4 = data_tau_temp_4;
  ap_fixed<16,9> data_tau_5 = data_tau_temp_5;
  return data_tau_5;
} // [-178.18239642865956, 178.18239642865956] +/- 1.0812885031573387

