#include <math.h>
#include <iostream>
#include <vector>


/* @pre: ((qcos_0 > -1.0) && (qcos_0 < 1.0) && (qcos_1 > -1.0) && (qcos_1 < 1.0) && (qcos_2 > -1.0) && (qcos_2 < 1.0) && (qcos_3 > -1.0) && (qcos_3 < 1.0) && (qcos_4 > -1.0) && (qcos_4 < 1.0) && (qcos_5 > -1.0) && (qcos_5 < 1.0) && (qsin_0 > -1.0) && (qsin_0 < 1.0) && (qsin_1 > -1.0) && (qsin_1 < 1.0) && (qsin_2 > -1.0) && (qsin_2 < 1.0) && (qsin_3 > -1.0) && (qsin_3 < 1.0) && (qsin_4 > -1.0) && (qsin_4 < 1.0) && (qsin_5 > -1.0) && (qsin_5 < 1.0) && (v_0 > -1.0) && (v_0 < 1.0) && (v_1 > -1.0) && (v_1 < 1.0) && (v_2 > -1.0) && (v_2 < 1.0) && (v_3 > -1.0) && (v_3 < 1.0) && (v_4 > -1.0) && (v_4 < 1.0) && (v_5 > -1.0) && (v_5 < 1.0) && (a_0 > -1.0) && (a_0 < 1.0) && (a_1 > -1.0) && (a_1 < 1.0) && (a_2 > -1.0) && (a_2 < 1.0) && (a_3 > -1.0) && (a_3 < 1.0) && (a_4 > -1.0) && (a_4 < 1.0) && (a_5 > -1.0) && (a_5 < 1.0)) */
/* @post: (res) => (res +/- 0.1) */
int rnea(int qcos_0, int qcos_1, int qcos_2, int qcos_3, int qcos_4, int qcos_5, int qsin_0, int qsin_1, int qsin_2, int qsin_3, int qsin_4, int qsin_5, int v_0, int v_1, int v_2, int v_3, int v_4, int v_5, int a_0, int a_1, int a_2, int a_3, int a_4, int a_5) {
  int32_t limi_translation_0_0 = 0;
  int32_t limi_translation_0_1 = 0;
  int32_t limi_translation_0_2 = 10912;
  int32_t limi_translation_1_0 = 0;
  int32_t limi_translation_1_1 = 0;
  int32_t limi_translation_1_2 = 0;
  int32_t limi_translation_2_0 = 0;
  int32_t limi_translation_2_1 = -10355;
  int32_t limi_translation_2_2 = 0;
  int32_t limi_translation_3_0 = 2703;
  int32_t limi_translation_3_1 = 0;
  int32_t limi_translation_3_2 = 0;
  int32_t limi_translation_4_0 = -2704;
  int32_t limi_translation_4_1 = 12583;
  int32_t limi_translation_4_2 = 0;
  int32_t limi_translation_5_0 = 0;
  int32_t limi_translation_5_1 = 0;
  int32_t limi_translation_5_2 = 0;
  int32_t data_v_0_0 = 0;
  int32_t data_v_0_1 = 0;
  int32_t data_v_0_2 = 0;
  int32_t data_v_0_3 = 0;
  int32_t data_v_0_4 = 0;
  int32_t data_v_0_5 = 0;
  int32_t data_v_1_0 = 0;
  int32_t data_v_1_1 = 0;
  int32_t data_v_1_2 = 0;
  int32_t data_v_1_3 = 0;
  int32_t data_v_1_4 = 0;
  int32_t data_v_1_5 = 0;
  int32_t data_v_2_0 = 0;
  int32_t data_v_2_1 = 0;
  int32_t data_v_2_2 = 0;
  int32_t data_v_2_3 = 0;
  int32_t data_v_2_4 = 0;
  int32_t data_v_2_5 = 0;
  int32_t data_v_3_0 = 0;
  int32_t data_v_3_1 = 0;
  int32_t data_v_3_2 = 0;
  int32_t data_v_3_3 = 0;
  int32_t data_v_3_4 = 0;
  int32_t data_v_3_5 = 0;
  int32_t data_v_4_0 = 0;
  int32_t data_v_4_1 = 0;
  int32_t data_v_4_2 = 0;
  int32_t data_v_4_3 = 0;
  int32_t data_v_4_4 = 0;
  int32_t data_v_4_5 = 0;
  int32_t data_v_5_0 = 0;
  int32_t data_v_5_1 = 0;
  int32_t data_v_5_2 = 0;
  int32_t data_v_5_3 = 0;
  int32_t data_v_5_4 = 0;
  int32_t data_v_5_5 = 0;
  int32_t lever_0_0 = 127;
  int32_t lever_0_1 = 68;
  int32_t lever_0_2 = -1561;
  int32_t lever_1_0 = -103;
  int32_t lever_1_1 = -942;
  int32_t lever_1_2 = 115;
  int32_t lever_2_0 = 902;
  int32_t lever_2_1 = 1286;
  int32_t lever_2_2 = -2180;
  int32_t lever_3_0 = -1743;
  int32_t lever_3_1 = 3422;
  int32_t lever_3_2 = 900;
  int32_t lever_4_0 = -392;
  int32_t lever_4_1 = 1346;
  int32_t lever_4_2 = -1260;
  int32_t lever_5_0 = 1971;
  int32_t lever_5_1 = -463;
  int32_t lever_5_2 = -345;
  int32_t masses_0 = 20360;
  int32_t masses_1 = 21198;
  int32_t masses_2 = 26449;
  int32_t masses_3 = 29392;
  int32_t masses_4 = 20086;
  int32_t masses_5 = 27305;
  int32_t inertia_0_0_0 = 23048;
  int32_t inertia_0_0_1 = -5;
  int32_t inertia_0_0_2 = 222;
  int32_t inertia_0_1_0 = -5;
  int32_t inertia_0_1_1 = 23154;
  int32_t inertia_0_1_2 = 628;
  int32_t inertia_0_2_0 = 222;
  int32_t inertia_0_2_1 = 628;
  int32_t inertia_0_2_2 = 299;
  int32_t inertia_1_0_0 = 261;
  int32_t inertia_1_0_1 = -129;
  int32_t inertia_1_0_2 = 336;
  int32_t inertia_1_1_0 = -129;
  int32_t inertia_1_1_1 = 921;
  int32_t inertia_1_1_2 = 23;
  int32_t inertia_1_2_0 = 336;
  int32_t inertia_1_2_1 = 23;
  int32_t inertia_1_2_2 = 852;
  int32_t inertia_2_0_0 = 1220;
  int32_t inertia_2_0_1 = -157;
  int32_t inertia_2_0_2 = -374;
  int32_t inertia_2_1_0 = -157;
  int32_t inertia_2_1_1 = 1185;
  int32_t inertia_2_1_2 = -420;
  int32_t inertia_2_2_0 = -374;
  int32_t inertia_2_2_1 = -420;
  int32_t inertia_2_2_2 = 355;
  int32_t inertia_3_0_0 = 847;
  int32_t inertia_3_0_1 = 255;
  int32_t inertia_3_0_2 = -44;
  int32_t inertia_3_1_0 = 255;
  int32_t inertia_3_1_1 = 641;
  int32_t inertia_3_1_2 = 283;
  int32_t inertia_3_2_0 = -44;
  int32_t inertia_3_2_1 = 283;
  int32_t inertia_3_2_2 = 928;
  int32_t inertia_4_0_0 = 1165;
  int32_t inertia_4_0_1 = -70;
  int32_t inertia_4_0_2 = -133;
  int32_t inertia_4_1_0 = -70;
  int32_t inertia_4_1_1 = 966;
  int32_t inertia_4_1_2 = 8;
  int32_t inertia_4_2_0 = -133;
  int32_t inertia_4_2_1 = 8;
  int32_t inertia_4_2_2 = 283;
  int32_t inertia_5_0_0 = 64;
  int32_t inertia_5_0_1 = 4;
  int32_t inertia_5_0_2 = -38;
  int32_t inertia_5_1_0 = 4;
  int32_t inertia_5_1_1 = 143;
  int32_t inertia_5_1_2 = 11;
  int32_t inertia_5_2_0 = -38;
  int32_t inertia_5_2_1 = 11;
  int32_t inertia_5_2_2 = 178;
  int32_t parent_v_0 = 0;
  int32_t parent_v_1 = 0;
  int32_t parent_v_2 = 0;
  int32_t parent_v_3 = 0;
  int32_t parent_v_4 = 0;
  int32_t parent_v_5 = 0;
  int32_t parent_a_gf_0 = 0;
  int32_t parent_a_gf_1 = 0;
  int32_t parent_a_gf_2 = 20091;
  int32_t parent_a_gf_3 = 0;
  int32_t parent_a_gf_4 = 0;
  int32_t parent_a_gf_5 = 0;
  int32_t new_v_0 = 0;
  int32_t new_v_1 = 0;
  int32_t new_v_2 = 0;
  int32_t new_v_3 = 0;
  int32_t new_v_4 = 0;
  int32_t new_v_5 = 0;
  int32_t new_a_gf_0 = 0;
  int32_t new_a_gf_1 = 0;
  int32_t new_a_gf_2 = 0;
  int32_t new_a_gf_3 = 0;
  int32_t new_a_gf_4 = 0;
  int32_t new_a_gf_5 = 0;
  int32_t new_h_0 = 0;
  int32_t new_h_1 = 0;
  int32_t new_h_2 = 0;
  int32_t new_h_3 = 0;
  int32_t new_h_4 = 0;
  int32_t new_h_5 = 0;
  int32_t new_f_0 = 0;
  int32_t new_f_1 = 0;
  int32_t new_f_2 = 0;
  int32_t new_f_3 = 0;
  int32_t new_f_4 = 0;
  int32_t new_f_5 = 0;
  int32_t rotation_matrix_0_0_0 = qcos_0;
  int32_t rotation_matrix_0_0_1 = -(qsin_0);
  int32_t rotation_matrix_0_0_2 = 0;
  int32_t rotation_matrix_0_1_0 = qsin_0;
  int32_t rotation_matrix_0_1_1 = qcos_0;
  int32_t rotation_matrix_0_1_2 = 0;
  int32_t rotation_matrix_0_2_0 = 0;
  int32_t rotation_matrix_0_2_1 = 0;
  int32_t rotation_matrix_0_2_2 = 16384;
  int32_t limi_rotation_0_0_0 = rotation_matrix_0_0_0;
  int32_t limi_rotation_0_0_1 = rotation_matrix_0_0_1;
  int32_t limi_rotation_0_0_2 = 0;
  int32_t limi_rotation_0_1_0 = rotation_matrix_0_1_0;
  int32_t limi_rotation_0_1_1 = rotation_matrix_0_1_1;
  int32_t limi_rotation_0_1_2 = 0;
  int32_t limi_rotation_0_2_0 = 0;
  int32_t limi_rotation_0_2_1 = 0;
  int32_t limi_rotation_0_2_2 = 16384;
  int32_t v_linear_0_0 = data_v_0_0;
  int32_t v_linear_0_1 = data_v_0_1;
  int32_t v_linear_0_2 = data_v_0_2;
  int32_t v_angular_0_0 = data_v_0_3;
  int32_t v_angular_0_1 = data_v_0_4;
  int32_t v_angular_0_2 = v_0;
  int32_t parent_v_linear_0_0 = parent_v_0;
  int32_t parent_v_linear_0_1 = parent_v_1;
  int32_t parent_v_linear_0_2 = parent_v_2;
  int32_t parent_v_angular_0_0 = parent_v_3;
  int32_t parent_v_angular_0_1 = parent_v_4;
  int32_t parent_v_angular_0_2 = parent_v_5;
  int32_t parent_a_gf_linear_0_0 = parent_a_gf_0;
  int32_t parent_a_gf_linear_0_1 = parent_a_gf_1;
  int32_t parent_a_gf_linear_0_2 = parent_a_gf_2;
  int32_t parent_a_gf_angular_0_0 = parent_a_gf_3;
  int32_t parent_a_gf_angular_0_1 = parent_a_gf_4;
  int32_t parent_a_gf_angular_0_2 = parent_a_gf_5;
  int32_t minus_m_w_0 = -(v_0);
  int32_t _tmp = -(minus_m_w_0);
  int32_t alpha_cross1_linear_0 = ((_tmp * v_linear_0_1) >> 14);
  int32_t alpha_cross2_linear_0 = ((minus_m_w_0 * v_linear_0_0) >> 14);
  int32_t alpha_cross_linear_0_0 = alpha_cross1_linear_0;
  int32_t alpha_cross_linear_0_1 = alpha_cross2_linear_0;
  int32_t alpha_cross_linear_0_2 = 0;
  int32_t _tmp1 = -(minus_m_w_0);
  int32_t alpha_cross1_angular_0 = ((_tmp1 * v_angular_0_1) >> 14);
  int32_t alpha_cross2_angular_0 = ((minus_m_w_0 * v_angular_0_0) >> 14);
  int32_t alpha_cross_angular_0_0 = alpha_cross1_angular_0;
  int32_t alpha_cross_angular_0_1 = alpha_cross2_angular_0;
  int32_t alpha_cross_angular_0_2 = 0;
  int32_t r_1_new_a_gf_0_0 = alpha_cross_linear_0_0;
  int32_t r_1_new_a_gf_0_1 = alpha_cross_linear_0_1;
  int32_t r_1_new_a_gf_0_2 = alpha_cross_linear_0_2;
  int32_t r_1_new_a_gf_0_3 = alpha_cross_angular_0_0;
  int32_t r_1_new_a_gf_0_4 = alpha_cross_angular_0_1;
  int32_t r_1_new_a_gf_0_5 = alpha_cross_angular_0_2;
  int32_t new_a_gf_up1_0 = (((a_0 << 1) + r_1_new_a_gf_0_5) >> 1);
  int32_t new_a_gf2_linear_0_0 = r_1_new_a_gf_0_0;
  int32_t new_a_gf2_linear_0_1 = r_1_new_a_gf_0_1;
  int32_t new_a_gf2_linear_0_2 = r_1_new_a_gf_0_2;
  int32_t new_a_gf2_angular_0_0 = r_1_new_a_gf_0_3;
  int32_t new_a_gf2_angular_0_1 = r_1_new_a_gf_0_4;
  int32_t new_a_gf2_angular_0_2 = new_a_gf_up1_0;
  int32_t _tmp2 = ((limi_translation_0_0 * parent_a_gf_angular_0_1) >> 15);
  int32_t _tmp3 = ((limi_translation_0_1 * parent_a_gf_angular_0_0) >> 15);
  int32_t actInv1_0_0 = (_tmp2 - _tmp3);
  int32_t _tmp4 = ((limi_translation_0_2 * parent_a_gf_angular_0_0) >> 15);
  int32_t _tmp5 = ((limi_translation_0_0 * parent_a_gf_angular_0_2) >> 15);
  int32_t actInv1_0_1 = (_tmp4 - _tmp5);
  int32_t _tmp6 = ((limi_translation_0_0 * parent_a_gf_angular_0_1) >> 15);
  int32_t _tmp7 = ((limi_translation_0_1 * parent_a_gf_angular_0_0) >> 15);
  int32_t actInv1_0_2 = (_tmp6 - _tmp7);
  int32_t actInv2_0_0 = (parent_a_gf_linear_0_0 - actInv1_0_0);
  int32_t actInv2_0_1 = (parent_a_gf_linear_0_1 - actInv1_0_1);
  int32_t actInv2_0_2 = (((parent_a_gf_linear_0_2 << 4) - actInv1_0_2) >> 4);
  int32_t actInv3_0_0_0 = limi_rotation_0_0_0;
  int32_t actInv3_0_1_0 = limi_rotation_0_0_1;
  int32_t actInv3_0_2_0 = limi_rotation_0_0_2;
  int32_t actInv3_0_0_1 = limi_rotation_0_1_0;
  int32_t actInv3_0_1_1 = limi_rotation_0_1_1;
  int32_t actInv3_0_2_1 = limi_rotation_0_1_2;
  int32_t actInv3_0_0_2 = limi_rotation_0_2_0;
  int32_t actInv3_0_1_2 = limi_rotation_0_2_1;
  int32_t actInv3_0_2_2 = limi_rotation_0_2_2;
  int32_t _tmp8 = ((actInv3_0_0_0 * actInv2_0_0) >> 14);
  int32_t _tmp9 = ((actInv3_0_0_1 * actInv2_0_1) >> 14);
  int32_t _tmp10 = (_tmp8 + _tmp9);
  int32_t _tmp11 = ((actInv3_0_0_2 * actInv2_0_2) >> 11);
  int32_t actInv4_0_0 = (_tmp10 + _tmp11);
  int32_t _tmp12 = ((actInv3_0_1_0 * actInv2_0_0) >> 14);
  int32_t _tmp13 = ((actInv3_0_1_1 * actInv2_0_1) >> 14);
  int32_t _tmp14 = (_tmp12 + _tmp13);
  int32_t _tmp15 = ((actInv3_0_1_2 * actInv2_0_2) >> 11);
  int32_t actInv4_0_1 = (_tmp14 + _tmp15);
  int32_t _tmp16 = ((actInv3_0_2_0 * actInv2_0_0) >> 15);
  int32_t _tmp17 = ((actInv3_0_2_1 * actInv2_0_1) >> 15);
  int32_t _tmp18 = (_tmp16 + _tmp17);
  int32_t _tmp19 = ((actInv3_0_2_2 * actInv2_0_2) >> 14);
  int32_t actInv4_0_2 = ((_tmp18 + (_tmp19 << 4)) >> 4);
  int32_t act_inv_linear_0_0 = (new_a_gf2_linear_0_0 + actInv4_0_0);
  int32_t act_inv_linear_0_1 = (new_a_gf2_linear_0_1 + actInv4_0_1);
  int32_t act_inv_linear_0_2 = ((new_a_gf2_linear_0_2 + (actInv4_0_2 << 4)) >> 4);
  int32_t _tmp20 = ((actInv3_0_0_0 * parent_a_gf_angular_0_0) >> 14);
  int32_t _tmp21 = ((actInv3_0_0_1 * parent_a_gf_angular_0_1) >> 14);
  int32_t _tmp22 = (_tmp20 + _tmp21);
  int32_t _tmp23 = ((actInv3_0_0_2 * parent_a_gf_angular_0_2) >> 15);
  int32_t actInv5_0_0 = (_tmp22 + _tmp23);
  int32_t _tmp24 = ((actInv3_0_1_0 * parent_a_gf_angular_0_0) >> 14);
  int32_t _tmp25 = ((actInv3_0_1_1 * parent_a_gf_angular_0_1) >> 14);
  int32_t _tmp26 = (_tmp24 + _tmp25);
  int32_t _tmp27 = ((actInv3_0_1_2 * parent_a_gf_angular_0_2) >> 15);
  int32_t actInv5_0_1 = (_tmp26 + _tmp27);
  int32_t _tmp28 = ((actInv3_0_2_0 * parent_a_gf_angular_0_0) >> 15);
  int32_t _tmp29 = ((actInv3_0_2_1 * parent_a_gf_angular_0_1) >> 15);
  int32_t _tmp30 = (_tmp28 + _tmp29);
  int32_t _tmp31 = ((actInv3_0_2_2 * parent_a_gf_angular_0_2) >> 14);
  int32_t actInv5_0_2 = (_tmp30 + _tmp31);
  int32_t act_inv_angular_0_0 = (new_a_gf2_angular_0_0 + actInv5_0_0);
  int32_t act_inv_angular_0_1 = (new_a_gf2_angular_0_1 + actInv5_0_1);
  int32_t act_inv_angular_0_2 = (((new_a_gf2_angular_0_2 << 1) + actInv5_0_2) >> 1);
  int32_t new_a_gf_up3_0_0 = act_inv_linear_0_0;
  int32_t new_a_gf_up3_0_1 = act_inv_linear_0_1;
  int32_t new_a_gf_up3_0_2 = act_inv_linear_0_2;
  int32_t new_a_gf_up3_0_3 = act_inv_angular_0_0;
  int32_t new_a_gf_up3_0_4 = act_inv_angular_0_1;
  int32_t new_a_gf_up3_0_5 = act_inv_angular_0_2;
  int32_t _tmp32 = ((lever_0_0 * v_angular_0_1) >> 15);
  int32_t _tmp33 = ((lever_0_1 * v_angular_0_0) >> 15);
  int32_t h_linear_1_0_0 = (_tmp32 - _tmp33);
  int32_t _tmp34 = ((lever_0_2 * v_angular_0_0) >> 15);
  int32_t _tmp35 = ((lever_0_0 * v_angular_0_2) >> 14);
  int32_t h_linear_1_0_1 = (_tmp34 - _tmp35);
  int32_t _tmp36 = ((lever_0_0 * v_angular_0_1) >> 15);
  int32_t _tmp37 = ((lever_0_1 * v_angular_0_0) >> 15);
  int32_t h_linear_1_0_2 = (_tmp36 - _tmp37);
  int32_t h_linear_2_0_0 = (v_linear_0_0 - h_linear_1_0_0);
  int32_t h_linear_2_0_1 = (v_linear_0_1 - h_linear_1_0_1);
  int32_t h_linear_2_0_2 = (v_linear_0_2 - h_linear_1_0_2);
  int32_t h_linear_0_0 = ((masses_0 * h_linear_2_0_0) >> 12);
  int32_t h_linear_0_1 = ((masses_0 * h_linear_2_0_1) >> 12);
  int32_t h_linear_0_2 = ((masses_0 * h_linear_2_0_2) >> 12);
  int32_t r_2_ = ((inertia_0_0_0 * v_angular_0_0) >> 15);
  int32_t r_3_ = ((inertia_0_0_1 * v_angular_0_1) >> 15);
  int32_t r_4_ = ((inertia_0_0_2 * v_angular_0_2) >> 14);
  int32_t r_5_ = ((inertia_0_0_1 * v_angular_0_0) >> 15);
  int32_t r_6_ = ((inertia_0_1_1 * v_angular_0_1) >> 15);
  int32_t r_7_ = ((inertia_0_1_2 * v_angular_0_2) >> 14);
  int32_t r_8_ = ((inertia_0_0_2 * v_angular_0_0) >> 15);
  int32_t r_9_ = ((inertia_0_1_2 * v_angular_0_1) >> 15);
  int32_t r_10_ = ((inertia_0_2_2 * v_angular_0_2) >> 14);
  int32_t rhsMult1_temp_0 = (r_2_ + r_3_);
  int32_t rhsMult1_0 = (rhsMult1_temp_0 + r_4_);
  int32_t rhsMult2_temp_0 = (r_5_ + r_6_);
  int32_t rhsMult2_0 = (rhsMult2_temp_0 + r_7_);
  int32_t rhsMult3_temp_0 = (r_8_ + r_9_);
  int32_t rhsMult3_0 = (rhsMult3_temp_0 + r_10_);
  int32_t rhsMult_0_0 = rhsMult1_0;
  int32_t rhsMult_0_1 = rhsMult2_0;
  int32_t rhsMult_0_2 = rhsMult3_0;
  int32_t h_angular_first_0_0 = rhsMult_0_0;
  int32_t h_angular_first_0_1 = rhsMult_0_1;
  int32_t h_angular_first_0_2 = rhsMult_0_2;
  int32_t _tmp38 = ((lever_0_0 * h_linear_0_1) >> 15);
  int32_t _tmp39 = ((lever_0_1 * h_linear_0_0) >> 15);
  int32_t h_angular_1_0_0 = (_tmp38 - _tmp39);
  int32_t _tmp40 = ((lever_0_2 * h_linear_0_0) >> 15);
  int32_t _tmp41 = ((lever_0_0 * h_linear_0_2) >> 15);
  int32_t h_angular_1_0_1 = (_tmp40 - _tmp41);
  int32_t _tmp42 = ((lever_0_0 * h_linear_0_1) >> 15);
  int32_t _tmp43 = ((lever_0_1 * h_linear_0_0) >> 15);
  int32_t h_angular_1_0_2 = (_tmp42 - _tmp43);
  int32_t h_angular_0_0 = (h_angular_first_0_0 + h_angular_1_0_0);
  int32_t h_angular_0_1 = (h_angular_first_0_1 + h_angular_1_0_1);
  int32_t h_angular_0_2 = (h_angular_first_0_2 + h_angular_1_0_2);
  int32_t _tmp44 = ((lever_0_0 * act_inv_angular_0_1) >> 15);
  int32_t _tmp45 = ((lever_0_1 * act_inv_angular_0_0) >> 15);
  int32_t f_linear_1_0_0 = (_tmp44 - _tmp45);
  int32_t _tmp46 = ((lever_0_2 * act_inv_angular_0_0) >> 15);
  int32_t _tmp47 = ((lever_0_0 * act_inv_angular_0_2) >> 14);
  int32_t f_linear_1_0_1 = (_tmp46 - _tmp47);
  int32_t _tmp48 = ((lever_0_0 * act_inv_angular_0_1) >> 15);
  int32_t _tmp49 = ((lever_0_1 * act_inv_angular_0_0) >> 15);
  int32_t f_linear_1_0_2 = (_tmp48 - _tmp49);
  int32_t f_linear_2_0_0 = (act_inv_linear_0_0 - f_linear_1_0_0);
  int32_t f_linear_2_0_1 = (act_inv_linear_0_1 - f_linear_1_0_1);
  int32_t f_linear_2_0_2 = (((act_inv_linear_0_2 << 4) - f_linear_1_0_2) >> 4);
  int32_t f_linear_3_0_0 = ((masses_0 * f_linear_2_0_0) >> 12);
  int32_t f_linear_3_0_1 = ((masses_0 * f_linear_2_0_1) >> 12);
  int32_t f_linear_3_0_2 = ((masses_0 * f_linear_2_0_2) >> 14);
  int32_t r_11_ = ((inertia_0_0_0 * act_inv_angular_0_0) >> 15);
  int32_t r_12_ = ((inertia_0_0_1 * act_inv_angular_0_1) >> 15);
  int32_t r_13_ = ((inertia_0_0_2 * act_inv_angular_0_2) >> 14);
  int32_t r_14_ = ((inertia_0_0_1 * act_inv_angular_0_0) >> 15);
  int32_t r_15_ = ((inertia_0_1_1 * act_inv_angular_0_1) >> 15);
  int32_t r_16_ = ((inertia_0_1_2 * act_inv_angular_0_2) >> 14);
  int32_t r_17_ = ((inertia_0_0_2 * act_inv_angular_0_0) >> 15);
  int32_t r_18_ = ((inertia_0_1_2 * act_inv_angular_0_1) >> 15);
  int32_t r_19_ = ((inertia_0_2_2 * act_inv_angular_0_2) >> 14);
  int32_t r_20_rhsMult1_temp_0 = (r_11_ + r_12_);
  int32_t r_21_rhsMult1_0 = (r_20_rhsMult1_temp_0 + r_13_);
  int32_t r_22_rhsMult2_temp_0 = (r_14_ + r_15_);
  int32_t r_23_rhsMult2_0 = (r_22_rhsMult2_temp_0 + r_16_);
  int32_t r_24_rhsMult3_temp_0 = (r_17_ + r_18_);
  int32_t r_25_rhsMult3_0 = (r_24_rhsMult3_temp_0 + r_19_);
  int32_t r_26_rhsMult_0_0 = r_21_rhsMult1_0;
  int32_t r_26_rhsMult_0_1 = r_23_rhsMult2_0;
  int32_t r_26_rhsMult_0_2 = r_25_rhsMult3_0;
  int32_t f_angular_first_0_0 = r_26_rhsMult_0_0;
  int32_t f_angular_first_0_1 = r_26_rhsMult_0_1;
  int32_t f_angular_first_0_2 = r_26_rhsMult_0_2;
  int32_t _tmp50 = ((lever_0_0 * f_linear_3_0_1) >> 15);
  int32_t _tmp51 = ((lever_0_1 * f_linear_3_0_0) >> 15);
  int32_t f_angular_1_0_0 = (_tmp50 - _tmp51);
  int32_t _tmp52 = ((lever_0_2 * f_linear_3_0_0) >> 15);
  int32_t _tmp53 = ((lever_0_0 * f_linear_3_0_2) >> 9);
  int32_t f_angular_1_0_1 = (_tmp52 - _tmp53);
  int32_t _tmp54 = ((lever_0_0 * f_linear_3_0_1) >> 15);
  int32_t _tmp55 = ((lever_0_1 * f_linear_3_0_0) >> 15);
  int32_t f_angular_1_0_2 = (_tmp54 - _tmp55);
  int32_t f_angular_2_0_0 = (f_angular_first_0_0 + f_angular_1_0_0);
  int32_t f_angular_2_0_1 = (f_angular_first_0_1 + f_angular_1_0_1);
  int32_t f_angular_2_0_2 = (f_angular_first_0_2 + f_angular_1_0_2);
  int32_t _tmp56 = ((v_angular_0_0 * h_linear_0_1) >> 15);
  int32_t _tmp57 = ((v_angular_0_1 * h_linear_0_0) >> 15);
  int32_t f_linear_4_temp_0_0 = (_tmp56 - _tmp57);
  int32_t _tmp58 = ((v_angular_0_2 * h_linear_0_0) >> 14);
  int32_t _tmp59 = ((v_angular_0_0 * h_linear_0_2) >> 15);
  int32_t f_linear_4_temp_0_1 = (_tmp58 - _tmp59);
  int32_t _tmp60 = ((v_angular_0_0 * h_linear_0_1) >> 15);
  int32_t _tmp61 = ((v_angular_0_1 * h_linear_0_0) >> 15);
  int32_t f_linear_4_temp_0_2 = (_tmp60 - _tmp61);
  int32_t f_linear_4_0_0 = (f_linear_3_0_0 + f_linear_4_temp_0_0);
  int32_t f_linear_4_0_1 = (f_linear_3_0_1 + f_linear_4_temp_0_1);
  int32_t f_linear_4_0_2 = (((f_linear_3_0_2 << 6) + f_linear_4_temp_0_2) >> 6);
  int32_t _tmp62 = ((v_angular_0_0 * h_angular_first_0_1) >> 15);
  int32_t _tmp63 = ((v_angular_0_1 * h_angular_first_0_0) >> 15);
  int32_t f_angular_3_temp_0_0 = (_tmp62 - _tmp63);
  int32_t _tmp64 = ((v_angular_0_2 * h_angular_first_0_0) >> 14);
  int32_t _tmp65 = ((v_angular_0_0 * h_angular_first_0_2) >> 15);
  int32_t f_angular_3_temp_0_1 = (_tmp64 - _tmp65);
  int32_t _tmp66 = ((v_angular_0_0 * h_angular_first_0_1) >> 15);
  int32_t _tmp67 = ((v_angular_0_1 * h_angular_first_0_0) >> 15);
  int32_t f_angular_3_temp_0_2 = (_tmp66 - _tmp67);
  int32_t f_angular_3_0_0 = (f_angular_2_0_0 + f_angular_3_temp_0_0);
  int32_t f_angular_3_0_1 = (f_angular_2_0_1 + f_angular_3_temp_0_1);
  int32_t f_angular_3_0_2 = (f_angular_2_0_2 + f_angular_3_temp_0_2);
  int32_t _tmp68 = ((v_linear_0_0 * h_linear_0_1) >> 15);
  int32_t _tmp69 = ((v_linear_0_1 * h_linear_0_0) >> 15);
  int32_t f_angular_4_temp_0_0 = (_tmp68 - _tmp69);
  int32_t _tmp70 = ((v_linear_0_2 * h_linear_0_0) >> 15);
  int32_t _tmp71 = ((v_linear_0_0 * h_linear_0_2) >> 15);
  int32_t f_angular_4_temp_0_1 = (_tmp70 - _tmp71);
  int32_t _tmp72 = ((v_linear_0_0 * h_linear_0_1) >> 15);
  int32_t _tmp73 = ((v_linear_0_1 * h_linear_0_0) >> 15);
  int32_t f_angular_4_temp_0_2 = (_tmp72 - _tmp73);
  int32_t f_angular_4_0_0 = (f_angular_3_0_0 + f_angular_4_temp_0_0);
  int32_t f_angular_4_0_1 = (f_angular_3_0_1 + f_angular_4_temp_0_1);
  int32_t f_angular_4_0_2 = (f_angular_3_0_2 + f_angular_4_temp_0_2);
  int32_t h_rnea_firstpass0_0 = h_linear_0_0;
  int32_t h_rnea_firstpass0_1 = h_linear_0_1;
  int32_t h_rnea_firstpass0_2 = h_linear_0_2;
  int32_t h_rnea_firstpass0_3 = h_angular_0_0;
  int32_t h_rnea_firstpass0_4 = h_angular_0_1;
  int32_t h_rnea_firstpass0_5 = h_angular_0_2;
  int32_t f_rnea_firstpass0_0 = f_linear_4_0_0;
  int32_t f_rnea_firstpass0_1 = f_linear_4_0_1;
  int32_t f_rnea_firstpass0_2 = f_linear_4_0_2;
  int32_t f_rnea_firstpass0_3 = f_angular_4_0_0;
  int32_t f_rnea_firstpass0_4 = f_angular_4_0_1;
  int32_t f_rnea_firstpass0_5 = f_angular_4_0_2;
  int32_t r_27_new_v_0_0 = v_linear_0_0;
  int32_t r_27_new_v_0_1 = v_linear_0_1;
  int32_t r_27_new_v_0_2 = v_linear_0_2;
  int32_t r_27_new_v_0_3 = v_angular_0_0;
  int32_t r_27_new_v_0_4 = v_angular_0_1;
  int32_t r_27_new_v_0_5 = v_angular_0_2;
  int32_t rotation_matrix_1_0_0 = qcos_1;
  int32_t rotation_matrix_1_0_1 = -(qsin_1);
  int32_t rotation_matrix_1_0_2 = 0;
  int32_t rotation_matrix_1_1_0 = qsin_1;
  int32_t rotation_matrix_1_1_1 = qcos_1;
  int32_t rotation_matrix_1_1_2 = 0;
  int32_t rotation_matrix_1_2_0 = 0;
  int32_t rotation_matrix_1_2_1 = 0;
  int32_t rotation_matrix_1_2_2 = 16384;
  int32_t limi_rotation_1_0_0 = rotation_matrix_1_0_0;
  int32_t limi_rotation_1_0_1 = rotation_matrix_1_0_1;
  int32_t limi_rotation_1_0_2 = 0;
  int32_t limi_rotation_1_1_0 = 0;
  int32_t limi_rotation_1_1_1 = 0;
  int32_t limi_rotation_1_1_2 = 16384;
  int32_t limi_rotation_1_2_0 = -(rotation_matrix_1_1_0);
  int32_t limi_rotation_1_2_1 = -(rotation_matrix_1_1_1);
  int32_t limi_rotation_1_2_2 = 0;
  int32_t v_linear_1_0 = data_v_1_0;
  int32_t v_linear_1_1 = data_v_1_1;
  int32_t v_linear_1_2 = data_v_1_2;
  int32_t v_angular_1_0 = data_v_1_3;
  int32_t v_angular_1_1 = data_v_1_4;
  int32_t v_angular_1_2 = v_1;
  int32_t parent_v_linear_1_0 = r_27_new_v_0_0;
  int32_t parent_v_linear_1_1 = r_27_new_v_0_1;
  int32_t parent_v_linear_1_2 = r_27_new_v_0_2;
  int32_t parent_v_angular_1_0 = r_27_new_v_0_3;
  int32_t parent_v_angular_1_1 = r_27_new_v_0_4;
  int32_t parent_v_angular_1_2 = r_27_new_v_0_5;
  int32_t parent_a_gf_linear_1_0 = new_a_gf_up3_0_0;
  int32_t parent_a_gf_linear_1_1 = new_a_gf_up3_0_1;
  int32_t parent_a_gf_linear_1_2 = new_a_gf_up3_0_2;
  int32_t parent_a_gf_angular_1_0 = new_a_gf_up3_0_3;
  int32_t parent_a_gf_angular_1_1 = new_a_gf_up3_0_4;
  int32_t parent_a_gf_angular_1_2 = new_a_gf_up3_0_5;
  int32_t _tmp74 = ((limi_translation_1_0 * parent_v_angular_1_1) >> 15);
  int32_t _tmp75 = ((limi_translation_1_1 * parent_v_angular_1_0) >> 15);
  int32_t actInv1_1_0 = (_tmp74 - _tmp75);
  int32_t _tmp76 = ((limi_translation_1_2 * parent_v_angular_1_0) >> 15);
  int32_t _tmp77 = ((limi_translation_1_0 * parent_v_angular_1_2) >> 14);
  int32_t actInv1_1_1 = (_tmp76 - _tmp77);
  int32_t _tmp78 = ((limi_translation_1_0 * parent_v_angular_1_1) >> 15);
  int32_t _tmp79 = ((limi_translation_1_1 * parent_v_angular_1_0) >> 15);
  int32_t actInv1_1_2 = (_tmp78 - _tmp79);
  int32_t actInv2_1_0 = (parent_v_linear_1_0 - actInv1_1_0);
  int32_t actInv2_1_1 = (parent_v_linear_1_1 - actInv1_1_1);
  int32_t actInv2_1_2 = (parent_v_linear_1_2 - actInv1_1_2);
  int32_t actInv3_1_0_0 = limi_rotation_1_0_0;
  int32_t actInv3_1_1_0 = limi_rotation_1_0_1;
  int32_t actInv3_1_2_0 = limi_rotation_1_0_2;
  int32_t actInv3_1_0_1 = limi_rotation_1_1_0;
  int32_t actInv3_1_1_1 = limi_rotation_1_1_1;
  int32_t actInv3_1_2_1 = limi_rotation_1_1_2;
  int32_t actInv3_1_0_2 = limi_rotation_1_2_0;
  int32_t actInv3_1_1_2 = limi_rotation_1_2_1;
  int32_t actInv3_1_2_2 = limi_rotation_1_2_2;
  int32_t _tmp80 = ((actInv3_1_0_0 * actInv2_1_0) >> 14);
  int32_t _tmp81 = ((actInv3_1_0_1 * actInv2_1_1) >> 15);
  int32_t _tmp82 = (_tmp80 + _tmp81);
  int32_t _tmp83 = ((actInv3_1_0_2 * actInv2_1_2) >> 14);
  int32_t actInv4_1_0 = (_tmp82 + _tmp83);
  int32_t _tmp84 = ((actInv3_1_1_0 * actInv2_1_0) >> 14);
  int32_t _tmp85 = ((actInv3_1_1_1 * actInv2_1_1) >> 15);
  int32_t _tmp86 = (_tmp84 + _tmp85);
  int32_t _tmp87 = ((actInv3_1_1_2 * actInv2_1_2) >> 14);
  int32_t actInv4_1_1 = (_tmp86 + _tmp87);
  int32_t _tmp88 = ((actInv3_1_2_0 * actInv2_1_0) >> 15);
  int32_t _tmp89 = ((actInv3_1_2_1 * actInv2_1_1) >> 14);
  int32_t _tmp90 = (_tmp88 + _tmp89);
  int32_t _tmp91 = ((actInv3_1_2_2 * actInv2_1_2) >> 15);
  int32_t actInv4_1_2 = (_tmp90 + _tmp91);
  int32_t act_inv_linear_1_0 = (v_linear_1_0 + actInv4_1_0);
  int32_t act_inv_linear_1_1 = (v_linear_1_1 + actInv4_1_1);
  int32_t act_inv_linear_1_2 = (v_linear_1_2 + actInv4_1_2);
  int32_t _tmp92 = ((actInv3_1_0_0 * parent_v_angular_1_0) >> 14);
  int32_t _tmp93 = ((actInv3_1_0_1 * parent_v_angular_1_1) >> 15);
  int32_t _tmp94 = (_tmp92 + _tmp93);
  int32_t _tmp95 = ((actInv3_1_0_2 * parent_v_angular_1_2) >> 14);
  int32_t actInv5_1_0 = ((_tmp94 + (_tmp95 << 1)) >> 1);
  int32_t _tmp96 = ((actInv3_1_1_0 * parent_v_angular_1_0) >> 14);
  int32_t _tmp97 = ((actInv3_1_1_1 * parent_v_angular_1_1) >> 15);
  int32_t _tmp98 = (_tmp96 + _tmp97);
  int32_t _tmp99 = ((actInv3_1_1_2 * parent_v_angular_1_2) >> 14);
  int32_t actInv5_1_1 = ((_tmp98 + (_tmp99 << 1)) >> 1);
  int32_t _tmp100 = ((actInv3_1_2_0 * parent_v_angular_1_0) >> 15);
  int32_t _tmp101 = ((actInv3_1_2_1 * parent_v_angular_1_1) >> 14);
  int32_t _tmp102 = (_tmp100 + _tmp101);
  int32_t _tmp103 = ((actInv3_1_2_2 * parent_v_angular_1_2) >> 14);
  int32_t actInv5_1_2 = (_tmp102 + _tmp103);
  int32_t act_inv_angular_1_0 = ((v_angular_1_0 + (actInv5_1_0 << 1)) >> 1);
  int32_t act_inv_angular_1_1 = ((v_angular_1_1 + (actInv5_1_1 << 1)) >> 1);
  int32_t act_inv_angular_1_2 = (((v_angular_1_2 << 1) + actInv5_1_2) >> 1);
  int32_t minus_m_w_1 = -(v_1);
  int32_t _tmp104 = -(minus_m_w_1);
  int32_t alpha_cross1_linear_1 = ((_tmp104 * act_inv_linear_1_1) >> 14);
  int32_t alpha_cross2_linear_1 = ((minus_m_w_1 * act_inv_linear_1_0) >> 14);
  int32_t alpha_cross_linear_1_0 = alpha_cross1_linear_1;
  int32_t alpha_cross_linear_1_1 = alpha_cross2_linear_1;
  int32_t alpha_cross_linear_1_2 = 0;
  int32_t _tmp105 = -(minus_m_w_1);
  int32_t alpha_cross1_angular_1 = ((_tmp105 * act_inv_angular_1_1) >> 14);
  int32_t alpha_cross2_angular_1 = ((minus_m_w_1 * act_inv_angular_1_0) >> 14);
  int32_t alpha_cross_angular_1_0 = alpha_cross1_angular_1;
  int32_t alpha_cross_angular_1_1 = alpha_cross2_angular_1;
  int32_t alpha_cross_angular_1_2 = 0;
  int32_t r_28_new_a_gf_1_0 = alpha_cross_linear_1_0;
  int32_t r_28_new_a_gf_1_1 = alpha_cross_linear_1_1;
  int32_t r_28_new_a_gf_1_2 = alpha_cross_linear_1_2;
  int32_t r_28_new_a_gf_1_3 = alpha_cross_angular_1_0;
  int32_t r_28_new_a_gf_1_4 = alpha_cross_angular_1_1;
  int32_t r_28_new_a_gf_1_5 = alpha_cross_angular_1_2;
  int32_t new_a_gf_up1_1 = (((a_1 << 1) + r_28_new_a_gf_1_5) >> 1);
  int32_t new_a_gf2_linear_1_0 = r_28_new_a_gf_1_0;
  int32_t new_a_gf2_linear_1_1 = r_28_new_a_gf_1_1;
  int32_t new_a_gf2_linear_1_2 = r_28_new_a_gf_1_2;
  int32_t new_a_gf2_angular_1_0 = r_28_new_a_gf_1_3;
  int32_t new_a_gf2_angular_1_1 = r_28_new_a_gf_1_4;
  int32_t new_a_gf2_angular_1_2 = new_a_gf_up1_1;
  int32_t _tmp106 = ((limi_translation_1_0 * parent_a_gf_angular_1_1) >> 15);
  int32_t _tmp107 = ((limi_translation_1_1 * parent_a_gf_angular_1_0) >> 15);
  int32_t r_29_actInv1_1_0 = (_tmp106 - _tmp107);
  int32_t _tmp108 = ((limi_translation_1_2 * parent_a_gf_angular_1_0) >> 15);
  int32_t _tmp109 = ((limi_translation_1_0 * parent_a_gf_angular_1_2) >> 14);
  int32_t r_29_actInv1_1_1 = (_tmp108 - _tmp109);
  int32_t _tmp110 = ((limi_translation_1_0 * parent_a_gf_angular_1_1) >> 15);
  int32_t _tmp111 = ((limi_translation_1_1 * parent_a_gf_angular_1_0) >> 15);
  int32_t r_29_actInv1_1_2 = (_tmp110 - _tmp111);
  int32_t r_30_actInv2_1_0 = (parent_a_gf_linear_1_0 - r_29_actInv1_1_0);
  int32_t r_30_actInv2_1_1 = (parent_a_gf_linear_1_1 - r_29_actInv1_1_1);
  int32_t r_30_actInv2_1_2 = (((parent_a_gf_linear_1_2 << 4) - r_29_actInv1_1_2) >> 4);
  int32_t r_31_actInv3_1_0_0 = limi_rotation_1_0_0;
  int32_t r_31_actInv3_1_1_0 = limi_rotation_1_0_1;
  int32_t r_31_actInv3_1_2_0 = limi_rotation_1_0_2;
  int32_t r_31_actInv3_1_0_1 = limi_rotation_1_1_0;
  int32_t r_31_actInv3_1_1_1 = limi_rotation_1_1_1;
  int32_t r_31_actInv3_1_2_1 = limi_rotation_1_1_2;
  int32_t r_31_actInv3_1_0_2 = limi_rotation_1_2_0;
  int32_t r_31_actInv3_1_1_2 = limi_rotation_1_2_1;
  int32_t r_31_actInv3_1_2_2 = limi_rotation_1_2_2;
  int32_t _tmp112 = ((r_31_actInv3_1_0_0 * r_30_actInv2_1_0) >> 14);
  int32_t _tmp113 = ((r_31_actInv3_1_0_1 * r_30_actInv2_1_1) >> 15);
  int32_t _tmp114 = (_tmp112 + _tmp113);
  int32_t _tmp115 = ((r_31_actInv3_1_0_2 * r_30_actInv2_1_2) >> 14);
  int32_t r_32_actInv4_1_0 = ((_tmp114 + (_tmp115 << 4)) >> 4);
  int32_t _tmp116 = ((r_31_actInv3_1_1_0 * r_30_actInv2_1_0) >> 14);
  int32_t _tmp117 = ((r_31_actInv3_1_1_1 * r_30_actInv2_1_1) >> 15);
  int32_t _tmp118 = (_tmp116 + _tmp117);
  int32_t _tmp119 = ((r_31_actInv3_1_1_2 * r_30_actInv2_1_2) >> 14);
  int32_t r_32_actInv4_1_1 = ((_tmp118 + (_tmp119 << 4)) >> 4);
  int32_t _tmp120 = ((r_31_actInv3_1_2_0 * r_30_actInv2_1_0) >> 15);
  int32_t _tmp121 = ((r_31_actInv3_1_2_1 * r_30_actInv2_1_1) >> 14);
  int32_t _tmp122 = (_tmp120 + _tmp121);
  int32_t _tmp123 = ((r_31_actInv3_1_2_2 * r_30_actInv2_1_2) >> 11);
  int32_t r_32_actInv4_1_2 = (_tmp122 + _tmp123);
  int32_t r_33_act_inv_linear_1_0 = ((new_a_gf2_linear_1_0 + (r_32_actInv4_1_0 << 4)) >> 4);
  int32_t r_33_act_inv_linear_1_1 = ((new_a_gf2_linear_1_1 + (r_32_actInv4_1_1 << 4)) >> 4);
  int32_t r_33_act_inv_linear_1_2 = (new_a_gf2_linear_1_2 + r_32_actInv4_1_2);
  int32_t _tmp124 = ((r_31_actInv3_1_0_0 * parent_a_gf_angular_1_0) >> 14);
  int32_t _tmp125 = ((r_31_actInv3_1_0_1 * parent_a_gf_angular_1_1) >> 15);
  int32_t _tmp126 = (_tmp124 + _tmp125);
  int32_t _tmp127 = ((r_31_actInv3_1_0_2 * parent_a_gf_angular_1_2) >> 14);
  int32_t r_34_actInv5_1_0 = ((_tmp126 + (_tmp127 << 1)) >> 1);
  int32_t _tmp128 = ((r_31_actInv3_1_1_0 * parent_a_gf_angular_1_0) >> 14);
  int32_t _tmp129 = ((r_31_actInv3_1_1_1 * parent_a_gf_angular_1_1) >> 15);
  int32_t _tmp130 = (_tmp128 + _tmp129);
  int32_t _tmp131 = ((r_31_actInv3_1_1_2 * parent_a_gf_angular_1_2) >> 14);
  int32_t r_34_actInv5_1_1 = ((_tmp130 + (_tmp131 << 1)) >> 1);
  int32_t _tmp132 = ((r_31_actInv3_1_2_0 * parent_a_gf_angular_1_0) >> 15);
  int32_t _tmp133 = ((r_31_actInv3_1_2_1 * parent_a_gf_angular_1_1) >> 14);
  int32_t _tmp134 = (_tmp132 + _tmp133);
  int32_t _tmp135 = ((r_31_actInv3_1_2_2 * parent_a_gf_angular_1_2) >> 14);
  int32_t r_34_actInv5_1_2 = (_tmp134 + _tmp135);
  int32_t r_35_act_inv_angular_1_0 = ((new_a_gf2_angular_1_0 + r_34_actInv5_1_0) >> 1);
  int32_t r_35_act_inv_angular_1_1 = ((new_a_gf2_angular_1_1 + r_34_actInv5_1_1) >> 1);
  int32_t r_35_act_inv_angular_1_2 = (((new_a_gf2_angular_1_2 << 1) + r_34_actInv5_1_2) >> 1);
  int32_t new_a_gf_up3_1_0 = r_33_act_inv_linear_1_0;
  int32_t new_a_gf_up3_1_1 = r_33_act_inv_linear_1_1;
  int32_t new_a_gf_up3_1_2 = r_33_act_inv_linear_1_2;
  int32_t new_a_gf_up3_1_3 = r_35_act_inv_angular_1_0;
  int32_t new_a_gf_up3_1_4 = r_35_act_inv_angular_1_1;
  int32_t new_a_gf_up3_1_5 = r_35_act_inv_angular_1_2;
  int32_t _tmp136 = ((lever_1_0 * act_inv_angular_1_1) >> 14);
  int32_t _tmp137 = ((lever_1_1 * act_inv_angular_1_0) >> 14);
  int32_t h_linear_1_1_0 = (_tmp136 - _tmp137);
  int32_t _tmp138 = ((lever_1_2 * act_inv_angular_1_0) >> 14);
  int32_t _tmp139 = ((lever_1_0 * act_inv_angular_1_2) >> 14);
  int32_t h_linear_1_1_1 = (_tmp138 - _tmp139);
  int32_t _tmp140 = ((lever_1_0 * act_inv_angular_1_1) >> 14);
  int32_t _tmp141 = ((lever_1_1 * act_inv_angular_1_0) >> 14);
  int32_t h_linear_1_1_2 = (_tmp140 - _tmp141);
  int32_t h_linear_2_1_0 = (act_inv_linear_1_0 - h_linear_1_1_0);
  int32_t h_linear_2_1_1 = (act_inv_linear_1_1 - h_linear_1_1_1);
  int32_t h_linear_2_1_2 = (act_inv_linear_1_2 - h_linear_1_1_2);
  int32_t h_linear_1_0 = ((masses_1 * h_linear_2_1_0) >> 15);
  int32_t h_linear_1_1 = ((masses_1 * h_linear_2_1_1) >> 15);
  int32_t h_linear_1_2 = ((masses_1 * h_linear_2_1_2) >> 15);
  int32_t r_36_ = ((inertia_1_0_0 * act_inv_angular_1_0) >> 14);
  int32_t r_37_ = ((inertia_1_0_1 * act_inv_angular_1_1) >> 14);
  int32_t r_38_ = ((inertia_1_0_2 * act_inv_angular_1_2) >> 14);
  int32_t r_39_ = ((inertia_1_0_1 * act_inv_angular_1_0) >> 14);
  int32_t r_40_ = ((inertia_1_1_1 * act_inv_angular_1_1) >> 14);
  int32_t r_41_ = ((inertia_1_1_2 * act_inv_angular_1_2) >> 14);
  int32_t r_42_ = ((inertia_1_0_2 * act_inv_angular_1_0) >> 14);
  int32_t r_43_ = ((inertia_1_1_2 * act_inv_angular_1_1) >> 14);
  int32_t r_44_ = ((inertia_1_2_2 * act_inv_angular_1_2) >> 14);
  int32_t rhsMult1_temp_1 = (r_36_ + r_37_);
  int32_t rhsMult1_1 = (rhsMult1_temp_1 + r_38_);
  int32_t rhsMult2_temp_1 = (r_39_ + r_40_);
  int32_t rhsMult2_1 = (rhsMult2_temp_1 + r_41_);
  int32_t rhsMult3_temp_1 = (r_42_ + r_43_);
  int32_t rhsMult3_1 = (rhsMult3_temp_1 + r_44_);
  int32_t rhsMult_1_0 = rhsMult1_1;
  int32_t rhsMult_1_1 = rhsMult2_1;
  int32_t rhsMult_1_2 = rhsMult3_1;
  int32_t h_angular_first_1_0 = rhsMult_1_0;
  int32_t h_angular_first_1_1 = rhsMult_1_1;
  int32_t h_angular_first_1_2 = rhsMult_1_2;
  int32_t _tmp142 = ((lever_1_0 * h_linear_1_1) >> 15);
  int32_t _tmp143 = ((lever_1_1 * h_linear_1_0) >> 15);
  int32_t h_angular_1_1_0 = (_tmp142 - _tmp143);
  int32_t _tmp144 = ((lever_1_2 * h_linear_1_0) >> 15);
  int32_t _tmp145 = ((lever_1_0 * h_linear_1_2) >> 15);
  int32_t h_angular_1_1_1 = (_tmp144 - _tmp145);
  int32_t _tmp146 = ((lever_1_0 * h_linear_1_1) >> 15);
  int32_t _tmp147 = ((lever_1_1 * h_linear_1_0) >> 15);
  int32_t h_angular_1_1_2 = (_tmp146 - _tmp147);
  int32_t h_angular_1_0 = (h_angular_first_1_0 + h_angular_1_1_0);
  int32_t h_angular_1_1 = (h_angular_first_1_1 + h_angular_1_1_1);
  int32_t h_angular_1_2 = (h_angular_first_1_2 + h_angular_1_1_2);
  int32_t _tmp148 = ((lever_1_0 * r_35_act_inv_angular_1_1) >> 13);
  int32_t _tmp149 = ((lever_1_1 * r_35_act_inv_angular_1_0) >> 13);
  int32_t f_linear_1_1_0 = (_tmp148 - _tmp149);
  int32_t _tmp150 = ((lever_1_2 * r_35_act_inv_angular_1_0) >> 13);
  int32_t _tmp151 = ((lever_1_0 * r_35_act_inv_angular_1_2) >> 14);
  int32_t f_linear_1_1_1 = (_tmp150 - _tmp151);
  int32_t _tmp152 = ((lever_1_0 * r_35_act_inv_angular_1_1) >> 13);
  int32_t _tmp153 = ((lever_1_1 * r_35_act_inv_angular_1_0) >> 13);
  int32_t f_linear_1_1_2 = (_tmp152 - _tmp153);
  int32_t f_linear_2_1_0 = (((r_33_act_inv_linear_1_0 << 4) - f_linear_1_1_0) >> 4);
  int32_t f_linear_2_1_1 = (((r_33_act_inv_linear_1_1 << 4) - f_linear_1_1_1) >> 4);
  int32_t f_linear_2_1_2 = (r_33_act_inv_linear_1_2 - f_linear_1_1_2);
  int32_t f_linear_3_1_0 = ((masses_1 * f_linear_2_1_0) >> 14);
  int32_t f_linear_3_1_1 = ((masses_1 * f_linear_2_1_1) >> 14);
  int32_t f_linear_3_1_2 = ((masses_1 * f_linear_2_1_2) >> 15);
  int32_t r_45_ = ((inertia_1_0_0 * r_35_act_inv_angular_1_0) >> 13);
  int32_t r_46_ = ((inertia_1_0_1 * r_35_act_inv_angular_1_1) >> 13);
  int32_t r_47_ = ((inertia_1_0_2 * r_35_act_inv_angular_1_2) >> 14);
  int32_t r_48_ = ((inertia_1_0_1 * r_35_act_inv_angular_1_0) >> 13);
  int32_t r_49_ = ((inertia_1_1_1 * r_35_act_inv_angular_1_1) >> 13);
  int32_t r_50_ = ((inertia_1_1_2 * r_35_act_inv_angular_1_2) >> 14);
  int32_t r_51_ = ((inertia_1_0_2 * r_35_act_inv_angular_1_0) >> 13);
  int32_t r_52_ = ((inertia_1_1_2 * r_35_act_inv_angular_1_1) >> 13);
  int32_t r_53_ = ((inertia_1_2_2 * r_35_act_inv_angular_1_2) >> 14);
  int32_t r_54_rhsMult1_temp_1 = (r_45_ + r_46_);
  int32_t r_55_rhsMult1_1 = (r_54_rhsMult1_temp_1 + r_47_);
  int32_t r_56_rhsMult2_temp_1 = (r_48_ + r_49_);
  int32_t r_57_rhsMult2_1 = (r_56_rhsMult2_temp_1 + r_50_);
  int32_t r_58_rhsMult3_temp_1 = (r_51_ + r_52_);
  int32_t r_59_rhsMult3_1 = (r_58_rhsMult3_temp_1 + r_53_);
  int32_t r_60_rhsMult_1_0 = r_55_rhsMult1_1;
  int32_t r_60_rhsMult_1_1 = r_57_rhsMult2_1;
  int32_t r_60_rhsMult_1_2 = r_59_rhsMult3_1;
  int32_t f_angular_first_1_0 = r_60_rhsMult_1_0;
  int32_t f_angular_first_1_1 = r_60_rhsMult_1_1;
  int32_t f_angular_first_1_2 = r_60_rhsMult_1_2;
  int32_t _tmp154 = ((lever_1_0 * f_linear_3_1_1) >> 12);
  int32_t _tmp155 = ((lever_1_1 * f_linear_3_1_0) >> 12);
  int32_t f_angular_1_1_0 = (_tmp154 - _tmp155);
  int32_t _tmp156 = ((lever_1_2 * f_linear_3_1_0) >> 12);
  int32_t _tmp157 = ((lever_1_0 * f_linear_3_1_2) >> 15);
  int32_t f_angular_1_1_1 = (_tmp156 - _tmp157);
  int32_t _tmp158 = ((lever_1_0 * f_linear_3_1_1) >> 12);
  int32_t _tmp159 = ((lever_1_1 * f_linear_3_1_0) >> 12);
  int32_t f_angular_1_1_2 = (_tmp158 - _tmp159);
  int32_t f_angular_2_1_0 = (f_angular_first_1_0 + f_angular_1_1_0);
  int32_t f_angular_2_1_1 = (f_angular_first_1_1 + f_angular_1_1_1);
  int32_t f_angular_2_1_2 = (f_angular_first_1_2 + f_angular_1_1_2);
  int32_t _tmp160 = ((act_inv_angular_1_0 * h_linear_1_1) >> 14);
  int32_t _tmp161 = ((act_inv_angular_1_1 * h_linear_1_0) >> 14);
  int32_t f_linear_4_temp_1_0 = (_tmp160 - _tmp161);
  int32_t _tmp162 = ((act_inv_angular_1_2 * h_linear_1_0) >> 14);
  int32_t _tmp163 = ((act_inv_angular_1_0 * h_linear_1_2) >> 14);
  int32_t f_linear_4_temp_1_1 = (_tmp162 - _tmp163);
  int32_t _tmp164 = ((act_inv_angular_1_0 * h_linear_1_1) >> 14);
  int32_t _tmp165 = ((act_inv_angular_1_1 * h_linear_1_0) >> 14);
  int32_t f_linear_4_temp_1_2 = (_tmp164 - _tmp165);
  int32_t f_linear_4_1_0 = (((f_linear_3_1_0 << 3) + f_linear_4_temp_1_0) >> 3);
  int32_t f_linear_4_1_1 = (((f_linear_3_1_1 << 3) + f_linear_4_temp_1_1) >> 3);
  int32_t f_linear_4_1_2 = (f_linear_3_1_2 + f_linear_4_temp_1_2);
  int32_t _tmp166 = ((act_inv_angular_1_0 * h_angular_first_1_1) >> 14);
  int32_t _tmp167 = ((act_inv_angular_1_1 * h_angular_first_1_0) >> 14);
  int32_t f_angular_3_temp_1_0 = (_tmp166 - _tmp167);
  int32_t _tmp168 = ((act_inv_angular_1_2 * h_angular_first_1_0) >> 14);
  int32_t _tmp169 = ((act_inv_angular_1_0 * h_angular_first_1_2) >> 14);
  int32_t f_angular_3_temp_1_1 = (_tmp168 - _tmp169);
  int32_t _tmp170 = ((act_inv_angular_1_0 * h_angular_first_1_1) >> 14);
  int32_t _tmp171 = ((act_inv_angular_1_1 * h_angular_first_1_0) >> 14);
  int32_t f_angular_3_temp_1_2 = (_tmp170 - _tmp171);
  int32_t f_angular_3_1_0 = (f_angular_2_1_0 + f_angular_3_temp_1_0);
  int32_t f_angular_3_1_1 = (f_angular_2_1_1 + f_angular_3_temp_1_1);
  int32_t f_angular_3_1_2 = (f_angular_2_1_2 + f_angular_3_temp_1_2);
  int32_t _tmp172 = ((act_inv_linear_1_0 * h_linear_1_1) >> 15);
  int32_t _tmp173 = ((act_inv_linear_1_1 * h_linear_1_0) >> 15);
  int32_t f_angular_4_temp_1_0 = (_tmp172 - _tmp173);
  int32_t _tmp174 = ((act_inv_linear_1_2 * h_linear_1_0) >> 15);
  int32_t _tmp175 = ((act_inv_linear_1_0 * h_linear_1_2) >> 15);
  int32_t f_angular_4_temp_1_1 = (_tmp174 - _tmp175);
  int32_t _tmp176 = ((act_inv_linear_1_0 * h_linear_1_1) >> 15);
  int32_t _tmp177 = ((act_inv_linear_1_1 * h_linear_1_0) >> 15);
  int32_t f_angular_4_temp_1_2 = (_tmp176 - _tmp177);
  int32_t f_angular_4_1_0 = (f_angular_3_1_0 + f_angular_4_temp_1_0);
  int32_t f_angular_4_1_1 = (f_angular_3_1_1 + f_angular_4_temp_1_1);
  int32_t f_angular_4_1_2 = (f_angular_3_1_2 + f_angular_4_temp_1_2);
  int32_t h_rnea_firstpass1_0 = h_linear_1_0;
  int32_t h_rnea_firstpass1_1 = h_linear_1_1;
  int32_t h_rnea_firstpass1_2 = h_linear_1_2;
  int32_t h_rnea_firstpass1_3 = h_angular_1_0;
  int32_t h_rnea_firstpass1_4 = h_angular_1_1;
  int32_t h_rnea_firstpass1_5 = h_angular_1_2;
  int32_t f_rnea_firstpass1_0 = f_linear_4_1_0;
  int32_t f_rnea_firstpass1_1 = f_linear_4_1_1;
  int32_t f_rnea_firstpass1_2 = f_linear_4_1_2;
  int32_t f_rnea_firstpass1_3 = f_angular_4_1_0;
  int32_t f_rnea_firstpass1_4 = f_angular_4_1_1;
  int32_t f_rnea_firstpass1_5 = f_angular_4_1_2;
  int32_t r_61_new_v_1_0 = act_inv_linear_1_0;
  int32_t r_61_new_v_1_1 = act_inv_linear_1_1;
  int32_t r_61_new_v_1_2 = act_inv_linear_1_2;
  int32_t r_61_new_v_1_3 = act_inv_angular_1_0;
  int32_t r_61_new_v_1_4 = act_inv_angular_1_1;
  int32_t r_61_new_v_1_5 = act_inv_angular_1_2;
  int32_t rotation_matrix_2_0_0 = qcos_2;
  int32_t rotation_matrix_2_0_1 = -(qsin_2);
  int32_t rotation_matrix_2_0_2 = 0;
  int32_t rotation_matrix_2_1_0 = qsin_2;
  int32_t rotation_matrix_2_1_1 = qcos_2;
  int32_t rotation_matrix_2_1_2 = 0;
  int32_t rotation_matrix_2_2_0 = 0;
  int32_t rotation_matrix_2_2_1 = 0;
  int32_t rotation_matrix_2_2_2 = 16384;
  int32_t limi_rotation_2_0_0 = rotation_matrix_2_0_0;
  int32_t limi_rotation_2_0_1 = rotation_matrix_2_0_1;
  int32_t limi_rotation_2_0_2 = 0;
  int32_t limi_rotation_2_1_0 = 0;
  int32_t limi_rotation_2_1_1 = 0;
  int32_t limi_rotation_2_1_2 = -16385;
  int32_t limi_rotation_2_2_0 = rotation_matrix_2_1_0;
  int32_t limi_rotation_2_2_1 = rotation_matrix_2_1_1;
  int32_t limi_rotation_2_2_2 = 0;
  int32_t v_linear_2_0 = data_v_2_0;
  int32_t v_linear_2_1 = data_v_2_1;
  int32_t v_linear_2_2 = data_v_2_2;
  int32_t v_angular_2_0 = data_v_2_3;
  int32_t v_angular_2_1 = data_v_2_4;
  int32_t v_angular_2_2 = v_2;
  int32_t parent_v_linear_2_0 = r_61_new_v_1_0;
  int32_t parent_v_linear_2_1 = r_61_new_v_1_1;
  int32_t parent_v_linear_2_2 = r_61_new_v_1_2;
  int32_t parent_v_angular_2_0 = r_61_new_v_1_3;
  int32_t parent_v_angular_2_1 = r_61_new_v_1_4;
  int32_t parent_v_angular_2_2 = r_61_new_v_1_5;
  int32_t parent_a_gf_linear_2_0 = new_a_gf_up3_1_0;
  int32_t parent_a_gf_linear_2_1 = new_a_gf_up3_1_1;
  int32_t parent_a_gf_linear_2_2 = new_a_gf_up3_1_2;
  int32_t parent_a_gf_angular_2_0 = new_a_gf_up3_1_3;
  int32_t parent_a_gf_angular_2_1 = new_a_gf_up3_1_4;
  int32_t parent_a_gf_angular_2_2 = new_a_gf_up3_1_5;
  int32_t _tmp178 = ((limi_translation_2_0 * parent_v_angular_2_1) >> 14);
  int32_t _tmp179 = ((limi_translation_2_1 * parent_v_angular_2_0) >> 14);
  int32_t actInv1_2_0 = (_tmp178 - _tmp179);
  int32_t _tmp180 = ((limi_translation_2_2 * parent_v_angular_2_0) >> 14);
  int32_t _tmp181 = ((limi_translation_2_0 * parent_v_angular_2_2) >> 14);
  int32_t actInv1_2_1 = (_tmp180 - _tmp181);
  int32_t _tmp182 = ((limi_translation_2_0 * parent_v_angular_2_1) >> 14);
  int32_t _tmp183 = ((limi_translation_2_1 * parent_v_angular_2_0) >> 14);
  int32_t actInv1_2_2 = (_tmp182 - _tmp183);
  int32_t actInv2_2_0 = (parent_v_linear_2_0 - actInv1_2_0);
  int32_t actInv2_2_1 = (parent_v_linear_2_1 - actInv1_2_1);
  int32_t actInv2_2_2 = (parent_v_linear_2_2 - actInv1_2_2);
  int32_t actInv3_2_0_0 = limi_rotation_2_0_0;
  int32_t actInv3_2_1_0 = limi_rotation_2_0_1;
  int32_t actInv3_2_2_0 = limi_rotation_2_0_2;
  int32_t actInv3_2_0_1 = limi_rotation_2_1_0;
  int32_t actInv3_2_1_1 = limi_rotation_2_1_1;
  int32_t actInv3_2_2_1 = limi_rotation_2_1_2;
  int32_t actInv3_2_0_2 = limi_rotation_2_2_0;
  int32_t actInv3_2_1_2 = limi_rotation_2_2_1;
  int32_t actInv3_2_2_2 = limi_rotation_2_2_2;
  int32_t _tmp184 = ((actInv3_2_0_0 * actInv2_2_0) >> 14);
  int32_t _tmp185 = ((actInv3_2_0_1 * actInv2_2_1) >> 15);
  int32_t _tmp186 = (_tmp184 + _tmp185);
  int32_t _tmp187 = ((actInv3_2_0_2 * actInv2_2_2) >> 14);
  int32_t actInv4_2_0 = (_tmp186 + _tmp187);
  int32_t _tmp188 = ((actInv3_2_1_0 * actInv2_2_0) >> 14);
  int32_t _tmp189 = ((actInv3_2_1_1 * actInv2_2_1) >> 15);
  int32_t _tmp190 = (_tmp188 + _tmp189);
  int32_t _tmp191 = ((actInv3_2_1_2 * actInv2_2_2) >> 14);
  int32_t actInv4_2_1 = (_tmp190 + _tmp191);
  int32_t _tmp192 = ((actInv3_2_2_0 * actInv2_2_0) >> 15);
  int32_t _tmp193 = ((actInv3_2_2_1 * actInv2_2_1) >> 14);
  int32_t _tmp194 = (_tmp192 + _tmp193);
  int32_t _tmp195 = ((actInv3_2_2_2 * actInv2_2_2) >> 15);
  int32_t actInv4_2_2 = (_tmp194 + _tmp195);
  int32_t act_inv_linear_2_0 = (v_linear_2_0 + actInv4_2_0);
  int32_t act_inv_linear_2_1 = (v_linear_2_1 + actInv4_2_1);
  int32_t act_inv_linear_2_2 = (v_linear_2_2 + actInv4_2_2);
  int32_t _tmp196 = ((actInv3_2_0_0 * parent_v_angular_2_0) >> 14);
  int32_t _tmp197 = ((actInv3_2_0_1 * parent_v_angular_2_1) >> 14);
  int32_t _tmp198 = (((_tmp196 << 1) + _tmp197) >> 1);
  int32_t _tmp199 = ((actInv3_2_0_2 * parent_v_angular_2_2) >> 14);
  int32_t actInv5_2_0 = ((_tmp198 + _tmp199) >> 1);
  int32_t _tmp200 = ((actInv3_2_1_0 * parent_v_angular_2_0) >> 14);
  int32_t _tmp201 = ((actInv3_2_1_1 * parent_v_angular_2_1) >> 14);
  int32_t _tmp202 = (((_tmp200 << 1) + _tmp201) >> 1);
  int32_t _tmp203 = ((actInv3_2_1_2 * parent_v_angular_2_2) >> 14);
  int32_t actInv5_2_1 = ((_tmp202 + _tmp203) >> 1);
  int32_t _tmp204 = ((actInv3_2_2_0 * parent_v_angular_2_0) >> 14);
  int32_t _tmp205 = ((actInv3_2_2_1 * parent_v_angular_2_1) >> 14);
  int32_t _tmp206 = ((_tmp204 + (_tmp205 << 1)) >> 1);
  int32_t _tmp207 = ((actInv3_2_2_2 * parent_v_angular_2_2) >> 14);
  int32_t actInv5_2_2 = (((_tmp206 << 1) + _tmp207) >> 1);
  int32_t act_inv_angular_2_0 = ((v_angular_2_0 + (actInv5_2_0 << 2)) >> 2);
  int32_t act_inv_angular_2_1 = ((v_angular_2_1 + (actInv5_2_1 << 2)) >> 2);
  int32_t act_inv_angular_2_2 = ((v_angular_2_2 + actInv5_2_2) >> 1);
  int32_t minus_m_w_2 = -(v_2);
  int32_t _tmp208 = -(minus_m_w_2);
  int32_t alpha_cross1_linear_2 = ((_tmp208 * act_inv_linear_2_1) >> 14);
  int32_t alpha_cross2_linear_2 = ((minus_m_w_2 * act_inv_linear_2_0) >> 14);
  int32_t alpha_cross_linear_2_0 = alpha_cross1_linear_2;
  int32_t alpha_cross_linear_2_1 = alpha_cross2_linear_2;
  int32_t alpha_cross_linear_2_2 = 0;
  int32_t _tmp209 = -(minus_m_w_2);
  int32_t alpha_cross1_angular_2 = ((_tmp209 * act_inv_angular_2_1) >> 14);
  int32_t alpha_cross2_angular_2 = ((minus_m_w_2 * act_inv_angular_2_0) >> 14);
  int32_t alpha_cross_angular_2_0 = alpha_cross1_angular_2;
  int32_t alpha_cross_angular_2_1 = alpha_cross2_angular_2;
  int32_t alpha_cross_angular_2_2 = 0;
  int32_t r_62_new_a_gf_2_0 = alpha_cross_linear_2_0;
  int32_t r_62_new_a_gf_2_1 = alpha_cross_linear_2_1;
  int32_t r_62_new_a_gf_2_2 = alpha_cross_linear_2_2;
  int32_t r_62_new_a_gf_2_3 = alpha_cross_angular_2_0;
  int32_t r_62_new_a_gf_2_4 = alpha_cross_angular_2_1;
  int32_t r_62_new_a_gf_2_5 = alpha_cross_angular_2_2;
  int32_t new_a_gf_up1_2 = (((a_2 << 1) + r_62_new_a_gf_2_5) >> 1);
  int32_t new_a_gf2_linear_2_0 = r_62_new_a_gf_2_0;
  int32_t new_a_gf2_linear_2_1 = r_62_new_a_gf_2_1;
  int32_t new_a_gf2_linear_2_2 = r_62_new_a_gf_2_2;
  int32_t new_a_gf2_angular_2_0 = r_62_new_a_gf_2_3;
  int32_t new_a_gf2_angular_2_1 = r_62_new_a_gf_2_4;
  int32_t new_a_gf2_angular_2_2 = new_a_gf_up1_2;
  int32_t _tmp210 = ((limi_translation_2_0 * parent_a_gf_angular_2_1) >> 13);
  int32_t _tmp211 = ((limi_translation_2_1 * parent_a_gf_angular_2_0) >> 13);
  int32_t r_63_actInv1_2_0 = (_tmp210 - _tmp211);
  int32_t _tmp212 = ((limi_translation_2_2 * parent_a_gf_angular_2_0) >> 13);
  int32_t _tmp213 = ((limi_translation_2_0 * parent_a_gf_angular_2_2) >> 14);
  int32_t r_63_actInv1_2_1 = (_tmp212 - _tmp213);
  int32_t _tmp214 = ((limi_translation_2_0 * parent_a_gf_angular_2_1) >> 13);
  int32_t _tmp215 = ((limi_translation_2_1 * parent_a_gf_angular_2_0) >> 13);
  int32_t r_63_actInv1_2_2 = (_tmp214 - _tmp215);
  int32_t r_64_actInv2_2_0 = (((parent_a_gf_linear_2_0 << 4) - r_63_actInv1_2_0) >> 4);
  int32_t r_64_actInv2_2_1 = (((parent_a_gf_linear_2_1 << 4) - r_63_actInv1_2_1) >> 4);
  int32_t r_64_actInv2_2_2 = (parent_a_gf_linear_2_2 - r_63_actInv1_2_2);
  int32_t r_65_actInv3_2_0_0 = limi_rotation_2_0_0;
  int32_t r_65_actInv3_2_1_0 = limi_rotation_2_0_1;
  int32_t r_65_actInv3_2_2_0 = limi_rotation_2_0_2;
  int32_t r_65_actInv3_2_0_1 = limi_rotation_2_1_0;
  int32_t r_65_actInv3_2_1_1 = limi_rotation_2_1_1;
  int32_t r_65_actInv3_2_2_1 = limi_rotation_2_1_2;
  int32_t r_65_actInv3_2_0_2 = limi_rotation_2_2_0;
  int32_t r_65_actInv3_2_1_2 = limi_rotation_2_2_1;
  int32_t r_65_actInv3_2_2_2 = limi_rotation_2_2_2;
  int32_t _tmp216 = ((r_65_actInv3_2_0_0 * r_64_actInv2_2_0) >> 14);
  int32_t _tmp217 = ((r_65_actInv3_2_0_1 * r_64_actInv2_2_1) >> 11);
  int32_t _tmp218 = (((_tmp216 << 4) + _tmp217) >> 4);
  int32_t _tmp219 = ((r_65_actInv3_2_0_2 * r_64_actInv2_2_2) >> 14);
  int32_t r_66_actInv4_2_0 = (((_tmp218 << 4) + _tmp219) >> 4);
  int32_t _tmp220 = ((r_65_actInv3_2_1_0 * r_64_actInv2_2_0) >> 14);
  int32_t _tmp221 = ((r_65_actInv3_2_1_1 * r_64_actInv2_2_1) >> 11);
  int32_t _tmp222 = (((_tmp220 << 4) + _tmp221) >> 4);
  int32_t _tmp223 = ((r_65_actInv3_2_1_2 * r_64_actInv2_2_2) >> 14);
  int32_t r_66_actInv4_2_1 = (((_tmp222 << 4) + _tmp223) >> 4);
  int32_t _tmp224 = ((r_65_actInv3_2_2_0 * r_64_actInv2_2_0) >> 11);
  int32_t _tmp225 = ((r_65_actInv3_2_2_1 * r_64_actInv2_2_1) >> 14);
  int32_t _tmp226 = ((_tmp224 + (_tmp225 << 4)) >> 4);
  int32_t _tmp227 = ((r_65_actInv3_2_2_2 * r_64_actInv2_2_2) >> 15);
  int32_t r_66_actInv4_2_2 = (((_tmp226 << 4) + _tmp227) >> 4);
  int32_t r_67_act_inv_linear_2_0 = ((new_a_gf2_linear_2_0 + (r_66_actInv4_2_0 << 4)) >> 4);
  int32_t r_67_act_inv_linear_2_1 = ((new_a_gf2_linear_2_1 + (r_66_actInv4_2_1 << 4)) >> 4);
  int32_t r_67_act_inv_linear_2_2 = ((new_a_gf2_linear_2_2 + (r_66_actInv4_2_2 << 4)) >> 4);
  int32_t _tmp228 = ((r_65_actInv3_2_0_0 * parent_a_gf_angular_2_0) >> 14);
  int32_t _tmp229 = ((r_65_actInv3_2_0_1 * parent_a_gf_angular_2_1) >> 13);
  int32_t _tmp230 = (((_tmp228 << 2) + _tmp229) >> 2);
  int32_t _tmp231 = ((r_65_actInv3_2_0_2 * parent_a_gf_angular_2_2) >> 14);
  int32_t r_68_actInv5_2_0 = (((_tmp230 << 1) + _tmp231) >> 1);
  int32_t _tmp232 = ((r_65_actInv3_2_1_0 * parent_a_gf_angular_2_0) >> 14);
  int32_t _tmp233 = ((r_65_actInv3_2_1_1 * parent_a_gf_angular_2_1) >> 13);
  int32_t _tmp234 = (((_tmp232 << 2) + _tmp233) >> 2);
  int32_t _tmp235 = ((r_65_actInv3_2_1_2 * parent_a_gf_angular_2_2) >> 14);
  int32_t r_68_actInv5_2_1 = (((_tmp234 << 1) + _tmp235) >> 1);
  int32_t _tmp236 = ((r_65_actInv3_2_2_0 * parent_a_gf_angular_2_0) >> 13);
  int32_t _tmp237 = ((r_65_actInv3_2_2_1 * parent_a_gf_angular_2_1) >> 14);
  int32_t _tmp238 = ((_tmp236 + (_tmp237 << 2)) >> 2);
  int32_t _tmp239 = ((r_65_actInv3_2_2_2 * parent_a_gf_angular_2_2) >> 14);
  int32_t r_68_actInv5_2_2 = (((_tmp238 << 2) + _tmp239) >> 2);
  int32_t r_69_act_inv_angular_2_0 = ((new_a_gf2_angular_2_0 + r_68_actInv5_2_0) >> 1);
  int32_t r_69_act_inv_angular_2_1 = ((new_a_gf2_angular_2_1 + r_68_actInv5_2_1) >> 1);
  int32_t r_69_act_inv_angular_2_2 = ((new_a_gf2_angular_2_2 + (r_68_actInv5_2_2 << 1)) >> 1);
  int32_t new_a_gf_up3_2_0 = r_67_act_inv_linear_2_0;
  int32_t new_a_gf_up3_2_1 = r_67_act_inv_linear_2_1;
  int32_t new_a_gf_up3_2_2 = r_67_act_inv_linear_2_2;
  int32_t new_a_gf_up3_2_3 = r_69_act_inv_angular_2_0;
  int32_t new_a_gf_up3_2_4 = r_69_act_inv_angular_2_1;
  int32_t new_a_gf_up3_2_5 = r_69_act_inv_angular_2_2;
  int32_t _tmp240 = ((lever_2_0 * act_inv_angular_2_1) >> 13);
  int32_t _tmp241 = ((lever_2_1 * act_inv_angular_2_0) >> 13);
  int32_t r_70_h_linear_1_2_0 = (_tmp240 - _tmp241);
  int32_t _tmp242 = ((lever_2_2 * act_inv_angular_2_0) >> 13);
  int32_t _tmp243 = ((lever_2_0 * act_inv_angular_2_2) >> 13);
  int32_t r_70_h_linear_1_2_1 = (_tmp242 - _tmp243);
  int32_t _tmp244 = ((lever_2_0 * act_inv_angular_2_1) >> 13);
  int32_t _tmp245 = ((lever_2_1 * act_inv_angular_2_0) >> 13);
  int32_t r_70_h_linear_1_2_2 = (_tmp244 - _tmp245);
  int32_t h_linear_2_2_0 = (act_inv_linear_2_0 - r_70_h_linear_1_2_0);
  int32_t h_linear_2_2_1 = (act_inv_linear_2_1 - r_70_h_linear_1_2_1);
  int32_t h_linear_2_2_2 = (act_inv_linear_2_2 - r_70_h_linear_1_2_2);
  int32_t h_linear_2_0 = ((masses_2 * h_linear_2_2_0) >> 15);
  int32_t h_linear_2_1 = ((masses_2 * h_linear_2_2_1) >> 15);
  int32_t h_linear_2_2 = ((masses_2 * h_linear_2_2_2) >> 13);
  int32_t r_71_ = ((inertia_2_0_0 * act_inv_angular_2_0) >> 13);
  int32_t r_72_ = ((inertia_2_0_1 * act_inv_angular_2_1) >> 13);
  int32_t r_73_ = ((inertia_2_0_2 * act_inv_angular_2_2) >> 13);
  int32_t r_74_ = ((inertia_2_0_1 * act_inv_angular_2_0) >> 13);
  int32_t r_75_ = ((inertia_2_1_1 * act_inv_angular_2_1) >> 13);
  int32_t r_76_ = ((inertia_2_1_2 * act_inv_angular_2_2) >> 13);
  int32_t r_77_ = ((inertia_2_0_2 * act_inv_angular_2_0) >> 13);
  int32_t r_78_ = ((inertia_2_1_2 * act_inv_angular_2_1) >> 13);
  int32_t r_79_ = ((inertia_2_2_2 * act_inv_angular_2_2) >> 13);
  int32_t rhsMult1_temp_2 = (r_71_ + r_72_);
  int32_t rhsMult1_2 = (rhsMult1_temp_2 + r_73_);
  int32_t rhsMult2_temp_2 = (r_74_ + r_75_);
  int32_t rhsMult2_2 = (rhsMult2_temp_2 + r_76_);
  int32_t rhsMult3_temp_2 = (r_77_ + r_78_);
  int32_t rhsMult3_2 = (rhsMult3_temp_2 + r_79_);
  int32_t rhsMult_2_0 = rhsMult1_2;
  int32_t rhsMult_2_1 = rhsMult2_2;
  int32_t rhsMult_2_2 = rhsMult3_2;
  int32_t h_angular_first_2_0 = rhsMult_2_0;
  int32_t h_angular_first_2_1 = rhsMult_2_1;
  int32_t h_angular_first_2_2 = rhsMult_2_2;
  int32_t _tmp246 = ((lever_2_0 * h_linear_2_1) >> 13);
  int32_t _tmp247 = ((lever_2_1 * h_linear_2_0) >> 13);
  int32_t r_80_h_angular_1_2_0 = (_tmp246 - _tmp247);
  int32_t _tmp248 = ((lever_2_2 * h_linear_2_0) >> 13);
  int32_t _tmp249 = ((lever_2_0 * h_linear_2_2) >> 15);
  int32_t r_80_h_angular_1_2_1 = (_tmp248 - _tmp249);
  int32_t _tmp250 = ((lever_2_0 * h_linear_2_1) >> 13);
  int32_t _tmp251 = ((lever_2_1 * h_linear_2_0) >> 13);
  int32_t r_80_h_angular_1_2_2 = (_tmp250 - _tmp251);
  int32_t h_angular_2_0 = (h_angular_first_2_0 + r_80_h_angular_1_2_0);
  int32_t h_angular_2_1 = (h_angular_first_2_1 + r_80_h_angular_1_2_1);
  int32_t h_angular_2_2 = (h_angular_first_2_2 + r_80_h_angular_1_2_2);
  int32_t _tmp252 = ((lever_2_0 * r_69_act_inv_angular_2_1) >> 12);
  int32_t _tmp253 = ((lever_2_1 * r_69_act_inv_angular_2_0) >> 12);
  int32_t f_linear_1_2_0 = (_tmp252 - _tmp253);
  int32_t _tmp254 = ((lever_2_2 * r_69_act_inv_angular_2_0) >> 12);
  int32_t _tmp255 = ((lever_2_0 * r_69_act_inv_angular_2_2) >> 13);
  int32_t f_linear_1_2_1 = (_tmp254 - _tmp255);
  int32_t _tmp256 = ((lever_2_0 * r_69_act_inv_angular_2_1) >> 12);
  int32_t _tmp257 = ((lever_2_1 * r_69_act_inv_angular_2_0) >> 12);
  int32_t f_linear_1_2_2 = (_tmp256 - _tmp257);
  int32_t f_linear_2_2_0 = (((r_67_act_inv_linear_2_0 << 4) - f_linear_1_2_0) >> 4);
  int32_t f_linear_2_2_1 = (((r_67_act_inv_linear_2_1 << 4) - f_linear_1_2_1) >> 4);
  int32_t f_linear_2_2_2 = (((r_67_act_inv_linear_2_2 << 4) - f_linear_1_2_2) >> 4);
  int32_t f_linear_3_2_0 = ((masses_2 * f_linear_2_2_0) >> 15);
  int32_t f_linear_3_2_1 = ((masses_2 * f_linear_2_2_1) >> 15);
  int32_t f_linear_3_2_2 = ((masses_2 * f_linear_2_2_2) >> 15);
  int32_t r_81_ = ((inertia_2_0_0 * r_69_act_inv_angular_2_0) >> 12);
  int32_t r_82_ = ((inertia_2_0_1 * r_69_act_inv_angular_2_1) >> 12);
  int32_t r_83_ = ((inertia_2_0_2 * r_69_act_inv_angular_2_2) >> 13);
  int32_t r_84_ = ((inertia_2_0_1 * r_69_act_inv_angular_2_0) >> 12);
  int32_t r_85_ = ((inertia_2_1_1 * r_69_act_inv_angular_2_1) >> 12);
  int32_t r_86_ = ((inertia_2_1_2 * r_69_act_inv_angular_2_2) >> 13);
  int32_t r_87_ = ((inertia_2_0_2 * r_69_act_inv_angular_2_0) >> 12);
  int32_t r_88_ = ((inertia_2_1_2 * r_69_act_inv_angular_2_1) >> 12);
  int32_t r_89_ = ((inertia_2_2_2 * r_69_act_inv_angular_2_2) >> 13);
  int32_t r_90_rhsMult1_temp_2 = (r_81_ + r_82_);
  int32_t r_91_rhsMult1_2 = (r_90_rhsMult1_temp_2 + r_83_);
  int32_t r_92_rhsMult2_temp_2 = (r_84_ + r_85_);
  int32_t r_93_rhsMult2_2 = (r_92_rhsMult2_temp_2 + r_86_);
  int32_t r_94_rhsMult3_temp_2 = (r_87_ + r_88_);
  int32_t r_95_rhsMult3_2 = (r_94_rhsMult3_temp_2 + r_89_);
  int32_t r_96_rhsMult_2_0 = r_91_rhsMult1_2;
  int32_t r_96_rhsMult_2_1 = r_93_rhsMult2_2;
  int32_t r_96_rhsMult_2_2 = r_95_rhsMult3_2;
  int32_t f_angular_first_2_0 = r_96_rhsMult_2_0;
  int32_t f_angular_first_2_1 = r_96_rhsMult_2_1;
  int32_t f_angular_first_2_2 = r_96_rhsMult_2_2;
  int32_t _tmp258 = ((lever_2_0 * f_linear_3_2_1) >> 10);
  int32_t _tmp259 = ((lever_2_1 * f_linear_3_2_0) >> 10);
  int32_t f_angular_1_2_0 = ((_tmp258 - _tmp259) >> 1);
  int32_t _tmp260 = ((lever_2_2 * f_linear_3_2_0) >> 11);
  int32_t _tmp261 = ((lever_2_0 * f_linear_3_2_2) >> 9);
  int32_t f_angular_1_2_1 = (((_tmp260 << 2) - _tmp261) >> 2);
  int32_t _tmp262 = ((lever_2_0 * f_linear_3_2_1) >> 10);
  int32_t _tmp263 = ((lever_2_1 * f_linear_3_2_0) >> 10);
  int32_t f_angular_1_2_2 = ((_tmp262 - _tmp263) >> 1);
  int32_t f_angular_2_2_0 = ((f_angular_first_2_0 + (f_angular_1_2_0 << 2)) >> 2);
  int32_t f_angular_2_2_1 = ((f_angular_first_2_1 + (f_angular_1_2_1 << 2)) >> 2);
  int32_t f_angular_2_2_2 = ((f_angular_first_2_2 + (f_angular_1_2_2 << 2)) >> 2);
  int32_t _tmp264 = ((act_inv_angular_2_0 * h_linear_2_1) >> 14);
  int32_t _tmp265 = ((act_inv_angular_2_1 * h_linear_2_0) >> 14);
  int32_t f_linear_4_temp_2_0 = ((_tmp264 - _tmp265) >> 1);
  int32_t _tmp266 = ((act_inv_angular_2_2 * h_linear_2_0) >> 14);
  int32_t _tmp267 = ((act_inv_angular_2_0 * h_linear_2_2) >> 13);
  int32_t f_linear_4_temp_2_1 = (((_tmp266 << 3) - _tmp267) >> 3);
  int32_t _tmp268 = ((act_inv_angular_2_0 * h_linear_2_1) >> 14);
  int32_t _tmp269 = ((act_inv_angular_2_1 * h_linear_2_0) >> 14);
  int32_t f_linear_4_temp_2_2 = ((_tmp268 - _tmp269) >> 1);
  int32_t f_linear_4_2_0 = (((f_linear_3_2_0 << 2) + f_linear_4_temp_2_0) >> 2);
  int32_t f_linear_4_2_1 = (((f_linear_3_2_1 << 3) + f_linear_4_temp_2_1) >> 3);
  int32_t f_linear_4_2_2 = (((f_linear_3_2_2 << 2) + f_linear_4_temp_2_2) >> 2);
  int32_t _tmp270 = ((act_inv_angular_2_0 * h_angular_first_2_1) >> 13);
  int32_t _tmp271 = ((act_inv_angular_2_1 * h_angular_first_2_0) >> 13);
  int32_t f_angular_3_temp_2_0 = (_tmp270 - _tmp271);
  int32_t _tmp272 = ((act_inv_angular_2_2 * h_angular_first_2_0) >> 13);
  int32_t _tmp273 = ((act_inv_angular_2_0 * h_angular_first_2_2) >> 13);
  int32_t f_angular_3_temp_2_1 = (_tmp272 - _tmp273);
  int32_t _tmp274 = ((act_inv_angular_2_0 * h_angular_first_2_1) >> 13);
  int32_t _tmp275 = ((act_inv_angular_2_1 * h_angular_first_2_0) >> 13);
  int32_t f_angular_3_temp_2_2 = (_tmp274 - _tmp275);
  int32_t f_angular_3_2_0 = (((f_angular_2_2_0 << 2) + f_angular_3_temp_2_0) >> 2);
  int32_t f_angular_3_2_1 = (((f_angular_2_2_1 << 2) + f_angular_3_temp_2_1) >> 3);
  int32_t f_angular_3_2_2 = (((f_angular_2_2_2 << 2) + f_angular_3_temp_2_2) >> 2);
  int32_t _tmp276 = ((act_inv_linear_2_0 * h_linear_2_1) >> 14);
  int32_t _tmp277 = ((act_inv_linear_2_1 * h_linear_2_0) >> 14);
  int32_t f_angular_4_temp_2_0 = ((_tmp276 - _tmp277) >> 1);
  int32_t _tmp278 = ((act_inv_linear_2_2 * h_linear_2_0) >> 13);
  int32_t _tmp279 = ((act_inv_linear_2_0 * h_linear_2_2) >> 15);
  int32_t f_angular_4_temp_2_1 = (_tmp278 - _tmp279);
  int32_t _tmp280 = ((act_inv_linear_2_0 * h_linear_2_1) >> 14);
  int32_t _tmp281 = ((act_inv_linear_2_1 * h_linear_2_0) >> 14);
  int32_t f_angular_4_temp_2_2 = ((_tmp280 - _tmp281) >> 1);
  int32_t f_angular_4_2_0 = ((f_angular_3_2_0 + f_angular_4_temp_2_0) >> 1);
  int32_t f_angular_4_2_1 = (((f_angular_3_2_1 << 3) + f_angular_4_temp_2_1) >> 3);
  int32_t f_angular_4_2_2 = ((f_angular_3_2_2 + f_angular_4_temp_2_2) >> 1);
  int32_t h_rnea_firstpass2_0 = h_linear_2_0;
  int32_t h_rnea_firstpass2_1 = h_linear_2_1;
  int32_t h_rnea_firstpass2_2 = h_linear_2_2;
  int32_t h_rnea_firstpass2_3 = h_angular_2_0;
  int32_t h_rnea_firstpass2_4 = h_angular_2_1;
  int32_t h_rnea_firstpass2_5 = h_angular_2_2;
  int32_t f_rnea_firstpass2_0 = f_linear_4_2_0;
  int32_t f_rnea_firstpass2_1 = f_linear_4_2_1;
  int32_t f_rnea_firstpass2_2 = f_linear_4_2_2;
  int32_t f_rnea_firstpass2_3 = f_angular_4_2_0;
  int32_t f_rnea_firstpass2_4 = f_angular_4_2_1;
  int32_t f_rnea_firstpass2_5 = f_angular_4_2_2;
  int32_t r_97_new_v_2_0 = act_inv_linear_2_0;
  int32_t r_97_new_v_2_1 = act_inv_linear_2_1;
  int32_t r_97_new_v_2_2 = act_inv_linear_2_2;
  int32_t r_97_new_v_2_3 = act_inv_angular_2_0;
  int32_t r_97_new_v_2_4 = act_inv_angular_2_1;
  int32_t r_97_new_v_2_5 = act_inv_angular_2_2;
  int32_t rotation_matrix_3_0_0 = qcos_3;
  int32_t rotation_matrix_3_0_1 = -(qsin_3);
  int32_t rotation_matrix_3_0_2 = 0;
  int32_t rotation_matrix_3_1_0 = qsin_3;
  int32_t rotation_matrix_3_1_1 = qcos_3;
  int32_t rotation_matrix_3_1_2 = 0;
  int32_t rotation_matrix_3_2_0 = 0;
  int32_t rotation_matrix_3_2_1 = 0;
  int32_t rotation_matrix_3_2_2 = 16384;
  int32_t limi_rotation_3_0_0 = rotation_matrix_3_0_0;
  int32_t limi_rotation_3_0_1 = rotation_matrix_3_0_1;
  int32_t limi_rotation_3_0_2 = 0;
  int32_t limi_rotation_3_1_0 = 0;
  int32_t limi_rotation_3_1_1 = 0;
  int32_t limi_rotation_3_1_2 = -16385;
  int32_t limi_rotation_3_2_0 = rotation_matrix_3_1_0;
  int32_t limi_rotation_3_2_1 = rotation_matrix_3_1_1;
  int32_t limi_rotation_3_2_2 = 0;
  int32_t v_linear_3_0 = data_v_3_0;
  int32_t v_linear_3_1 = data_v_3_1;
  int32_t v_linear_3_2 = data_v_3_2;
  int32_t v_angular_3_0 = data_v_3_3;
  int32_t v_angular_3_1 = data_v_3_4;
  int32_t v_angular_3_2 = v_3;
  int32_t parent_v_linear_3_0 = r_97_new_v_2_0;
  int32_t parent_v_linear_3_1 = r_97_new_v_2_1;
  int32_t parent_v_linear_3_2 = r_97_new_v_2_2;
  int32_t parent_v_angular_3_0 = r_97_new_v_2_3;
  int32_t parent_v_angular_3_1 = r_97_new_v_2_4;
  int32_t parent_v_angular_3_2 = r_97_new_v_2_5;
  int32_t parent_a_gf_linear_3_0 = new_a_gf_up3_2_0;
  int32_t parent_a_gf_linear_3_1 = new_a_gf_up3_2_1;
  int32_t parent_a_gf_linear_3_2 = new_a_gf_up3_2_2;
  int32_t parent_a_gf_angular_3_0 = new_a_gf_up3_2_3;
  int32_t parent_a_gf_angular_3_1 = new_a_gf_up3_2_4;
  int32_t parent_a_gf_angular_3_2 = new_a_gf_up3_2_5;
  int32_t _tmp282 = ((limi_translation_3_0 * parent_v_angular_3_1) >> 13);
  int32_t _tmp283 = ((limi_translation_3_1 * parent_v_angular_3_0) >> 13);
  int32_t actInv1_3_0 = (_tmp282 - _tmp283);
  int32_t _tmp284 = ((limi_translation_3_2 * parent_v_angular_3_0) >> 13);
  int32_t _tmp285 = ((limi_translation_3_0 * parent_v_angular_3_2) >> 13);
  int32_t actInv1_3_1 = (_tmp284 - _tmp285);
  int32_t _tmp286 = ((limi_translation_3_0 * parent_v_angular_3_1) >> 13);
  int32_t _tmp287 = ((limi_translation_3_1 * parent_v_angular_3_0) >> 13);
  int32_t actInv1_3_2 = (_tmp286 - _tmp287);
  int32_t actInv2_3_0 = (parent_v_linear_3_0 - actInv1_3_0);
  int32_t actInv2_3_1 = (parent_v_linear_3_1 - actInv1_3_1);
  int32_t actInv2_3_2 = (parent_v_linear_3_2 - actInv1_3_2);
  int32_t actInv3_3_0_0 = limi_rotation_3_0_0;
  int32_t actInv3_3_1_0 = limi_rotation_3_0_1;
  int32_t actInv3_3_2_0 = limi_rotation_3_0_2;
  int32_t actInv3_3_0_1 = limi_rotation_3_1_0;
  int32_t actInv3_3_1_1 = limi_rotation_3_1_1;
  int32_t actInv3_3_2_1 = limi_rotation_3_1_2;
  int32_t actInv3_3_0_2 = limi_rotation_3_2_0;
  int32_t actInv3_3_1_2 = limi_rotation_3_2_1;
  int32_t actInv3_3_2_2 = limi_rotation_3_2_2;
  int32_t _tmp288 = ((actInv3_3_0_0 * actInv2_3_0) >> 14);
  int32_t _tmp289 = ((actInv3_3_0_1 * actInv2_3_1) >> 15);
  int32_t _tmp290 = (_tmp288 + _tmp289);
  int32_t _tmp291 = ((actInv3_3_0_2 * actInv2_3_2) >> 14);
  int32_t actInv4_3_0 = (_tmp290 + _tmp291);
  int32_t _tmp292 = ((actInv3_3_1_0 * actInv2_3_0) >> 14);
  int32_t _tmp293 = ((actInv3_3_1_1 * actInv2_3_1) >> 15);
  int32_t _tmp294 = (_tmp292 + _tmp293);
  int32_t _tmp295 = ((actInv3_3_1_2 * actInv2_3_2) >> 14);
  int32_t actInv4_3_1 = (_tmp294 + _tmp295);
  int32_t _tmp296 = ((actInv3_3_2_0 * actInv2_3_0) >> 15);
  int32_t _tmp297 = ((actInv3_3_2_1 * actInv2_3_1) >> 14);
  int32_t _tmp298 = (_tmp296 + _tmp297);
  int32_t _tmp299 = ((actInv3_3_2_2 * actInv2_3_2) >> 15);
  int32_t actInv4_3_2 = (_tmp298 + _tmp299);
  int32_t act_inv_linear_3_0 = (v_linear_3_0 + actInv4_3_0);
  int32_t act_inv_linear_3_1 = (v_linear_3_1 + actInv4_3_1);
  int32_t act_inv_linear_3_2 = (v_linear_3_2 + actInv4_3_2);
  int32_t _tmp300 = ((actInv3_3_0_0 * parent_v_angular_3_0) >> 14);
  int32_t _tmp301 = ((actInv3_3_0_1 * parent_v_angular_3_1) >> 13);
  int32_t _tmp302 = (((_tmp300 << 2) + _tmp301) >> 2);
  int32_t _tmp303 = ((actInv3_3_0_2 * parent_v_angular_3_2) >> 14);
  int32_t actInv5_3_0 = ((_tmp302 + _tmp303) >> 1);
  int32_t _tmp304 = ((actInv3_3_1_0 * parent_v_angular_3_0) >> 14);
  int32_t _tmp305 = ((actInv3_3_1_1 * parent_v_angular_3_1) >> 13);
  int32_t _tmp306 = (((_tmp304 << 2) + _tmp305) >> 2);
  int32_t _tmp307 = ((actInv3_3_1_2 * parent_v_angular_3_2) >> 14);
  int32_t actInv5_3_1 = ((_tmp306 + _tmp307) >> 1);
  int32_t _tmp308 = ((actInv3_3_2_0 * parent_v_angular_3_0) >> 13);
  int32_t _tmp309 = ((actInv3_3_2_1 * parent_v_angular_3_1) >> 14);
  int32_t _tmp310 = ((_tmp308 + (_tmp309 << 2)) >> 2);
  int32_t _tmp311 = ((actInv3_3_2_2 * parent_v_angular_3_2) >> 13);
  int32_t actInv5_3_2 = (((_tmp310 << 2) + _tmp311) >> 2);
  int32_t act_inv_angular_3_0 = ((v_angular_3_0 + (actInv5_3_0 << 3)) >> 3);
  int32_t act_inv_angular_3_1 = ((v_angular_3_1 + (actInv5_3_1 << 3)) >> 3);
  int32_t act_inv_angular_3_2 = ((v_angular_3_2 + (actInv5_3_2 << 1)) >> 1);
  int32_t minus_m_w_3 = -(v_3);
  int32_t _tmp312 = -(minus_m_w_3);
  int32_t alpha_cross1_linear_3 = ((_tmp312 * act_inv_linear_3_1) >> 14);
  int32_t alpha_cross2_linear_3 = ((minus_m_w_3 * act_inv_linear_3_0) >> 14);
  int32_t alpha_cross_linear_3_0 = alpha_cross1_linear_3;
  int32_t alpha_cross_linear_3_1 = alpha_cross2_linear_3;
  int32_t alpha_cross_linear_3_2 = 0;
  int32_t _tmp313 = -(minus_m_w_3);
  int32_t alpha_cross1_angular_3 = ((_tmp313 * act_inv_angular_3_1) >> 14);
  int32_t alpha_cross2_angular_3 = ((minus_m_w_3 * act_inv_angular_3_0) >> 14);
  int32_t alpha_cross_angular_3_0 = alpha_cross1_angular_3;
  int32_t alpha_cross_angular_3_1 = alpha_cross2_angular_3;
  int32_t alpha_cross_angular_3_2 = 0;
  int32_t r_98_new_a_gf_3_0 = alpha_cross_linear_3_0;
  int32_t r_98_new_a_gf_3_1 = alpha_cross_linear_3_1;
  int32_t r_98_new_a_gf_3_2 = alpha_cross_linear_3_2;
  int32_t r_98_new_a_gf_3_3 = alpha_cross_angular_3_0;
  int32_t r_98_new_a_gf_3_4 = alpha_cross_angular_3_1;
  int32_t r_98_new_a_gf_3_5 = alpha_cross_angular_3_2;
  int32_t new_a_gf_up1_3 = (((a_3 << 1) + r_98_new_a_gf_3_5) >> 1);
  int32_t new_a_gf2_linear_3_0 = r_98_new_a_gf_3_0;
  int32_t new_a_gf2_linear_3_1 = r_98_new_a_gf_3_1;
  int32_t new_a_gf2_linear_3_2 = r_98_new_a_gf_3_2;
  int32_t new_a_gf2_angular_3_0 = r_98_new_a_gf_3_3;
  int32_t new_a_gf2_angular_3_1 = r_98_new_a_gf_3_4;
  int32_t new_a_gf2_angular_3_2 = new_a_gf_up1_3;
  int32_t _tmp314 = ((limi_translation_3_0 * parent_a_gf_angular_3_1) >> 12);
  int32_t _tmp315 = ((limi_translation_3_1 * parent_a_gf_angular_3_0) >> 12);
  int32_t r_99_actInv1_3_0 = (_tmp314 - _tmp315);
  int32_t _tmp316 = ((limi_translation_3_2 * parent_a_gf_angular_3_0) >> 12);
  int32_t _tmp317 = ((limi_translation_3_0 * parent_a_gf_angular_3_2) >> 13);
  int32_t r_99_actInv1_3_1 = (_tmp316 - _tmp317);
  int32_t _tmp318 = ((limi_translation_3_0 * parent_a_gf_angular_3_1) >> 12);
  int32_t _tmp319 = ((limi_translation_3_1 * parent_a_gf_angular_3_0) >> 12);
  int32_t r_99_actInv1_3_2 = (_tmp318 - _tmp319);
  int32_t r_100_actInv2_3_0 = (((parent_a_gf_linear_3_0 << 4) - r_99_actInv1_3_0) >> 4);
  int32_t r_100_actInv2_3_1 = (((parent_a_gf_linear_3_1 << 4) - r_99_actInv1_3_1) >> 4);
  int32_t r_100_actInv2_3_2 = (((parent_a_gf_linear_3_2 << 4) - r_99_actInv1_3_2) >> 4);
  int32_t r_101_actInv3_3_0_0 = limi_rotation_3_0_0;
  int32_t r_101_actInv3_3_1_0 = limi_rotation_3_0_1;
  int32_t r_101_actInv3_3_2_0 = limi_rotation_3_0_2;
  int32_t r_101_actInv3_3_0_1 = limi_rotation_3_1_0;
  int32_t r_101_actInv3_3_1_1 = limi_rotation_3_1_1;
  int32_t r_101_actInv3_3_2_1 = limi_rotation_3_1_2;
  int32_t r_101_actInv3_3_0_2 = limi_rotation_3_2_0;
  int32_t r_101_actInv3_3_1_2 = limi_rotation_3_2_1;
  int32_t r_101_actInv3_3_2_2 = limi_rotation_3_2_2;
  int32_t _tmp320 = ((r_101_actInv3_3_0_0 * r_100_actInv2_3_0) >> 14);
  int32_t _tmp321 = ((r_101_actInv3_3_0_1 * r_100_actInv2_3_1) >> 11);
  int32_t _tmp322 = (((_tmp320 << 4) + _tmp321) >> 4);
  int32_t _tmp323 = ((r_101_actInv3_3_0_2 * r_100_actInv2_3_2) >> 14);
  int32_t r_102_actInv4_3_0 = ((_tmp322 + _tmp323) >> 1);
  int32_t _tmp324 = ((r_101_actInv3_3_1_0 * r_100_actInv2_3_0) >> 14);
  int32_t _tmp325 = ((r_101_actInv3_3_1_1 * r_100_actInv2_3_1) >> 11);
  int32_t _tmp326 = (((_tmp324 << 4) + _tmp325) >> 4);
  int32_t _tmp327 = ((r_101_actInv3_3_1_2 * r_100_actInv2_3_2) >> 14);
  int32_t r_102_actInv4_3_1 = ((_tmp326 + _tmp327) >> 1);
  int32_t _tmp328 = ((r_101_actInv3_3_2_0 * r_100_actInv2_3_0) >> 11);
  int32_t _tmp329 = ((r_101_actInv3_3_2_1 * r_100_actInv2_3_1) >> 14);
  int32_t _tmp330 = ((_tmp328 + (_tmp329 << 4)) >> 4);
  int32_t _tmp331 = ((r_101_actInv3_3_2_2 * r_100_actInv2_3_2) >> 11);
  int32_t r_102_actInv4_3_2 = (((_tmp330 << 4) + _tmp331) >> 4);
  int32_t r_103_act_inv_linear_3_0 = ((new_a_gf2_linear_3_0 + (r_102_actInv4_3_0 << 5)) >> 5);
  int32_t r_103_act_inv_linear_3_1 = ((new_a_gf2_linear_3_1 + (r_102_actInv4_3_1 << 5)) >> 5);
  int32_t r_103_act_inv_linear_3_2 = ((new_a_gf2_linear_3_2 + (r_102_actInv4_3_2 << 4)) >> 4);
  int32_t _tmp332 = ((r_101_actInv3_3_0_0 * parent_a_gf_angular_3_0) >> 14);
  int32_t _tmp333 = ((r_101_actInv3_3_0_1 * parent_a_gf_angular_3_1) >> 12);
  int32_t _tmp334 = (((_tmp332 << 3) + _tmp333) >> 3);
  int32_t _tmp335 = ((r_101_actInv3_3_0_2 * parent_a_gf_angular_3_2) >> 14);
  int32_t r_104_actInv5_3_0 = (((_tmp334 << 1) + _tmp335) >> 2);
  int32_t _tmp336 = ((r_101_actInv3_3_1_0 * parent_a_gf_angular_3_0) >> 14);
  int32_t _tmp337 = ((r_101_actInv3_3_1_1 * parent_a_gf_angular_3_1) >> 12);
  int32_t _tmp338 = (((_tmp336 << 3) + _tmp337) >> 3);
  int32_t _tmp339 = ((r_101_actInv3_3_1_2 * parent_a_gf_angular_3_2) >> 14);
  int32_t r_104_actInv5_3_1 = (((_tmp338 << 1) + _tmp339) >> 2);
  int32_t _tmp340 = ((r_101_actInv3_3_2_0 * parent_a_gf_angular_3_0) >> 12);
  int32_t _tmp341 = ((r_101_actInv3_3_2_1 * parent_a_gf_angular_3_1) >> 14);
  int32_t _tmp342 = ((_tmp340 + (_tmp341 << 3)) >> 3);
  int32_t _tmp343 = ((r_101_actInv3_3_2_2 * parent_a_gf_angular_3_2) >> 13);
  int32_t r_104_actInv5_3_2 = (((_tmp342 << 3) + _tmp343) >> 3);
  int32_t r_105_act_inv_angular_3_0 = ((new_a_gf2_angular_3_0 + (r_104_actInv5_3_0 << 1)) >> 1);
  int32_t r_105_act_inv_angular_3_1 = ((new_a_gf2_angular_3_1 + (r_104_actInv5_3_1 << 1)) >> 1);
  int32_t r_105_act_inv_angular_3_2 = ((new_a_gf2_angular_3_2 + (r_104_actInv5_3_2 << 2)) >> 2);
  int32_t new_a_gf_up3_3_0 = r_103_act_inv_linear_3_0;
  int32_t new_a_gf_up3_3_1 = r_103_act_inv_linear_3_1;
  int32_t new_a_gf_up3_3_2 = r_103_act_inv_linear_3_2;
  int32_t new_a_gf_up3_3_3 = r_105_act_inv_angular_3_0;
  int32_t new_a_gf_up3_3_4 = r_105_act_inv_angular_3_1;
  int32_t new_a_gf_up3_3_5 = r_105_act_inv_angular_3_2;
  int32_t _tmp344 = ((lever_3_0 * act_inv_angular_3_1) >> 12);
  int32_t _tmp345 = ((lever_3_1 * act_inv_angular_3_0) >> 12);
  int32_t h_linear_1_3_0 = (_tmp344 - _tmp345);
  int32_t _tmp346 = ((lever_3_2 * act_inv_angular_3_0) >> 12);
  int32_t _tmp347 = ((lever_3_0 * act_inv_angular_3_2) >> 13);
  int32_t h_linear_1_3_1 = (_tmp346 - _tmp347);
  int32_t _tmp348 = ((lever_3_0 * act_inv_angular_3_1) >> 12);
  int32_t _tmp349 = ((lever_3_1 * act_inv_angular_3_0) >> 12);
  int32_t h_linear_1_3_2 = (_tmp348 - _tmp349);
  int32_t h_linear_2_3_0 = ((act_inv_linear_3_0 - h_linear_1_3_0) >> 1);
  int32_t h_linear_2_3_1 = ((act_inv_linear_3_1 - h_linear_1_3_1) >> 1);
  int32_t h_linear_2_3_2 = ((act_inv_linear_3_2 - h_linear_1_3_2) >> 1);
  int32_t h_linear_3_0 = ((masses_3 * h_linear_2_3_0) >> 15);
  int32_t h_linear_3_1 = ((masses_3 * h_linear_2_3_1) >> 15);
  int32_t h_linear_3_2 = ((masses_3 * h_linear_2_3_2) >> 15);
  int32_t r_106_ = ((inertia_3_0_0 * act_inv_angular_3_0) >> 12);
  int32_t r_107_ = ((inertia_3_0_1 * act_inv_angular_3_1) >> 12);
  int32_t r_108_ = ((inertia_3_0_2 * act_inv_angular_3_2) >> 13);
  int32_t r_109_ = ((inertia_3_0_1 * act_inv_angular_3_0) >> 12);
  int32_t r_110_ = ((inertia_3_1_1 * act_inv_angular_3_1) >> 12);
  int32_t r_111_ = ((inertia_3_1_2 * act_inv_angular_3_2) >> 13);
  int32_t r_112_ = ((inertia_3_0_2 * act_inv_angular_3_0) >> 12);
  int32_t r_113_ = ((inertia_3_1_2 * act_inv_angular_3_1) >> 12);
  int32_t r_114_ = ((inertia_3_2_2 * act_inv_angular_3_2) >> 13);
  int32_t rhsMult1_temp_3 = (r_106_ + r_107_);
  int32_t rhsMult1_3 = (rhsMult1_temp_3 + r_108_);
  int32_t rhsMult2_temp_3 = (r_109_ + r_110_);
  int32_t rhsMult2_3 = (rhsMult2_temp_3 + r_111_);
  int32_t rhsMult3_temp_3 = (r_112_ + r_113_);
  int32_t rhsMult3_3 = (rhsMult3_temp_3 + r_114_);
  int32_t rhsMult_3_0 = rhsMult1_3;
  int32_t rhsMult_3_1 = rhsMult2_3;
  int32_t rhsMult_3_2 = rhsMult3_3;
  int32_t h_angular_first_3_0 = rhsMult_3_0;
  int32_t h_angular_first_3_1 = rhsMult_3_1;
  int32_t h_angular_first_3_2 = rhsMult_3_2;
  int32_t _tmp350 = ((lever_3_0 * h_linear_3_1) >> 12);
  int32_t _tmp351 = ((lever_3_1 * h_linear_3_0) >> 12);
  int32_t h_angular_1_3_0 = (_tmp350 - _tmp351);
  int32_t _tmp352 = ((lever_3_2 * h_linear_3_0) >> 12);
  int32_t _tmp353 = ((lever_3_0 * h_linear_3_2) >> 12);
  int32_t h_angular_1_3_1 = (_tmp352 - _tmp353);
  int32_t _tmp354 = ((lever_3_0 * h_linear_3_1) >> 12);
  int32_t _tmp355 = ((lever_3_1 * h_linear_3_0) >> 12);
  int32_t h_angular_1_3_2 = (_tmp354 - _tmp355);
  int32_t h_angular_3_0 = (h_angular_first_3_0 + h_angular_1_3_0);
  int32_t h_angular_3_1 = (h_angular_first_3_1 + h_angular_1_3_1);
  int32_t h_angular_3_2 = (h_angular_first_3_2 + h_angular_1_3_2);
  int32_t _tmp356 = ((lever_3_0 * r_105_act_inv_angular_3_1) >> 11);
  int32_t _tmp357 = ((lever_3_1 * r_105_act_inv_angular_3_0) >> 12);
  int32_t f_linear_1_3_0 = ((_tmp356 - (_tmp357 << 1)) >> 1);
  int32_t _tmp358 = ((lever_3_2 * r_105_act_inv_angular_3_0) >> 11);
  int32_t _tmp359 = ((lever_3_0 * r_105_act_inv_angular_3_2) >> 12);
  int32_t f_linear_1_3_1 = (_tmp358 - _tmp359);
  int32_t _tmp360 = ((lever_3_0 * r_105_act_inv_angular_3_1) >> 11);
  int32_t _tmp361 = ((lever_3_1 * r_105_act_inv_angular_3_0) >> 12);
  int32_t f_linear_1_3_2 = ((_tmp360 - (_tmp361 << 1)) >> 1);
  int32_t f_linear_2_3_0 = (((r_103_act_inv_linear_3_0 << 4) - f_linear_1_3_0) >> 4);
  int32_t f_linear_2_3_1 = (((r_103_act_inv_linear_3_1 << 5) - f_linear_1_3_1) >> 5);
  int32_t f_linear_2_3_2 = (((r_103_act_inv_linear_3_2 << 3) - f_linear_1_3_2) >> 3);
  int32_t f_linear_3_3_0 = ((masses_3 * f_linear_2_3_0) >> 15);
  int32_t f_linear_3_3_1 = ((masses_3 * f_linear_2_3_1) >> 15);
  int32_t f_linear_3_3_2 = ((masses_3 * f_linear_2_3_2) >> 15);
  int32_t r_115_ = ((inertia_3_0_0 * r_105_act_inv_angular_3_0) >> 11);
  int32_t r_116_ = ((inertia_3_0_1 * r_105_act_inv_angular_3_1) >> 11);
  int32_t r_117_ = ((inertia_3_0_2 * r_105_act_inv_angular_3_2) >> 12);
  int32_t r_118_ = ((inertia_3_0_1 * r_105_act_inv_angular_3_0) >> 11);
  int32_t r_119_ = ((inertia_3_1_1 * r_105_act_inv_angular_3_1) >> 11);
  int32_t r_120_ = ((inertia_3_1_2 * r_105_act_inv_angular_3_2) >> 12);
  int32_t r_121_ = ((inertia_3_0_2 * r_105_act_inv_angular_3_0) >> 11);
  int32_t r_122_ = ((inertia_3_1_2 * r_105_act_inv_angular_3_1) >> 11);
  int32_t r_123_ = ((inertia_3_2_2 * r_105_act_inv_angular_3_2) >> 12);
  int32_t r_124_rhsMult1_temp_3 = (r_115_ + r_116_);
  int32_t r_125_rhsMult1_3 = (r_124_rhsMult1_temp_3 + r_117_);
  int32_t r_126_rhsMult2_temp_3 = (r_118_ + r_119_);
  int32_t r_127_rhsMult2_3 = (r_126_rhsMult2_temp_3 + r_120_);
  int32_t r_128_rhsMult3_temp_3 = (r_121_ + r_122_);
  int32_t r_129_rhsMult3_3 = (r_128_rhsMult3_temp_3 + r_123_);
  int32_t r_130_rhsMult_3_0 = r_125_rhsMult1_3;
  int32_t r_130_rhsMult_3_1 = r_127_rhsMult2_3;
  int32_t r_130_rhsMult_3_2 = r_129_rhsMult3_3;
  int32_t f_angular_first_3_0 = r_130_rhsMult_3_0;
  int32_t f_angular_first_3_1 = r_130_rhsMult_3_1;
  int32_t f_angular_first_3_2 = r_130_rhsMult_3_2;
  int32_t _tmp362 = ((lever_3_0 * f_linear_3_3_1) >> 11);
  int32_t _tmp363 = ((lever_3_1 * f_linear_3_3_0) >> 12);
  int32_t f_angular_1_3_0 = ((_tmp362 - (_tmp363 << 1)) >> 1);
  int32_t _tmp364 = ((lever_3_2 * f_linear_3_3_0) >> 10);
  int32_t _tmp365 = ((lever_3_0 * f_linear_3_3_2) >> 11);
  int32_t f_angular_1_3_1 = ((_tmp364 - _tmp365) >> 1);
  int32_t _tmp366 = ((lever_3_0 * f_linear_3_3_1) >> 11);
  int32_t _tmp367 = ((lever_3_1 * f_linear_3_3_0) >> 12);
  int32_t f_angular_1_3_2 = ((_tmp366 - (_tmp367 << 1)) >> 1);
  int32_t f_angular_2_3_0 = ((f_angular_first_3_0 + (f_angular_1_3_0 << 4)) >> 4);
  int32_t f_angular_2_3_1 = ((f_angular_first_3_1 + (f_angular_1_3_1 << 3)) >> 3);
  int32_t f_angular_2_3_2 = ((f_angular_first_3_2 + (f_angular_1_3_2 << 4)) >> 4);
  int32_t _tmp368 = ((act_inv_angular_3_0 * h_linear_3_1) >> 14);
  int32_t _tmp369 = ((act_inv_angular_3_1 * h_linear_3_0) >> 14);
  int32_t f_linear_4_temp_3_0 = ((_tmp368 - _tmp369) >> 1);
  int32_t _tmp370 = ((act_inv_angular_3_2 * h_linear_3_0) >> 15);
  int32_t _tmp371 = ((act_inv_angular_3_0 * h_linear_3_2) >> 14);
  int32_t f_linear_4_temp_3_1 = ((_tmp370 - _tmp371) >> 1);
  int32_t _tmp372 = ((act_inv_angular_3_0 * h_linear_3_1) >> 14);
  int32_t _tmp373 = ((act_inv_angular_3_1 * h_linear_3_0) >> 14);
  int32_t f_linear_4_temp_3_2 = ((_tmp372 - _tmp373) >> 1);
  int32_t f_linear_4_3_0 = (((f_linear_3_3_0 << 1) + f_linear_4_temp_3_0) >> 2);
  int32_t f_linear_4_3_1 = (((f_linear_3_3_1 << 1) + f_linear_4_temp_3_1) >> 1);
  int32_t f_linear_4_3_2 = ((f_linear_3_3_2 + f_linear_4_temp_3_2) >> 1);
  int32_t _tmp374 = ((act_inv_angular_3_0 * h_angular_first_3_1) >> 12);
  int32_t _tmp375 = ((act_inv_angular_3_1 * h_angular_first_3_0) >> 12);
  int32_t f_angular_3_temp_3_0 = ((_tmp374 - _tmp375) >> 1);
  int32_t _tmp376 = ((act_inv_angular_3_2 * h_angular_first_3_0) >> 13);
  int32_t _tmp377 = ((act_inv_angular_3_0 * h_angular_first_3_2) >> 12);
  int32_t f_angular_3_temp_3_1 = (_tmp376 - _tmp377);
  int32_t _tmp378 = ((act_inv_angular_3_0 * h_angular_first_3_1) >> 12);
  int32_t _tmp379 = ((act_inv_angular_3_1 * h_angular_first_3_0) >> 12);
  int32_t f_angular_3_temp_3_2 = ((_tmp378 - _tmp379) >> 1);
  int32_t f_angular_3_3_0 = (((f_angular_2_3_0 << 3) + f_angular_3_temp_3_0) >> 3);
  int32_t f_angular_3_3_1 = (((f_angular_2_3_1 << 3) + f_angular_3_temp_3_1) >> 3);
  int32_t f_angular_3_3_2 = (((f_angular_2_3_2 << 3) + f_angular_3_temp_3_2) >> 3);
  int32_t _tmp380 = ((act_inv_linear_3_0 * h_linear_3_1) >> 15);
  int32_t _tmp381 = ((act_inv_linear_3_1 * h_linear_3_0) >> 15);
  int32_t f_angular_4_temp_3_0 = ((_tmp380 - _tmp381) >> 1);
  int32_t _tmp382 = ((act_inv_linear_3_2 * h_linear_3_0) >> 15);
  int32_t _tmp383 = ((act_inv_linear_3_0 * h_linear_3_2) >> 15);
  int32_t f_angular_4_temp_3_1 = ((_tmp382 - _tmp383) >> 1);
  int32_t _tmp384 = ((act_inv_linear_3_0 * h_linear_3_1) >> 15);
  int32_t _tmp385 = ((act_inv_linear_3_1 * h_linear_3_0) >> 15);
  int32_t f_angular_4_temp_3_2 = ((_tmp384 - _tmp385) >> 1);
  int32_t f_angular_4_3_0 = ((f_angular_3_3_0 + f_angular_4_temp_3_0) >> 1);
  int32_t f_angular_4_3_1 = ((f_angular_3_3_1 + (f_angular_4_temp_3_1 << 1)) >> 1);
  int32_t f_angular_4_3_2 = ((f_angular_3_3_2 + f_angular_4_temp_3_2) >> 1);
  int32_t h_rnea_firstpass3_0 = h_linear_3_0;
  int32_t h_rnea_firstpass3_1 = h_linear_3_1;
  int32_t h_rnea_firstpass3_2 = h_linear_3_2;
  int32_t h_rnea_firstpass3_3 = h_angular_3_0;
  int32_t h_rnea_firstpass3_4 = h_angular_3_1;
  int32_t h_rnea_firstpass3_5 = h_angular_3_2;
  int32_t f_rnea_firstpass3_0 = f_linear_4_3_0;
  int32_t f_rnea_firstpass3_1 = f_linear_4_3_1;
  int32_t f_rnea_firstpass3_2 = f_linear_4_3_2;
  int32_t f_rnea_firstpass3_3 = f_angular_4_3_0;
  int32_t f_rnea_firstpass3_4 = f_angular_4_3_1;
  int32_t f_rnea_firstpass3_5 = f_angular_4_3_2;
  int32_t r_131_new_v_3_0 = act_inv_linear_3_0;
  int32_t r_131_new_v_3_1 = act_inv_linear_3_1;
  int32_t r_131_new_v_3_2 = act_inv_linear_3_2;
  int32_t r_131_new_v_3_3 = act_inv_angular_3_0;
  int32_t r_131_new_v_3_4 = act_inv_angular_3_1;
  int32_t r_131_new_v_3_5 = act_inv_angular_3_2;
  int32_t rotation_matrix_4_0_0 = qcos_4;
  int32_t rotation_matrix_4_0_1 = -(qsin_4);
  int32_t rotation_matrix_4_0_2 = 0;
  int32_t rotation_matrix_4_1_0 = qsin_4;
  int32_t rotation_matrix_4_1_1 = qcos_4;
  int32_t rotation_matrix_4_1_2 = 0;
  int32_t rotation_matrix_4_2_0 = 0;
  int32_t rotation_matrix_4_2_1 = 0;
  int32_t rotation_matrix_4_2_2 = 16384;
  int32_t limi_rotation_4_0_0 = rotation_matrix_4_0_0;
  int32_t limi_rotation_4_0_1 = rotation_matrix_4_0_1;
  int32_t limi_rotation_4_0_2 = 0;
  int32_t limi_rotation_4_1_0 = 0;
  int32_t limi_rotation_4_1_1 = 0;
  int32_t limi_rotation_4_1_2 = 16384;
  int32_t limi_rotation_4_2_0 = -(rotation_matrix_4_1_0);
  int32_t limi_rotation_4_2_1 = -(rotation_matrix_4_1_1);
  int32_t limi_rotation_4_2_2 = 0;
  int32_t v_linear_4_0 = data_v_4_0;
  int32_t v_linear_4_1 = data_v_4_1;
  int32_t v_linear_4_2 = data_v_4_2;
  int32_t v_angular_4_0 = data_v_4_3;
  int32_t v_angular_4_1 = data_v_4_4;
  int32_t v_angular_4_2 = v_4;
  int32_t parent_v_linear_4_0 = r_131_new_v_3_0;
  int32_t parent_v_linear_4_1 = r_131_new_v_3_1;
  int32_t parent_v_linear_4_2 = r_131_new_v_3_2;
  int32_t parent_v_angular_4_0 = r_131_new_v_3_3;
  int32_t parent_v_angular_4_1 = r_131_new_v_3_4;
  int32_t parent_v_angular_4_2 = r_131_new_v_3_5;
  int32_t parent_a_gf_linear_4_0 = new_a_gf_up3_3_0;
  int32_t parent_a_gf_linear_4_1 = new_a_gf_up3_3_1;
  int32_t parent_a_gf_linear_4_2 = new_a_gf_up3_3_2;
  int32_t parent_a_gf_angular_4_0 = new_a_gf_up3_3_3;
  int32_t parent_a_gf_angular_4_1 = new_a_gf_up3_3_4;
  int32_t parent_a_gf_angular_4_2 = new_a_gf_up3_3_5;
  int32_t _tmp386 = ((limi_translation_4_0 * parent_v_angular_4_1) >> 12);
  int32_t _tmp387 = ((limi_translation_4_1 * parent_v_angular_4_0) >> 13);
  int32_t actInv1_4_0 = ((_tmp386 - (_tmp387 << 1)) >> 1);
  int32_t _tmp388 = ((limi_translation_4_2 * parent_v_angular_4_0) >> 12);
  int32_t _tmp389 = ((limi_translation_4_0 * parent_v_angular_4_2) >> 13);
  int32_t actInv1_4_1 = (_tmp388 - _tmp389);
  int32_t _tmp390 = ((limi_translation_4_0 * parent_v_angular_4_1) >> 12);
  int32_t _tmp391 = ((limi_translation_4_1 * parent_v_angular_4_0) >> 13);
  int32_t actInv1_4_2 = ((_tmp390 - (_tmp391 << 1)) >> 1);
  int32_t actInv2_4_0 = ((parent_v_linear_4_0 - (actInv1_4_0 << 1)) >> 2);
  int32_t actInv2_4_1 = ((parent_v_linear_4_1 - actInv1_4_1) >> 1);
  int32_t actInv2_4_2 = ((parent_v_linear_4_2 - (actInv1_4_2 << 1)) >> 2);
  int32_t actInv3_4_0_0 = limi_rotation_4_0_0;
  int32_t actInv3_4_1_0 = limi_rotation_4_0_1;
  int32_t actInv3_4_2_0 = limi_rotation_4_0_2;
  int32_t actInv3_4_0_1 = limi_rotation_4_1_0;
  int32_t actInv3_4_1_1 = limi_rotation_4_1_1;
  int32_t actInv3_4_2_1 = limi_rotation_4_1_2;
  int32_t actInv3_4_0_2 = limi_rotation_4_2_0;
  int32_t actInv3_4_1_2 = limi_rotation_4_2_1;
  int32_t actInv3_4_2_2 = limi_rotation_4_2_2;
  int32_t _tmp392 = ((actInv3_4_0_0 * actInv2_4_0) >> 14);
  int32_t _tmp393 = ((actInv3_4_0_1 * actInv2_4_1) >> 14);
  int32_t _tmp394 = (((_tmp392 << 2) + _tmp393) >> 2);
  int32_t _tmp395 = ((actInv3_4_0_2 * actInv2_4_2) >> 14);
  int32_t actInv4_4_0 = ((_tmp394 + _tmp395) >> 1);
  int32_t _tmp396 = ((actInv3_4_1_0 * actInv2_4_0) >> 14);
  int32_t _tmp397 = ((actInv3_4_1_1 * actInv2_4_1) >> 14);
  int32_t _tmp398 = (((_tmp396 << 2) + _tmp397) >> 2);
  int32_t _tmp399 = ((actInv3_4_1_2 * actInv2_4_2) >> 14);
  int32_t actInv4_4_1 = ((_tmp398 + _tmp399) >> 1);
  int32_t _tmp400 = ((actInv3_4_2_0 * actInv2_4_0) >> 13);
  int32_t _tmp401 = ((actInv3_4_2_1 * actInv2_4_1) >> 14);
  int32_t _tmp402 = ((_tmp400 + (_tmp401 << 1)) >> 1);
  int32_t _tmp403 = ((actInv3_4_2_2 * actInv2_4_2) >> 13);
  int32_t actInv4_4_2 = (((_tmp402 << 1) + _tmp403) >> 1);
  int32_t act_inv_linear_4_0 = ((v_linear_4_0 + (actInv4_4_0 << 3)) >> 3);
  int32_t act_inv_linear_4_1 = ((v_linear_4_1 + (actInv4_4_1 << 3)) >> 3);
  int32_t act_inv_linear_4_2 = ((v_linear_4_2 + (actInv4_4_2 << 1)) >> 1);
  int32_t _tmp404 = ((actInv3_4_0_0 * parent_v_angular_4_0) >> 14);
  int32_t _tmp405 = ((actInv3_4_0_1 * parent_v_angular_4_1) >> 12);
  int32_t _tmp406 = (((_tmp404 << 3) + _tmp405) >> 3);
  int32_t _tmp407 = ((actInv3_4_0_2 * parent_v_angular_4_2) >> 14);
  int32_t actInv5_4_0 = (((_tmp406 << 1) + _tmp407) >> 1);
  int32_t _tmp408 = ((actInv3_4_1_0 * parent_v_angular_4_0) >> 14);
  int32_t _tmp409 = ((actInv3_4_1_1 * parent_v_angular_4_1) >> 12);
  int32_t _tmp410 = (((_tmp408 << 3) + _tmp409) >> 3);
  int32_t _tmp411 = ((actInv3_4_1_2 * parent_v_angular_4_2) >> 14);
  int32_t actInv5_4_1 = (((_tmp410 << 1) + _tmp411) >> 1);
  int32_t _tmp412 = ((actInv3_4_2_0 * parent_v_angular_4_0) >> 12);
  int32_t _tmp413 = ((actInv3_4_2_1 * parent_v_angular_4_1) >> 14);
  int32_t _tmp414 = ((_tmp412 + (_tmp413 << 3)) >> 3);
  int32_t _tmp415 = ((actInv3_4_2_2 * parent_v_angular_4_2) >> 13);
  int32_t actInv5_4_2 = (((_tmp414 << 3) + _tmp415) >> 3);
  int32_t act_inv_angular_4_0 = ((v_angular_4_0 + (actInv5_4_0 << 3)) >> 3);
  int32_t act_inv_angular_4_1 = ((v_angular_4_1 + (actInv5_4_1 << 3)) >> 3);
  int32_t act_inv_angular_4_2 = ((v_angular_4_2 + (actInv5_4_2 << 2)) >> 2);
  int32_t minus_m_w_4 = -(v_4);
  int32_t _tmp416 = -(minus_m_w_4);
  int32_t alpha_cross1_linear_4 = ((_tmp416 * act_inv_linear_4_1) >> 14);
  int32_t alpha_cross2_linear_4 = ((minus_m_w_4 * act_inv_linear_4_0) >> 14);
  int32_t alpha_cross_linear_4_0 = alpha_cross1_linear_4;
  int32_t alpha_cross_linear_4_1 = alpha_cross2_linear_4;
  int32_t alpha_cross_linear_4_2 = 0;
  int32_t _tmp417 = -(minus_m_w_4);
  int32_t alpha_cross1_angular_4 = ((_tmp417 * act_inv_angular_4_1) >> 14);
  int32_t alpha_cross2_angular_4 = ((minus_m_w_4 * act_inv_angular_4_0) >> 14);
  int32_t alpha_cross_angular_4_0 = alpha_cross1_angular_4;
  int32_t alpha_cross_angular_4_1 = alpha_cross2_angular_4;
  int32_t alpha_cross_angular_4_2 = 0;
  int32_t r_132_new_a_gf_4_0 = alpha_cross_linear_4_0;
  int32_t r_132_new_a_gf_4_1 = alpha_cross_linear_4_1;
  int32_t r_132_new_a_gf_4_2 = alpha_cross_linear_4_2;
  int32_t r_132_new_a_gf_4_3 = alpha_cross_angular_4_0;
  int32_t r_132_new_a_gf_4_4 = alpha_cross_angular_4_1;
  int32_t r_132_new_a_gf_4_5 = alpha_cross_angular_4_2;
  int32_t new_a_gf_up1_4 = (((a_4 << 1) + r_132_new_a_gf_4_5) >> 1);
  int32_t new_a_gf2_linear_4_0 = r_132_new_a_gf_4_0;
  int32_t new_a_gf2_linear_4_1 = r_132_new_a_gf_4_1;
  int32_t new_a_gf2_linear_4_2 = r_132_new_a_gf_4_2;
  int32_t new_a_gf2_angular_4_0 = r_132_new_a_gf_4_3;
  int32_t new_a_gf2_angular_4_1 = r_132_new_a_gf_4_4;
  int32_t new_a_gf2_angular_4_2 = new_a_gf_up1_4;
  int32_t _tmp418 = ((limi_translation_4_0 * parent_a_gf_angular_4_1) >> 11);
  int32_t _tmp419 = ((limi_translation_4_1 * parent_a_gf_angular_4_0) >> 14);
  int32_t r_133_actInv1_4_0 = ((_tmp418 - (_tmp419 << 3)) >> 3);
  int32_t _tmp420 = ((limi_translation_4_2 * parent_a_gf_angular_4_0) >> 11);
  int32_t _tmp421 = ((limi_translation_4_0 * parent_a_gf_angular_4_2) >> 12);
  int32_t r_133_actInv1_4_1 = (_tmp420 - _tmp421);
  int32_t _tmp422 = ((limi_translation_4_0 * parent_a_gf_angular_4_1) >> 11);
  int32_t _tmp423 = ((limi_translation_4_1 * parent_a_gf_angular_4_0) >> 14);
  int32_t r_133_actInv1_4_2 = ((_tmp422 - (_tmp423 << 3)) >> 3);
  int32_t r_134_actInv2_4_0 = (((parent_a_gf_linear_4_0 << 2) - r_133_actInv1_4_0) >> 2);
  int32_t r_134_actInv2_4_1 = (((parent_a_gf_linear_4_1 << 5) - r_133_actInv1_4_1) >> 5);
  int32_t r_134_actInv2_4_2 = (((parent_a_gf_linear_4_2 << 1) - r_133_actInv1_4_2) >> 2);
  int32_t r_135_actInv3_4_0_0 = limi_rotation_4_0_0;
  int32_t r_135_actInv3_4_1_0 = limi_rotation_4_0_1;
  int32_t r_135_actInv3_4_2_0 = limi_rotation_4_0_2;
  int32_t r_135_actInv3_4_0_1 = limi_rotation_4_1_0;
  int32_t r_135_actInv3_4_1_1 = limi_rotation_4_1_1;
  int32_t r_135_actInv3_4_2_1 = limi_rotation_4_1_2;
  int32_t r_135_actInv3_4_0_2 = limi_rotation_4_2_0;
  int32_t r_135_actInv3_4_1_2 = limi_rotation_4_2_1;
  int32_t r_135_actInv3_4_2_2 = limi_rotation_4_2_2;
  int32_t _tmp424 = ((r_135_actInv3_4_0_0 * r_134_actInv2_4_0) >> 14);
  int32_t _tmp425 = ((r_135_actInv3_4_0_1 * r_134_actInv2_4_1) >> 10);
  int32_t _tmp426 = (((_tmp424 << 5) + _tmp425) >> 5);
  int32_t _tmp427 = ((r_135_actInv3_4_0_2 * r_134_actInv2_4_2) >> 14);
  int32_t r_136_actInv4_4_0 = ((_tmp426 + _tmp427) >> 1);
  int32_t _tmp428 = ((r_135_actInv3_4_1_0 * r_134_actInv2_4_0) >> 14);
  int32_t _tmp429 = ((r_135_actInv3_4_1_1 * r_134_actInv2_4_1) >> 10);
  int32_t _tmp430 = (((_tmp428 << 5) + _tmp429) >> 5);
  int32_t _tmp431 = ((r_135_actInv3_4_1_2 * r_134_actInv2_4_2) >> 14);
  int32_t r_136_actInv4_4_1 = ((_tmp430 + _tmp431) >> 1);
  int32_t _tmp432 = ((r_135_actInv3_4_2_0 * r_134_actInv2_4_0) >> 10);
  int32_t _tmp433 = ((r_135_actInv3_4_2_1 * r_134_actInv2_4_1) >> 14);
  int32_t _tmp434 = ((_tmp432 + (_tmp433 << 5)) >> 5);
  int32_t _tmp435 = ((r_135_actInv3_4_2_2 * r_134_actInv2_4_2) >> 10);
  int32_t r_136_actInv4_4_2 = (((_tmp434 << 5) + _tmp435) >> 5);
  int32_t r_137_act_inv_linear_4_0 = ((new_a_gf2_linear_4_0 + (r_136_actInv4_4_0 << 3)) >> 3);
  int32_t r_137_act_inv_linear_4_1 = ((new_a_gf2_linear_4_1 + (r_136_actInv4_4_1 << 3)) >> 3);
  int32_t r_137_act_inv_linear_4_2 = ((new_a_gf2_linear_4_2 + (r_136_actInv4_4_2 << 5)) >> 5);
  int32_t _tmp436 = ((r_135_actInv3_4_0_0 * parent_a_gf_angular_4_0) >> 14);
  int32_t _tmp437 = ((r_135_actInv3_4_0_1 * parent_a_gf_angular_4_1) >> 11);
  int32_t _tmp438 = (((_tmp436 << 4) + _tmp437) >> 4);
  int32_t _tmp439 = ((r_135_actInv3_4_0_2 * parent_a_gf_angular_4_2) >> 14);
  int32_t r_138_actInv5_4_0 = (((_tmp438 << 1) + _tmp439) >> 2);
  int32_t _tmp440 = ((r_135_actInv3_4_1_0 * parent_a_gf_angular_4_0) >> 14);
  int32_t _tmp441 = ((r_135_actInv3_4_1_1 * parent_a_gf_angular_4_1) >> 11);
  int32_t _tmp442 = (((_tmp440 << 4) + _tmp441) >> 4);
  int32_t _tmp443 = ((r_135_actInv3_4_1_2 * parent_a_gf_angular_4_2) >> 14);
  int32_t r_138_actInv5_4_1 = (((_tmp442 << 1) + _tmp443) >> 2);
  int32_t _tmp444 = ((r_135_actInv3_4_2_0 * parent_a_gf_angular_4_0) >> 11);
  int32_t _tmp445 = ((r_135_actInv3_4_2_1 * parent_a_gf_angular_4_1) >> 14);
  int32_t _tmp446 = ((_tmp444 + (_tmp445 << 4)) >> 4);
  int32_t _tmp447 = ((r_135_actInv3_4_2_2 * parent_a_gf_angular_4_2) >> 12);
  int32_t r_138_actInv5_4_2 = (((_tmp446 << 4) + _tmp447) >> 4);
  int32_t r_139_act_inv_angular_4_0 = ((new_a_gf2_angular_4_0 + (r_138_actInv5_4_0 << 2)) >> 2);
  int32_t r_139_act_inv_angular_4_1 = ((new_a_gf2_angular_4_1 + (r_138_actInv5_4_1 << 2)) >> 2);
  int32_t r_139_act_inv_angular_4_2 = ((new_a_gf2_angular_4_2 + (r_138_actInv5_4_2 << 3)) >> 3);
  int32_t new_a_gf_up3_4_0 = r_137_act_inv_linear_4_0;
  int32_t new_a_gf_up3_4_1 = r_137_act_inv_linear_4_1;
  int32_t new_a_gf_up3_4_2 = r_137_act_inv_linear_4_2;
  int32_t new_a_gf_up3_4_3 = r_139_act_inv_angular_4_0;
  int32_t new_a_gf_up3_4_4 = r_139_act_inv_angular_4_1;
  int32_t new_a_gf_up3_4_5 = r_139_act_inv_angular_4_2;
  int32_t _tmp448 = ((lever_4_0 * act_inv_angular_4_1) >> 12);
  int32_t _tmp449 = ((lever_4_1 * act_inv_angular_4_0) >> 12);
  int32_t h_linear_1_4_0 = (_tmp448 - _tmp449);
  int32_t _tmp450 = ((lever_4_2 * act_inv_angular_4_0) >> 12);
  int32_t _tmp451 = ((lever_4_0 * act_inv_angular_4_2) >> 12);
  int32_t h_linear_1_4_1 = (_tmp450 - _tmp451);
  int32_t _tmp452 = ((lever_4_0 * act_inv_angular_4_1) >> 12);
  int32_t _tmp453 = ((lever_4_1 * act_inv_angular_4_0) >> 12);
  int32_t h_linear_1_4_2 = (_tmp452 - _tmp453);
  int32_t h_linear_2_4_0 = (((act_inv_linear_4_0 << 3) - h_linear_1_4_0) >> 3);
  int32_t h_linear_2_4_1 = (((act_inv_linear_4_1 << 3) - h_linear_1_4_1) >> 3);
  int32_t h_linear_2_4_2 = (((act_inv_linear_4_2 << 1) - h_linear_1_4_2) >> 1);
  int32_t h_linear_4_0 = ((masses_4 * h_linear_2_4_0) >> 14);
  int32_t h_linear_4_1 = ((masses_4 * h_linear_2_4_1) >> 14);
  int32_t h_linear_4_2 = ((masses_4 * h_linear_2_4_2) >> 14);
  int32_t r_140_ = ((inertia_4_0_0 * act_inv_angular_4_0) >> 12);
  int32_t r_141_ = ((inertia_4_0_1 * act_inv_angular_4_1) >> 12);
  int32_t r_142_ = ((inertia_4_0_2 * act_inv_angular_4_2) >> 12);
  int32_t r_143_ = ((inertia_4_0_1 * act_inv_angular_4_0) >> 12);
  int32_t r_144_ = ((inertia_4_1_1 * act_inv_angular_4_1) >> 12);
  int32_t r_145_ = ((inertia_4_1_2 * act_inv_angular_4_2) >> 12);
  int32_t r_146_ = ((inertia_4_0_2 * act_inv_angular_4_0) >> 12);
  int32_t r_147_ = ((inertia_4_1_2 * act_inv_angular_4_1) >> 12);
  int32_t r_148_ = ((inertia_4_2_2 * act_inv_angular_4_2) >> 12);
  int32_t rhsMult1_temp_4 = (r_140_ + r_141_);
  int32_t rhsMult1_4 = (rhsMult1_temp_4 + r_142_);
  int32_t rhsMult2_temp_4 = (r_143_ + r_144_);
  int32_t rhsMult2_4 = (rhsMult2_temp_4 + r_145_);
  int32_t rhsMult3_temp_4 = (r_146_ + r_147_);
  int32_t rhsMult3_4 = (rhsMult3_temp_4 + r_148_);
  int32_t rhsMult_4_0 = rhsMult1_4;
  int32_t rhsMult_4_1 = rhsMult2_4;
  int32_t rhsMult_4_2 = rhsMult3_4;
  int32_t h_angular_first_4_0 = rhsMult_4_0;
  int32_t h_angular_first_4_1 = rhsMult_4_1;
  int32_t h_angular_first_4_2 = rhsMult_4_2;
  int32_t _tmp454 = ((lever_4_0 * h_linear_4_1) >> 12);
  int32_t _tmp455 = ((lever_4_1 * h_linear_4_0) >> 12);
  int32_t h_angular_1_4_0 = (_tmp454 - _tmp455);
  int32_t _tmp456 = ((lever_4_2 * h_linear_4_0) >> 12);
  int32_t _tmp457 = ((lever_4_0 * h_linear_4_2) >> 14);
  int32_t h_angular_1_4_1 = (_tmp456 - _tmp457);
  int32_t _tmp458 = ((lever_4_0 * h_linear_4_1) >> 12);
  int32_t _tmp459 = ((lever_4_1 * h_linear_4_0) >> 12);
  int32_t h_angular_1_4_2 = (_tmp458 - _tmp459);
  int32_t h_angular_4_0 = (h_angular_first_4_0 + h_angular_1_4_0);
  int32_t h_angular_4_1 = (h_angular_first_4_1 + h_angular_1_4_1);
  int32_t h_angular_4_2 = (h_angular_first_4_2 + h_angular_1_4_2);
  int32_t _tmp460 = ((lever_4_0 * r_139_act_inv_angular_4_1) >> 10);
  int32_t _tmp461 = ((lever_4_1 * r_139_act_inv_angular_4_0) >> 11);
  int32_t f_linear_1_4_0 = ((_tmp460 - (_tmp461 << 1)) >> 1);
  int32_t _tmp462 = ((lever_4_2 * r_139_act_inv_angular_4_0) >> 10);
  int32_t _tmp463 = ((lever_4_0 * r_139_act_inv_angular_4_2) >> 11);
  int32_t f_linear_1_4_1 = ((_tmp462 - _tmp463) >> 1);
  int32_t _tmp464 = ((lever_4_0 * r_139_act_inv_angular_4_1) >> 10);
  int32_t _tmp465 = ((lever_4_1 * r_139_act_inv_angular_4_0) >> 11);
  int32_t f_linear_1_4_2 = ((_tmp464 - (_tmp465 << 1)) >> 1);
  int32_t f_linear_2_4_0 = (((r_137_act_inv_linear_4_0 << 5) - f_linear_1_4_0) >> 5);
  int32_t f_linear_2_4_1 = (((r_137_act_inv_linear_4_1 << 5) - f_linear_1_4_1) >> 5);
  int32_t f_linear_2_4_2 = (((r_137_act_inv_linear_4_2 << 4) - f_linear_1_4_2) >> 4);
  int32_t f_linear_3_4_0 = ((masses_4 * f_linear_2_4_0) >> 15);
  int32_t f_linear_3_4_1 = ((masses_4 * f_linear_2_4_1) >> 15);
  int32_t f_linear_3_4_2 = ((masses_4 * f_linear_2_4_2) >> 14);
  int32_t r_149_ = ((inertia_4_0_0 * r_139_act_inv_angular_4_0) >> 10);
  int32_t r_150_ = ((inertia_4_0_1 * r_139_act_inv_angular_4_1) >> 10);
  int32_t r_151_ = ((inertia_4_0_2 * r_139_act_inv_angular_4_2) >> 11);
  int32_t r_152_ = ((inertia_4_0_1 * r_139_act_inv_angular_4_0) >> 10);
  int32_t r_153_ = ((inertia_4_1_1 * r_139_act_inv_angular_4_1) >> 10);
  int32_t r_154_ = ((inertia_4_1_2 * r_139_act_inv_angular_4_2) >> 11);
  int32_t r_155_ = ((inertia_4_0_2 * r_139_act_inv_angular_4_0) >> 10);
  int32_t r_156_ = ((inertia_4_1_2 * r_139_act_inv_angular_4_1) >> 10);
  int32_t r_157_ = ((inertia_4_2_2 * r_139_act_inv_angular_4_2) >> 11);
  int32_t r_158_rhsMult1_temp_4 = (r_149_ + r_150_);
  int32_t r_159_rhsMult1_4 = (r_158_rhsMult1_temp_4 + r_151_);
  int32_t r_160_rhsMult2_temp_4 = (r_152_ + r_153_);
  int32_t r_161_rhsMult2_4 = (r_160_rhsMult2_temp_4 + r_154_);
  int32_t r_162_rhsMult3_temp_4 = (r_155_ + r_156_);
  int32_t r_163_rhsMult3_4 = (r_162_rhsMult3_temp_4 + r_157_);
  int32_t r_164_rhsMult_4_0 = r_159_rhsMult1_4;
  int32_t r_164_rhsMult_4_1 = r_161_rhsMult2_4;
  int32_t r_164_rhsMult_4_2 = r_163_rhsMult3_4;
  int32_t f_angular_first_4_0 = r_164_rhsMult_4_0;
  int32_t f_angular_first_4_1 = r_164_rhsMult_4_1;
  int32_t f_angular_first_4_2 = r_164_rhsMult_4_2;
  int32_t _tmp466 = ((lever_4_0 * f_linear_3_4_1) >> 8);
  int32_t _tmp467 = ((lever_4_1 * f_linear_3_4_0) >> 10);
  int32_t f_angular_1_4_0 = ((_tmp466 - (_tmp467 << 2)) >> 2);
  int32_t _tmp468 = ((lever_4_2 * f_linear_3_4_0) >> 10);
  int32_t _tmp469 = ((lever_4_0 * f_linear_3_4_2) >> 10);
  int32_t f_angular_1_4_1 = (((_tmp468 << 2) - _tmp469) >> 2);
  int32_t _tmp470 = ((lever_4_0 * f_linear_3_4_1) >> 8);
  int32_t _tmp471 = ((lever_4_1 * f_linear_3_4_0) >> 10);
  int32_t f_angular_1_4_2 = ((_tmp470 - (_tmp471 << 2)) >> 2);
  int32_t f_angular_2_4_0 = ((f_angular_first_4_0 + (f_angular_1_4_0 << 2)) >> 3);
  int32_t f_angular_2_4_1 = ((f_angular_first_4_1 + (f_angular_1_4_1 << 2)) >> 2);
  int32_t f_angular_2_4_2 = ((f_angular_first_4_2 + (f_angular_1_4_2 << 2)) >> 2);
  int32_t _tmp472 = ((act_inv_angular_4_0 * h_linear_4_1) >> 15);
  int32_t _tmp473 = ((act_inv_angular_4_1 * h_linear_4_0) >> 15);
  int32_t f_linear_4_temp_4_0 = ((_tmp472 - _tmp473) >> 1);
  int32_t _tmp474 = ((act_inv_angular_4_2 * h_linear_4_0) >> 15);
  int32_t _tmp475 = ((act_inv_angular_4_0 * h_linear_4_2) >> 15);
  int32_t f_linear_4_temp_4_1 = (((_tmp474 << 2) - _tmp475) >> 2);
  int32_t _tmp476 = ((act_inv_angular_4_0 * h_linear_4_1) >> 15);
  int32_t _tmp477 = ((act_inv_angular_4_1 * h_linear_4_0) >> 15);
  int32_t f_linear_4_temp_4_2 = ((_tmp476 - _tmp477) >> 1);
  int32_t f_linear_4_4_0 = ((f_linear_3_4_0 + f_linear_4_temp_4_0) >> 1);
  int32_t f_linear_4_4_1 = (((f_linear_3_4_1 << 1) + f_linear_4_temp_4_1) >> 1);
  int32_t f_linear_4_4_2 = ((f_linear_3_4_2 + (f_linear_4_temp_4_2 << 2)) >> 3);
  int32_t _tmp478 = ((act_inv_angular_4_0 * h_angular_first_4_1) >> 13);
  int32_t _tmp479 = ((act_inv_angular_4_1 * h_angular_first_4_0) >> 13);
  int32_t f_angular_3_temp_4_0 = ((_tmp478 - _tmp479) >> 1);
  int32_t _tmp480 = ((act_inv_angular_4_2 * h_angular_first_4_0) >> 13);
  int32_t _tmp481 = ((act_inv_angular_4_0 * h_angular_first_4_2) >> 12);
  int32_t f_angular_3_temp_4_1 = (((_tmp480 << 1) - _tmp481) >> 1);
  int32_t _tmp482 = ((act_inv_angular_4_0 * h_angular_first_4_1) >> 13);
  int32_t _tmp483 = ((act_inv_angular_4_1 * h_angular_first_4_0) >> 13);
  int32_t f_angular_3_temp_4_2 = ((_tmp482 - _tmp483) >> 1);
  int32_t f_angular_3_4_0 = (((f_angular_2_4_0 << 1) + f_angular_3_temp_4_0) >> 2);
  int32_t f_angular_3_4_1 = (((f_angular_2_4_1 << 1) + f_angular_3_temp_4_1) >> 2);
  int32_t f_angular_3_4_2 = ((f_angular_2_4_2 + f_angular_3_temp_4_2) >> 1);
  int32_t _tmp484 = ((act_inv_linear_4_0 * h_linear_4_1) >> 15);
  int32_t _tmp485 = ((act_inv_linear_4_1 * h_linear_4_0) >> 15);
  int32_t f_angular_4_temp_4_0 = ((_tmp484 - _tmp485) >> 1);
  int32_t _tmp486 = ((act_inv_linear_4_2 * h_linear_4_0) >> 15);
  int32_t _tmp487 = ((act_inv_linear_4_0 * h_linear_4_2) >> 15);
  int32_t f_angular_4_temp_4_1 = ((_tmp486 - _tmp487) >> 1);
  int32_t _tmp488 = ((act_inv_linear_4_0 * h_linear_4_1) >> 15);
  int32_t _tmp489 = ((act_inv_linear_4_1 * h_linear_4_0) >> 15);
  int32_t f_angular_4_temp_4_2 = ((_tmp488 - _tmp489) >> 1);
  int32_t f_angular_4_4_0 = ((f_angular_3_4_0 + (f_angular_4_temp_4_0 << 3)) >> 3);
  int32_t f_angular_4_4_1 = ((f_angular_3_4_1 + (f_angular_4_temp_4_1 << 2)) >> 2);
  int32_t f_angular_4_4_2 = ((f_angular_3_4_2 + (f_angular_4_temp_4_2 << 4)) >> 4);
  int32_t h_rnea_firstpass4_0 = h_linear_4_0;
  int32_t h_rnea_firstpass4_1 = h_linear_4_1;
  int32_t h_rnea_firstpass4_2 = h_linear_4_2;
  int32_t h_rnea_firstpass4_3 = h_angular_4_0;
  int32_t h_rnea_firstpass4_4 = h_angular_4_1;
  int32_t h_rnea_firstpass4_5 = h_angular_4_2;
  int32_t f_rnea_firstpass4_0 = f_linear_4_4_0;
  int32_t f_rnea_firstpass4_1 = f_linear_4_4_1;
  int32_t f_rnea_firstpass4_2 = f_linear_4_4_2;
  int32_t f_rnea_firstpass4_3 = f_angular_4_4_0;
  int32_t f_rnea_firstpass4_4 = f_angular_4_4_1;
  int32_t f_rnea_firstpass4_5 = f_angular_4_4_2;
  int32_t r_165_new_v_4_0 = act_inv_linear_4_0;
  int32_t r_165_new_v_4_1 = act_inv_linear_4_1;
  int32_t r_165_new_v_4_2 = act_inv_linear_4_2;
  int32_t r_165_new_v_4_3 = act_inv_angular_4_0;
  int32_t r_165_new_v_4_4 = act_inv_angular_4_1;
  int32_t r_165_new_v_4_5 = act_inv_angular_4_2;
  int32_t rotation_matrix_5_0_0 = qcos_5;
  int32_t rotation_matrix_5_0_1 = -(qsin_5);
  int32_t rotation_matrix_5_0_2 = 0;
  int32_t rotation_matrix_5_1_0 = qsin_5;
  int32_t rotation_matrix_5_1_1 = qcos_5;
  int32_t rotation_matrix_5_1_2 = 0;
  int32_t rotation_matrix_5_2_0 = 0;
  int32_t rotation_matrix_5_2_1 = 0;
  int32_t rotation_matrix_5_2_2 = 16384;
  int32_t limi_rotation_5_0_0 = rotation_matrix_5_0_0;
  int32_t limi_rotation_5_0_1 = rotation_matrix_5_0_1;
  int32_t limi_rotation_5_0_2 = 0;
  int32_t limi_rotation_5_1_0 = 0;
  int32_t limi_rotation_5_1_1 = 0;
  int32_t limi_rotation_5_1_2 = -16385;
  int32_t limi_rotation_5_2_0 = rotation_matrix_5_1_0;
  int32_t limi_rotation_5_2_1 = rotation_matrix_5_1_1;
  int32_t limi_rotation_5_2_2 = 0;
  int32_t v_linear_5_0 = data_v_5_0;
  int32_t v_linear_5_1 = data_v_5_1;
  int32_t v_linear_5_2 = data_v_5_2;
  int32_t v_angular_5_0 = data_v_5_3;
  int32_t v_angular_5_1 = data_v_5_4;
  int32_t v_angular_5_2 = v_5;
  int32_t parent_v_linear_5_0 = r_165_new_v_4_0;
  int32_t parent_v_linear_5_1 = r_165_new_v_4_1;
  int32_t parent_v_linear_5_2 = r_165_new_v_4_2;
  int32_t parent_v_angular_5_0 = r_165_new_v_4_3;
  int32_t parent_v_angular_5_1 = r_165_new_v_4_4;
  int32_t parent_v_angular_5_2 = r_165_new_v_4_5;
  int32_t parent_a_gf_linear_5_0 = new_a_gf_up3_4_0;
  int32_t parent_a_gf_linear_5_1 = new_a_gf_up3_4_1;
  int32_t parent_a_gf_linear_5_2 = new_a_gf_up3_4_2;
  int32_t parent_a_gf_angular_5_0 = new_a_gf_up3_4_3;
  int32_t parent_a_gf_angular_5_1 = new_a_gf_up3_4_4;
  int32_t parent_a_gf_angular_5_2 = new_a_gf_up3_4_5;
  int32_t _tmp490 = ((limi_translation_5_0 * parent_v_angular_5_1) >> 12);
  int32_t _tmp491 = ((limi_translation_5_1 * parent_v_angular_5_0) >> 12);
  int32_t actInv1_5_0 = (_tmp490 - _tmp491);
  int32_t _tmp492 = ((limi_translation_5_2 * parent_v_angular_5_0) >> 12);
  int32_t _tmp493 = ((limi_translation_5_0 * parent_v_angular_5_2) >> 12);
  int32_t actInv1_5_1 = (_tmp492 - _tmp493);
  int32_t _tmp494 = ((limi_translation_5_0 * parent_v_angular_5_1) >> 12);
  int32_t _tmp495 = ((limi_translation_5_1 * parent_v_angular_5_0) >> 12);
  int32_t actInv1_5_2 = (_tmp494 - _tmp495);
  int32_t actInv2_5_0 = (((parent_v_linear_5_0 << 3) - actInv1_5_0) >> 3);
  int32_t actInv2_5_1 = (((parent_v_linear_5_1 << 3) - actInv1_5_1) >> 3);
  int32_t actInv2_5_2 = (((parent_v_linear_5_2 << 1) - actInv1_5_2) >> 1);
  int32_t actInv3_5_0_0 = limi_rotation_5_0_0;
  int32_t actInv3_5_1_0 = limi_rotation_5_0_1;
  int32_t actInv3_5_2_0 = limi_rotation_5_0_2;
  int32_t actInv3_5_0_1 = limi_rotation_5_1_0;
  int32_t actInv3_5_1_1 = limi_rotation_5_1_1;
  int32_t actInv3_5_2_1 = limi_rotation_5_1_2;
  int32_t actInv3_5_0_2 = limi_rotation_5_2_0;
  int32_t actInv3_5_1_2 = limi_rotation_5_2_1;
  int32_t actInv3_5_2_2 = limi_rotation_5_2_2;
  int32_t _tmp496 = ((actInv3_5_0_0 * actInv2_5_0) >> 14);
  int32_t _tmp497 = ((actInv3_5_0_1 * actInv2_5_1) >> 12);
  int32_t _tmp498 = (((_tmp496 << 3) + _tmp497) >> 3);
  int32_t _tmp499 = ((actInv3_5_0_2 * actInv2_5_2) >> 14);
  int32_t actInv4_5_0 = (((_tmp498 << 2) + _tmp499) >> 2);
  int32_t _tmp500 = ((actInv3_5_1_0 * actInv2_5_0) >> 14);
  int32_t _tmp501 = ((actInv3_5_1_1 * actInv2_5_1) >> 12);
  int32_t _tmp502 = (((_tmp500 << 3) + _tmp501) >> 3);
  int32_t _tmp503 = ((actInv3_5_1_2 * actInv2_5_2) >> 14);
  int32_t actInv4_5_1 = (((_tmp502 << 2) + _tmp503) >> 2);
  int32_t _tmp504 = ((actInv3_5_2_0 * actInv2_5_0) >> 12);
  int32_t _tmp505 = ((actInv3_5_2_1 * actInv2_5_1) >> 14);
  int32_t _tmp506 = ((_tmp504 + (_tmp505 << 3)) >> 3);
  int32_t _tmp507 = ((actInv3_5_2_2 * actInv2_5_2) >> 14);
  int32_t actInv4_5_2 = (((_tmp506 << 3) + _tmp507) >> 3);
  int32_t act_inv_linear_5_0 = ((v_linear_5_0 + (actInv4_5_0 << 3)) >> 3);
  int32_t act_inv_linear_5_1 = ((v_linear_5_1 + (actInv4_5_1 << 3)) >> 3);
  int32_t act_inv_linear_5_2 = ((v_linear_5_2 + (actInv4_5_2 << 3)) >> 3);
  int32_t _tmp508 = ((actInv3_5_0_0 * parent_v_angular_5_0) >> 14);
  int32_t _tmp509 = ((actInv3_5_0_1 * parent_v_angular_5_1) >> 12);
  int32_t _tmp510 = (((_tmp508 << 3) + _tmp509) >> 3);
  int32_t _tmp511 = ((actInv3_5_0_2 * parent_v_angular_5_2) >> 14);
  int32_t actInv5_5_0 = ((_tmp510 + _tmp511) >> 1);
  int32_t _tmp512 = ((actInv3_5_1_0 * parent_v_angular_5_0) >> 14);
  int32_t _tmp513 = ((actInv3_5_1_1 * parent_v_angular_5_1) >> 12);
  int32_t _tmp514 = (((_tmp512 << 3) + _tmp513) >> 3);
  int32_t _tmp515 = ((actInv3_5_1_2 * parent_v_angular_5_2) >> 14);
  int32_t actInv5_5_1 = ((_tmp514 + _tmp515) >> 1);
  int32_t _tmp516 = ((actInv3_5_2_0 * parent_v_angular_5_0) >> 12);
  int32_t _tmp517 = ((actInv3_5_2_1 * parent_v_angular_5_1) >> 14);
  int32_t _tmp518 = ((_tmp516 + (_tmp517 << 3)) >> 3);
  int32_t _tmp519 = ((actInv3_5_2_2 * parent_v_angular_5_2) >> 12);
  int32_t actInv5_5_2 = (((_tmp518 << 3) + _tmp519) >> 3);
  int32_t act_inv_angular_5_0 = ((v_angular_5_0 + (actInv5_5_0 << 4)) >> 4);
  int32_t act_inv_angular_5_1 = ((v_angular_5_1 + (actInv5_5_1 << 4)) >> 4);
  int32_t act_inv_angular_5_2 = ((v_angular_5_2 + (actInv5_5_2 << 2)) >> 3);
  int32_t minus_m_w_5 = -(v_5);
  int32_t _tmp520 = -(minus_m_w_5);
  int32_t alpha_cross1_linear_5 = ((_tmp520 * act_inv_linear_5_1) >> 14);
  int32_t alpha_cross2_linear_5 = ((minus_m_w_5 * act_inv_linear_5_0) >> 14);
  int32_t alpha_cross_linear_5_0 = alpha_cross1_linear_5;
  int32_t alpha_cross_linear_5_1 = alpha_cross2_linear_5;
  int32_t alpha_cross_linear_5_2 = 0;
  int32_t _tmp521 = -(minus_m_w_5);
  int32_t alpha_cross1_angular_5 = ((_tmp521 * act_inv_angular_5_1) >> 14);
  int32_t alpha_cross2_angular_5 = ((minus_m_w_5 * act_inv_angular_5_0) >> 14);
  int32_t alpha_cross_angular_5_0 = alpha_cross1_angular_5;
  int32_t alpha_cross_angular_5_1 = alpha_cross2_angular_5;
  int32_t alpha_cross_angular_5_2 = 0;
  int32_t r_166_new_a_gf_5_0 = alpha_cross_linear_5_0;
  int32_t r_166_new_a_gf_5_1 = alpha_cross_linear_5_1;
  int32_t r_166_new_a_gf_5_2 = alpha_cross_linear_5_2;
  int32_t r_166_new_a_gf_5_3 = alpha_cross_angular_5_0;
  int32_t r_166_new_a_gf_5_4 = alpha_cross_angular_5_1;
  int32_t r_166_new_a_gf_5_5 = alpha_cross_angular_5_2;
  int32_t new_a_gf_up1_5 = (((a_5 << 1) + r_166_new_a_gf_5_5) >> 1);
  int32_t new_a_gf2_linear_5_0 = r_166_new_a_gf_5_0;
  int32_t new_a_gf2_linear_5_1 = r_166_new_a_gf_5_1;
  int32_t new_a_gf2_linear_5_2 = r_166_new_a_gf_5_2;
  int32_t new_a_gf2_angular_5_0 = r_166_new_a_gf_5_3;
  int32_t new_a_gf2_angular_5_1 = r_166_new_a_gf_5_4;
  int32_t new_a_gf2_angular_5_2 = new_a_gf_up1_5;
  int32_t _tmp522 = ((limi_translation_5_0 * parent_a_gf_angular_5_1) >> 10);
  int32_t _tmp523 = ((limi_translation_5_1 * parent_a_gf_angular_5_0) >> 10);
  int32_t r_167_actInv1_5_0 = (_tmp522 - _tmp523);
  int32_t _tmp524 = ((limi_translation_5_2 * parent_a_gf_angular_5_0) >> 10);
  int32_t _tmp525 = ((limi_translation_5_0 * parent_a_gf_angular_5_2) >> 11);
  int32_t r_167_actInv1_5_1 = (_tmp524 - _tmp525);
  int32_t _tmp526 = ((limi_translation_5_0 * parent_a_gf_angular_5_1) >> 10);
  int32_t _tmp527 = ((limi_translation_5_1 * parent_a_gf_angular_5_0) >> 10);
  int32_t r_167_actInv1_5_2 = (_tmp526 - _tmp527);
  int32_t r_168_actInv2_5_0 = (((parent_a_gf_linear_5_0 << 6) - r_167_actInv1_5_0) >> 6);
  int32_t r_168_actInv2_5_1 = (((parent_a_gf_linear_5_1 << 6) - r_167_actInv1_5_1) >> 6);
  int32_t r_168_actInv2_5_2 = (((parent_a_gf_linear_5_2 << 5) - r_167_actInv1_5_2) >> 5);
  int32_t r_169_actInv3_5_0_0 = limi_rotation_5_0_0;
  int32_t r_169_actInv3_5_1_0 = limi_rotation_5_0_1;
  int32_t r_169_actInv3_5_2_0 = limi_rotation_5_0_2;
  int32_t r_169_actInv3_5_0_1 = limi_rotation_5_1_0;
  int32_t r_169_actInv3_5_1_1 = limi_rotation_5_1_1;
  int32_t r_169_actInv3_5_2_1 = limi_rotation_5_1_2;
  int32_t r_169_actInv3_5_0_2 = limi_rotation_5_2_0;
  int32_t r_169_actInv3_5_1_2 = limi_rotation_5_2_1;
  int32_t r_169_actInv3_5_2_2 = limi_rotation_5_2_2;
  int32_t _tmp528 = ((r_169_actInv3_5_0_0 * r_168_actInv2_5_0) >> 14);
  int32_t _tmp529 = ((r_169_actInv3_5_0_1 * r_168_actInv2_5_1) >> 9);
  int32_t _tmp530 = (((_tmp528 << 6) + _tmp529) >> 6);
  int32_t _tmp531 = ((r_169_actInv3_5_0_2 * r_168_actInv2_5_2) >> 14);
  int32_t r_170_actInv4_5_0 = (((_tmp530 << 1) + _tmp531) >> 2);
  int32_t _tmp532 = ((r_169_actInv3_5_1_0 * r_168_actInv2_5_0) >> 14);
  int32_t _tmp533 = ((r_169_actInv3_5_1_1 * r_168_actInv2_5_1) >> 9);
  int32_t _tmp534 = (((_tmp532 << 6) + _tmp533) >> 6);
  int32_t _tmp535 = ((r_169_actInv3_5_1_2 * r_168_actInv2_5_2) >> 14);
  int32_t r_170_actInv4_5_1 = (((_tmp534 << 1) + _tmp535) >> 2);
  int32_t _tmp536 = ((r_169_actInv3_5_2_0 * r_168_actInv2_5_0) >> 9);
  int32_t _tmp537 = ((r_169_actInv3_5_2_1 * r_168_actInv2_5_1) >> 14);
  int32_t _tmp538 = ((_tmp536 + (_tmp537 << 6)) >> 6);
  int32_t _tmp539 = ((r_169_actInv3_5_2_2 * r_168_actInv2_5_2) >> 10);
  int32_t r_170_actInv4_5_2 = (((_tmp538 << 6) + _tmp539) >> 6);
  int32_t r_171_act_inv_linear_5_0 = ((new_a_gf2_linear_5_0 + (r_170_actInv4_5_0 << 4)) >> 4);
  int32_t r_171_act_inv_linear_5_1 = ((new_a_gf2_linear_5_1 + (r_170_actInv4_5_1 << 4)) >> 4);
  int32_t r_171_act_inv_linear_5_2 = ((new_a_gf2_linear_5_2 + (r_170_actInv4_5_2 << 6)) >> 6);
  int32_t _tmp540 = ((r_169_actInv3_5_0_0 * parent_a_gf_angular_5_0) >> 14);
  int32_t _tmp541 = ((r_169_actInv3_5_0_1 * parent_a_gf_angular_5_1) >> 10);
  int32_t _tmp542 = (((_tmp540 << 5) + _tmp541) >> 5);
  int32_t _tmp543 = ((r_169_actInv3_5_0_2 * parent_a_gf_angular_5_2) >> 14);
  int32_t r_172_actInv5_5_0 = (((_tmp542 << 1) + _tmp543) >> 2);
  int32_t _tmp544 = ((r_169_actInv3_5_1_0 * parent_a_gf_angular_5_0) >> 14);
  int32_t _tmp545 = ((r_169_actInv3_5_1_1 * parent_a_gf_angular_5_1) >> 10);
  int32_t _tmp546 = (((_tmp544 << 5) + _tmp545) >> 5);
  int32_t _tmp547 = ((r_169_actInv3_5_1_2 * parent_a_gf_angular_5_2) >> 14);
  int32_t r_172_actInv5_5_1 = (((_tmp546 << 1) + _tmp547) >> 2);
  int32_t _tmp548 = ((r_169_actInv3_5_2_0 * parent_a_gf_angular_5_0) >> 10);
  int32_t _tmp549 = ((r_169_actInv3_5_2_1 * parent_a_gf_angular_5_1) >> 14);
  int32_t _tmp550 = ((_tmp548 + (_tmp549 << 5)) >> 5);
  int32_t _tmp551 = ((r_169_actInv3_5_2_2 * parent_a_gf_angular_5_2) >> 11);
  int32_t r_172_actInv5_5_2 = (((_tmp550 << 5) + _tmp551) >> 5);
  int32_t r_173_act_inv_angular_5_0 = ((new_a_gf2_angular_5_0 + (r_172_actInv5_5_0 << 2)) >> 2);
  int32_t r_173_act_inv_angular_5_1 = ((new_a_gf2_angular_5_1 + (r_172_actInv5_5_1 << 2)) >> 2);
  int32_t r_173_act_inv_angular_5_2 = ((new_a_gf2_angular_5_2 + (r_172_actInv5_5_2 << 4)) >> 4);
  int32_t new_a_gf_up3_5_0 = r_171_act_inv_linear_5_0;
  int32_t new_a_gf_up3_5_1 = r_171_act_inv_linear_5_1;
  int32_t new_a_gf_up3_5_2 = r_171_act_inv_linear_5_2;
  int32_t new_a_gf_up3_5_3 = r_173_act_inv_angular_5_0;
  int32_t new_a_gf_up3_5_4 = r_173_act_inv_angular_5_1;
  int32_t new_a_gf_up3_5_5 = r_173_act_inv_angular_5_2;
  int32_t _tmp552 = ((lever_5_0 * act_inv_angular_5_1) >> 11);
  int32_t _tmp553 = ((lever_5_1 * act_inv_angular_5_0) >> 11);
  int32_t h_linear_1_5_0 = (_tmp552 - _tmp553);
  int32_t _tmp554 = ((lever_5_2 * act_inv_angular_5_0) >> 11);
  int32_t _tmp555 = ((lever_5_0 * act_inv_angular_5_2) >> 11);
  int32_t h_linear_1_5_1 = (_tmp554 - _tmp555);
  int32_t _tmp556 = ((lever_5_0 * act_inv_angular_5_1) >> 11);
  int32_t _tmp557 = ((lever_5_1 * act_inv_angular_5_0) >> 11);
  int32_t h_linear_1_5_2 = (_tmp556 - _tmp557);
  int32_t h_linear_2_5_0 = (((act_inv_linear_5_0 << 3) - h_linear_1_5_0) >> 3);
  int32_t h_linear_2_5_1 = (((act_inv_linear_5_1 << 3) - h_linear_1_5_1) >> 3);
  int32_t h_linear_2_5_2 = (((act_inv_linear_5_2 << 3) - h_linear_1_5_2) >> 3);
  int32_t h_linear_5_0 = ((masses_5 * h_linear_2_5_0) >> 15);
  int32_t h_linear_5_1 = ((masses_5 * h_linear_2_5_1) >> 15);
  int32_t h_linear_5_2 = ((masses_5 * h_linear_2_5_2) >> 15);
  int32_t r_174_ = ((inertia_5_0_0 * act_inv_angular_5_0) >> 11);
  int32_t r_175_ = ((inertia_5_0_1 * act_inv_angular_5_1) >> 11);
  int32_t r_176_ = ((inertia_5_0_2 * act_inv_angular_5_2) >> 11);
  int32_t r_177_ = ((inertia_5_0_1 * act_inv_angular_5_0) >> 11);
  int32_t r_178_ = ((inertia_5_1_1 * act_inv_angular_5_1) >> 11);
  int32_t r_179_ = ((inertia_5_1_2 * act_inv_angular_5_2) >> 11);
  int32_t r_180_ = ((inertia_5_0_2 * act_inv_angular_5_0) >> 11);
  int32_t r_181_ = ((inertia_5_1_2 * act_inv_angular_5_1) >> 11);
  int32_t r_182_ = ((inertia_5_2_2 * act_inv_angular_5_2) >> 11);
  int32_t rhsMult1_temp_5 = (r_174_ + r_175_);
  int32_t rhsMult1_5 = (rhsMult1_temp_5 + r_176_);
  int32_t rhsMult2_temp_5 = (r_177_ + r_178_);
  int32_t rhsMult2_5 = (rhsMult2_temp_5 + r_179_);
  int32_t rhsMult3_temp_5 = (r_180_ + r_181_);
  int32_t rhsMult3_5 = (rhsMult3_temp_5 + r_182_);
  int32_t rhsMult_5_0 = rhsMult1_5;
  int32_t rhsMult_5_1 = rhsMult2_5;
  int32_t rhsMult_5_2 = rhsMult3_5;
  int32_t h_angular_first_5_0 = rhsMult_5_0;
  int32_t h_angular_first_5_1 = rhsMult_5_1;
  int32_t h_angular_first_5_2 = rhsMult_5_2;
  int32_t _tmp558 = ((lever_5_0 * h_linear_5_1) >> 11);
  int32_t _tmp559 = ((lever_5_1 * h_linear_5_0) >> 11);
  int32_t h_angular_1_5_0 = (_tmp558 - _tmp559);
  int32_t _tmp560 = ((lever_5_2 * h_linear_5_0) >> 11);
  int32_t _tmp561 = ((lever_5_0 * h_linear_5_2) >> 11);
  int32_t h_angular_1_5_1 = (_tmp560 - _tmp561);
  int32_t _tmp562 = ((lever_5_0 * h_linear_5_1) >> 11);
  int32_t _tmp563 = ((lever_5_1 * h_linear_5_0) >> 11);
  int32_t h_angular_1_5_2 = (_tmp562 - _tmp563);
  int32_t h_angular_5_0 = (h_angular_first_5_0 + h_angular_1_5_0);
  int32_t h_angular_5_1 = (h_angular_first_5_1 + h_angular_1_5_1);
  int32_t h_angular_5_2 = (h_angular_first_5_2 + h_angular_1_5_2);
  int32_t _tmp564 = ((lever_5_0 * r_173_act_inv_angular_5_1) >> 11);
  int32_t _tmp565 = ((lever_5_1 * r_173_act_inv_angular_5_0) >> 9);
  int32_t f_linear_1_5_0 = (((_tmp564 << 2) - _tmp565) >> 2);
  int32_t _tmp566 = ((lever_5_2 * r_173_act_inv_angular_5_0) >> 9);
  int32_t _tmp567 = ((lever_5_0 * r_173_act_inv_angular_5_2) >> 11);
  int32_t f_linear_1_5_1 = ((_tmp566 - (_tmp567 << 1)) >> 2);
  int32_t _tmp568 = ((lever_5_0 * r_173_act_inv_angular_5_1) >> 11);
  int32_t _tmp569 = ((lever_5_1 * r_173_act_inv_angular_5_0) >> 9);
  int32_t f_linear_1_5_2 = (((_tmp568 << 2) - _tmp569) >> 2);
  int32_t f_linear_2_5_0 = (((r_171_act_inv_linear_5_0 << 5) - f_linear_1_5_0) >> 5);
  int32_t f_linear_2_5_1 = (((r_171_act_inv_linear_5_1 << 5) - f_linear_1_5_1) >> 5);
  int32_t f_linear_2_5_2 = (((r_171_act_inv_linear_5_2 << 4) - f_linear_1_5_2) >> 4);
  int32_t f_linear_3_5_0 = ((masses_5 * f_linear_2_5_0) >> 15);
  int32_t f_linear_3_5_1 = ((masses_5 * f_linear_2_5_1) >> 15);
  int32_t f_linear_3_5_2 = ((masses_5 * f_linear_2_5_2) >> 15);
  int32_t r_183_ = ((inertia_5_0_0 * r_173_act_inv_angular_5_0) >> 9);
  int32_t r_184_ = ((inertia_5_0_1 * r_173_act_inv_angular_5_1) >> 9);
  int32_t r_185_ = ((inertia_5_0_2 * r_173_act_inv_angular_5_2) >> 10);
  int32_t r_186_ = ((inertia_5_0_1 * r_173_act_inv_angular_5_0) >> 9);
  int32_t r_187_ = ((inertia_5_1_1 * r_173_act_inv_angular_5_1) >> 9);
  int32_t r_188_ = ((inertia_5_1_2 * r_173_act_inv_angular_5_2) >> 10);
  int32_t r_189_ = ((inertia_5_0_2 * r_173_act_inv_angular_5_0) >> 9);
  int32_t r_190_ = ((inertia_5_1_2 * r_173_act_inv_angular_5_1) >> 9);
  int32_t r_191_ = ((inertia_5_2_2 * r_173_act_inv_angular_5_2) >> 10);
  int32_t r_192_rhsMult1_temp_5 = (r_183_ + r_184_);
  int32_t r_193_rhsMult1_5 = (r_192_rhsMult1_temp_5 + r_185_);
  int32_t r_194_rhsMult2_temp_5 = (r_186_ + r_187_);
  int32_t r_195_rhsMult2_5 = (r_194_rhsMult2_temp_5 + r_188_);
  int32_t r_196_rhsMult3_temp_5 = (r_189_ + r_190_);
  int32_t r_197_rhsMult3_5 = (r_196_rhsMult3_temp_5 + r_191_);
  int32_t r_198_rhsMult_5_0 = r_193_rhsMult1_5;
  int32_t r_198_rhsMult_5_1 = r_195_rhsMult2_5;
  int32_t r_198_rhsMult_5_2 = r_197_rhsMult3_5;
  int32_t f_angular_first_5_0 = r_198_rhsMult_5_0;
  int32_t f_angular_first_5_1 = r_198_rhsMult_5_1;
  int32_t f_angular_first_5_2 = r_198_rhsMult_5_2;
  int32_t _tmp570 = ((lever_5_0 * f_linear_3_5_1) >> 11);
  int32_t _tmp571 = ((lever_5_1 * f_linear_3_5_0) >> 9);
  int32_t f_angular_1_5_0 = (((_tmp570 << 2) - _tmp571) >> 2);
  int32_t _tmp572 = ((lever_5_2 * f_linear_3_5_0) >> 8);
  int32_t _tmp573 = ((lever_5_0 * f_linear_3_5_2) >> 11);
  int32_t f_angular_1_5_1 = ((_tmp572 - (_tmp573 << 2)) >> 2);
  int32_t _tmp574 = ((lever_5_0 * f_linear_3_5_1) >> 11);
  int32_t _tmp575 = ((lever_5_1 * f_linear_3_5_0) >> 9);
  int32_t f_angular_1_5_2 = (((_tmp574 << 2) - _tmp575) >> 2);
  int32_t f_angular_2_5_0 = ((f_angular_first_5_0 + (f_angular_1_5_0 << 4)) >> 4);
  int32_t f_angular_2_5_1 = ((f_angular_first_5_1 + (f_angular_1_5_1 << 3)) >> 3);
  int32_t f_angular_2_5_2 = ((f_angular_first_5_2 + (f_angular_1_5_2 << 4)) >> 4);
  int32_t _tmp576 = ((act_inv_angular_5_0 * h_linear_5_1) >> 15);
  int32_t _tmp577 = ((act_inv_angular_5_1 * h_linear_5_0) >> 15);
  int32_t f_linear_4_temp_5_0 = ((_tmp576 - _tmp577) >> 1);
  int32_t _tmp578 = ((act_inv_angular_5_2 * h_linear_5_0) >> 14);
  int32_t _tmp579 = ((act_inv_angular_5_0 * h_linear_5_2) >> 15);
  int32_t f_linear_4_temp_5_1 = ((_tmp578 - (_tmp579 << 1)) >> 1);
  int32_t _tmp580 = ((act_inv_angular_5_0 * h_linear_5_1) >> 15);
  int32_t _tmp581 = ((act_inv_angular_5_1 * h_linear_5_0) >> 15);
  int32_t f_linear_4_temp_5_2 = ((_tmp580 - _tmp581) >> 1);
  int32_t f_linear_4_5_0 = ((f_linear_3_5_0 + (f_linear_4_temp_5_0 << 1)) >> 1);
  int32_t f_linear_4_5_1 = ((f_linear_3_5_1 + f_linear_4_temp_5_1) >> 1);
  int32_t f_linear_4_5_2 = ((f_linear_3_5_2 + (f_linear_4_temp_5_2 << 2)) >> 2);
  int32_t _tmp582 = ((act_inv_angular_5_0 * h_angular_first_5_1) >> 11);
  int32_t _tmp583 = ((act_inv_angular_5_1 * h_angular_first_5_0) >> 11);
  int32_t f_angular_3_temp_5_0 = ((_tmp582 - _tmp583) >> 1);
  int32_t _tmp584 = ((act_inv_angular_5_2 * h_angular_first_5_0) >> 11);
  int32_t _tmp585 = ((act_inv_angular_5_0 * h_angular_first_5_2) >> 11);
  int32_t f_angular_3_temp_5_1 = ((_tmp584 - _tmp585) >> 1);
  int32_t _tmp586 = ((act_inv_angular_5_0 * h_angular_first_5_1) >> 11);
  int32_t _tmp587 = ((act_inv_angular_5_1 * h_angular_first_5_0) >> 11);
  int32_t f_angular_3_temp_5_2 = ((_tmp586 - _tmp587) >> 1);
  int32_t f_angular_3_5_0 = (((f_angular_2_5_0 << 3) + f_angular_3_temp_5_0) >> 3);
  int32_t f_angular_3_5_1 = (((f_angular_2_5_1 << 2) + f_angular_3_temp_5_1) >> 3);
  int32_t f_angular_3_5_2 = (((f_angular_2_5_2 << 3) + f_angular_3_temp_5_2) >> 3);
  int32_t _tmp588 = ((act_inv_linear_5_0 * h_linear_5_1) >> 15);
  int32_t _tmp589 = ((act_inv_linear_5_1 * h_linear_5_0) >> 15);
  int32_t f_angular_4_temp_5_0 = ((_tmp588 - _tmp589) >> 1);
  int32_t _tmp590 = ((act_inv_linear_5_2 * h_linear_5_0) >> 15);
  int32_t _tmp591 = ((act_inv_linear_5_0 * h_linear_5_2) >> 15);
  int32_t f_angular_4_temp_5_1 = ((_tmp590 - _tmp591) >> 1);
  int32_t _tmp592 = ((act_inv_linear_5_0 * h_linear_5_1) >> 15);
  int32_t _tmp593 = ((act_inv_linear_5_1 * h_linear_5_0) >> 15);
  int32_t f_angular_4_temp_5_2 = ((_tmp592 - _tmp593) >> 1);
  int32_t f_angular_4_5_0 = ((f_angular_3_5_0 + (f_angular_4_temp_5_0 << 4)) >> 4);
  int32_t f_angular_4_5_1 = ((f_angular_3_5_1 + (f_angular_4_temp_5_1 << 4)) >> 4);
  int32_t f_angular_4_5_2 = ((f_angular_3_5_2 + (f_angular_4_temp_5_2 << 4)) >> 4);
  int32_t h_rnea_firstpass5_0 = h_linear_5_0;
  int32_t h_rnea_firstpass5_1 = h_linear_5_1;
  int32_t h_rnea_firstpass5_2 = h_linear_5_2;
  int32_t h_rnea_firstpass5_3 = h_angular_5_0;
  int32_t h_rnea_firstpass5_4 = h_angular_5_1;
  int32_t h_rnea_firstpass5_5 = h_angular_5_2;
  int32_t f_rnea_firstpass5_0 = f_linear_4_5_0;
  int32_t f_rnea_firstpass5_1 = f_linear_4_5_1;
  int32_t f_rnea_firstpass5_2 = f_linear_4_5_2;
  int32_t f_rnea_firstpass5_3 = f_angular_4_5_0;
  int32_t f_rnea_firstpass5_4 = f_angular_4_5_1;
  int32_t f_rnea_firstpass5_5 = f_angular_4_5_2;
  int32_t r_199_new_v_5_0 = act_inv_linear_5_0;
  int32_t r_199_new_v_5_1 = act_inv_linear_5_1;
  int32_t r_199_new_v_5_2 = act_inv_linear_5_2;
  int32_t r_199_new_v_5_3 = act_inv_angular_5_0;
  int32_t r_199_new_v_5_4 = act_inv_angular_5_1;
  int32_t r_199_new_v_5_5 = act_inv_angular_5_2;
  int32_t data_tau_temp_5 = f_rnea_firstpass5_5;
  int32_t f_linear_5_0 = f_rnea_firstpass5_0;
  int32_t f_linear_5_1 = f_rnea_firstpass5_1;
  int32_t f_linear_5_2 = f_rnea_firstpass5_2;
  int32_t f_angular_5_0 = f_rnea_firstpass5_3;
  int32_t f_angular_5_1 = f_rnea_firstpass5_4;
  int32_t f_angular_5_2 = f_rnea_firstpass5_5;
  int32_t _tmp594 = ((limi_rotation_5_0_0 * f_linear_5_0) >> 14);
  int32_t _tmp595 = ((limi_rotation_5_0_1 * f_linear_5_1) >> 14);
  int32_t _tmp596 = ((_tmp594 + _tmp595) >> 1);
  int32_t _tmp597 = ((limi_rotation_5_0_2 * f_linear_5_2) >> 6);
  int32_t new_f_linear_5_0 = (((_tmp596 << 10) + _tmp597) >> 10);
  int32_t _tmp598 = ((limi_rotation_5_1_0 * f_linear_5_0) >> 6);
  int32_t _tmp599 = ((limi_rotation_5_1_1 * f_linear_5_1) >> 6);
  int32_t _tmp600 = (_tmp598 + _tmp599);
  int32_t _tmp601 = ((limi_rotation_5_1_2 * f_linear_5_2) >> 14);
  int32_t new_f_linear_5_1 = ((_tmp600 + (_tmp601 << 9)) >> 9);
  int32_t _tmp602 = ((limi_rotation_5_2_0 * f_linear_5_0) >> 14);
  int32_t _tmp603 = ((limi_rotation_5_2_1 * f_linear_5_1) >> 14);
  int32_t _tmp604 = ((_tmp602 + _tmp603) >> 1);
  int32_t _tmp605 = ((limi_rotation_5_2_2 * f_linear_5_2) >> 6);
  int32_t new_f_linear_5_2 = (((_tmp604 << 10) + _tmp605) >> 10);
  int32_t _tmp606 = ((limi_rotation_5_0_0 * f_angular_5_0) >> 14);
  int32_t _tmp607 = ((limi_rotation_5_0_1 * f_angular_5_1) >> 14);
  int32_t _tmp608 = ((_tmp606 + _tmp607) >> 1);
  int32_t _tmp609 = ((limi_rotation_5_0_2 * f_angular_5_2) >> 7);
  int32_t new_f_angular_temp_5_0 = (((_tmp608 << 9) + _tmp609) >> 9);
  int32_t _tmp610 = ((limi_rotation_5_1_0 * f_angular_5_0) >> 7);
  int32_t _tmp611 = ((limi_rotation_5_1_1 * f_angular_5_1) >> 7);
  int32_t _tmp612 = (_tmp610 + _tmp611);
  int32_t _tmp613 = ((limi_rotation_5_1_2 * f_angular_5_2) >> 14);
  int32_t new_f_angular_temp_5_1 = ((_tmp612 + (_tmp613 << 8)) >> 8);
  int32_t _tmp614 = ((limi_rotation_5_2_0 * f_angular_5_0) >> 14);
  int32_t _tmp615 = ((limi_rotation_5_2_1 * f_angular_5_1) >> 14);
  int32_t _tmp616 = ((_tmp614 + _tmp615) >> 1);
  int32_t _tmp617 = ((limi_rotation_5_2_2 * f_angular_5_2) >> 7);
  int32_t new_f_angular_temp_5_2 = (((_tmp616 << 9) + _tmp617) >> 9);
  int32_t _tmp618 = ((limi_translation_5_0 * new_f_linear_5_1) >> 6);
  int32_t _tmp619 = ((limi_translation_5_1 * new_f_linear_5_0) >> 5);
  int32_t f_angular_cross_5_0 = (_tmp618 - _tmp619);
  int32_t _tmp620 = ((limi_translation_5_2 * new_f_linear_5_0) >> 5);
  int32_t _tmp621 = ((limi_translation_5_0 * new_f_linear_5_2) >> 5);
  int32_t f_angular_cross_5_1 = (_tmp620 - _tmp621);
  int32_t _tmp622 = ((limi_translation_5_0 * new_f_linear_5_1) >> 6);
  int32_t _tmp623 = ((limi_translation_5_1 * new_f_linear_5_0) >> 5);
  int32_t f_angular_cross_5_2 = (_tmp622 - _tmp623);
  int32_t new_f_angular_5_0 = (((new_f_angular_temp_5_0 << 9) + f_angular_cross_5_0) >> 9);
  int32_t new_f_angular_5_1 = (((new_f_angular_temp_5_1 << 8) + f_angular_cross_5_1) >> 8);
  int32_t new_f_angular_5_2 = (((new_f_angular_temp_5_2 << 9) + f_angular_cross_5_2) >> 9);
  int32_t r_200_new_f_5_0 = new_f_linear_5_0;
  int32_t r_200_new_f_5_1 = new_f_linear_5_1;
  int32_t r_200_new_f_5_2 = new_f_linear_5_2;
  int32_t r_200_new_f_5_3 = new_f_angular_5_0;
  int32_t r_200_new_f_5_4 = new_f_angular_5_1;
  int32_t r_200_new_f_5_5 = new_f_angular_5_2;
  int32_t new_data_f_parent_5_0 = ((f_rnea_firstpass4_0 + (r_200_new_f_5_0 << 2)) >> 2);
  int32_t new_data_f_parent_5_1 = ((f_rnea_firstpass4_1 + (r_200_new_f_5_1 << 2)) >> 2);
  int32_t new_data_f_parent_5_2 = ((f_rnea_firstpass4_2 + (r_200_new_f_5_2 << 2)) >> 2);
  int32_t new_data_f_parent_5_3 = ((f_rnea_firstpass4_3 + (r_200_new_f_5_3 << 2)) >> 2);
  int32_t new_data_f_parent_5_4 = ((f_rnea_firstpass4_4 + (r_200_new_f_5_4 << 3)) >> 3);
  int32_t new_data_f_parent_5_5 = ((f_rnea_firstpass4_5 + (r_200_new_f_5_5 << 2)) >> 2);
  int32_t data_tau_temp_4 = new_data_f_parent_5_5;
  int32_t f_linear_4_0 = new_data_f_parent_5_0;
  int32_t f_linear_4_1 = new_data_f_parent_5_1;
  int32_t f_linear_4_2 = new_data_f_parent_5_2;
  int32_t f_angular_4_0 = new_data_f_parent_5_3;
  int32_t f_angular_4_1 = new_data_f_parent_5_4;
  int32_t f_angular_4_2 = new_data_f_parent_5_5;
  int32_t _tmp624 = ((limi_rotation_4_0_0 * f_linear_4_0) >> 14);
  int32_t _tmp625 = ((limi_rotation_4_0_1 * f_linear_4_1) >> 14);
  int32_t _tmp626 = (((_tmp624 << 1) + _tmp625) >> 2);
  int32_t _tmp627 = ((limi_rotation_4_0_2 * f_linear_4_2) >> 5);
  int32_t new_f_linear_4_0 = (((_tmp626 << 11) + _tmp627) >> 11);
  int32_t _tmp628 = ((limi_rotation_4_1_0 * f_linear_4_0) >> 5);
  int32_t _tmp629 = ((limi_rotation_4_1_1 * f_linear_4_1) >> 6);
  int32_t _tmp630 = (_tmp628 + _tmp629);
  int32_t _tmp631 = ((limi_rotation_4_1_2 * f_linear_4_2) >> 14);
  int32_t new_f_linear_4_1 = ((_tmp630 + (_tmp631 << 10)) >> 10);
  int32_t _tmp632 = ((limi_rotation_4_2_0 * f_linear_4_0) >> 14);
  int32_t _tmp633 = ((limi_rotation_4_2_1 * f_linear_4_1) >> 14);
  int32_t _tmp634 = (((_tmp632 << 1) + _tmp633) >> 2);
  int32_t _tmp635 = ((limi_rotation_4_2_2 * f_linear_4_2) >> 5);
  int32_t new_f_linear_4_2 = (((_tmp634 << 11) + _tmp635) >> 11);
  int32_t _tmp636 = ((limi_rotation_4_0_0 * f_angular_4_0) >> 14);
  int32_t _tmp637 = ((limi_rotation_4_0_1 * f_angular_4_1) >> 14);
  int32_t _tmp638 = (((_tmp636 << 1) + _tmp637) >> 2);
  int32_t _tmp639 = ((limi_rotation_4_0_2 * f_angular_4_2) >> 6);
  int32_t new_f_angular_temp_4_0 = (((_tmp638 << 10) + _tmp639) >> 10);
  int32_t _tmp640 = ((limi_rotation_4_1_0 * f_angular_4_0) >> 6);
  int32_t _tmp641 = ((limi_rotation_4_1_1 * f_angular_4_1) >> 7);
  int32_t _tmp642 = (_tmp640 + _tmp641);
  int32_t _tmp643 = ((limi_rotation_4_1_2 * f_angular_4_2) >> 14);
  int32_t new_f_angular_temp_4_1 = ((_tmp642 + (_tmp643 << 9)) >> 9);
  int32_t _tmp644 = ((limi_rotation_4_2_0 * f_angular_4_0) >> 14);
  int32_t _tmp645 = ((limi_rotation_4_2_1 * f_angular_4_1) >> 14);
  int32_t _tmp646 = (((_tmp644 << 1) + _tmp645) >> 2);
  int32_t _tmp647 = ((limi_rotation_4_2_2 * f_angular_4_2) >> 6);
  int32_t new_f_angular_temp_4_2 = (((_tmp646 << 10) + _tmp647) >> 10);
  int32_t _tmp648 = ((limi_translation_4_0 * new_f_linear_4_1) >> 12);
  int32_t _tmp649 = ((limi_translation_4_1 * new_f_linear_4_0) >> 14);
  int32_t f_angular_cross_4_0 = ((_tmp648 - (_tmp649 << 3)) >> 3);
  int32_t _tmp650 = ((limi_translation_4_2 * new_f_linear_4_0) >> 4);
  int32_t _tmp651 = ((limi_translation_4_0 * new_f_linear_4_2) >> 11);
  int32_t f_angular_cross_4_1 = ((_tmp650 - (_tmp651 << 7)) >> 7);
  int32_t _tmp652 = ((limi_translation_4_0 * new_f_linear_4_1) >> 12);
  int32_t _tmp653 = ((limi_translation_4_1 * new_f_linear_4_0) >> 14);
  int32_t f_angular_cross_4_2 = ((_tmp652 - (_tmp653 << 3)) >> 3);
  int32_t new_f_angular_4_0 = ((new_f_angular_temp_4_0 + f_angular_cross_4_0) >> 1);
  int32_t new_f_angular_4_1 = (((new_f_angular_temp_4_1 << 2) + f_angular_cross_4_1) >> 3);
  int32_t new_f_angular_4_2 = ((new_f_angular_temp_4_2 + f_angular_cross_4_2) >> 1);
  int32_t r_201_new_f_4_0 = new_f_linear_4_0;
  int32_t r_201_new_f_4_1 = new_f_linear_4_1;
  int32_t r_201_new_f_4_2 = new_f_linear_4_2;
  int32_t r_201_new_f_4_3 = new_f_angular_4_0;
  int32_t r_201_new_f_4_4 = new_f_angular_4_1;
  int32_t r_201_new_f_4_5 = new_f_angular_4_2;
  int32_t new_data_f_parent_4_0 = ((f_rnea_firstpass3_0 + (r_201_new_f_4_0 << 3)) >> 3);
  int32_t new_data_f_parent_4_1 = ((f_rnea_firstpass3_1 + (r_201_new_f_4_1 << 3)) >> 4);
  int32_t new_data_f_parent_4_2 = ((f_rnea_firstpass3_2 + (r_201_new_f_4_2 << 4)) >> 4);
  int32_t new_data_f_parent_4_3 = ((f_rnea_firstpass3_3 + (r_201_new_f_4_3 << 6)) >> 6);
  int32_t new_data_f_parent_4_4 = ((f_rnea_firstpass3_4 + (r_201_new_f_4_4 << 6)) >> 6);
  int32_t new_data_f_parent_4_5 = ((f_rnea_firstpass3_5 + (r_201_new_f_4_5 << 6)) >> 6);
  int32_t data_tau_temp_3 = new_data_f_parent_4_5;
  int32_t f_linear_3_0 = new_data_f_parent_4_0;
  int32_t f_linear_3_1 = new_data_f_parent_4_1;
  int32_t f_linear_3_2 = new_data_f_parent_4_2;
  int32_t f_angular_3_0 = new_data_f_parent_4_3;
  int32_t f_angular_3_1 = new_data_f_parent_4_4;
  int32_t f_angular_3_2 = new_data_f_parent_4_5;
  int32_t _tmp654 = ((limi_rotation_3_0_0 * f_linear_3_0) >> 14);
  int32_t _tmp655 = ((limi_rotation_3_0_1 * f_linear_3_1) >> 14);
  int32_t _tmp656 = ((_tmp654 + _tmp655) >> 1);
  int32_t _tmp657 = ((limi_rotation_3_0_2 * f_linear_3_2) >> 4);
  int32_t new_f_linear_3_0 = (((_tmp656 << 12) + _tmp657) >> 12);
  int32_t _tmp658 = ((limi_rotation_3_1_0 * f_linear_3_0) >> 4);
  int32_t _tmp659 = ((limi_rotation_3_1_1 * f_linear_3_1) >> 4);
  int32_t _tmp660 = (_tmp658 + _tmp659);
  int32_t _tmp661 = ((limi_rotation_3_1_2 * f_linear_3_2) >> 14);
  int32_t new_f_linear_3_1 = ((_tmp660 + (_tmp661 << 11)) >> 11);
  int32_t _tmp662 = ((limi_rotation_3_2_0 * f_linear_3_0) >> 14);
  int32_t _tmp663 = ((limi_rotation_3_2_1 * f_linear_3_1) >> 14);
  int32_t _tmp664 = ((_tmp662 + _tmp663) >> 1);
  int32_t _tmp665 = ((limi_rotation_3_2_2 * f_linear_3_2) >> 4);
  int32_t new_f_linear_3_2 = (((_tmp664 << 12) + _tmp665) >> 12);
  int32_t _tmp666 = ((limi_rotation_3_0_0 * f_angular_3_0) >> 14);
  int32_t _tmp667 = ((limi_rotation_3_0_1 * f_angular_3_1) >> 14);
  int32_t _tmp668 = (((_tmp666 << 1) + _tmp667) >> 1);
  int32_t _tmp669 = ((limi_rotation_3_0_2 * f_angular_3_2) >> 4);
  int32_t new_f_angular_temp_3_0 = (((_tmp668 << 11) + _tmp669) >> 11);
  int32_t _tmp670 = ((limi_rotation_3_1_0 * f_angular_3_0) >> 4);
  int32_t _tmp671 = ((limi_rotation_3_1_1 * f_angular_3_1) >> 5);
  int32_t _tmp672 = (_tmp670 + _tmp671);
  int32_t _tmp673 = ((limi_rotation_3_1_2 * f_angular_3_2) >> 14);
  int32_t new_f_angular_temp_3_1 = ((_tmp672 + (_tmp673 << 11)) >> 11);
  int32_t _tmp674 = ((limi_rotation_3_2_0 * f_angular_3_0) >> 14);
  int32_t _tmp675 = ((limi_rotation_3_2_1 * f_angular_3_1) >> 14);
  int32_t _tmp676 = (((_tmp674 << 1) + _tmp675) >> 1);
  int32_t _tmp677 = ((limi_rotation_3_2_2 * f_angular_3_2) >> 4);
  int32_t new_f_angular_temp_3_2 = (((_tmp676 << 11) + _tmp677) >> 11);
  int32_t _tmp678 = ((limi_translation_3_0 * new_f_linear_3_1) >> 12);
  int32_t _tmp679 = ((limi_translation_3_1 * new_f_linear_3_0) >> 3);
  int32_t f_angular_cross_3_0 = (((_tmp678 << 8) - _tmp679) >> 8);
  int32_t _tmp680 = ((limi_translation_3_2 * new_f_linear_3_0) >> 3);
  int32_t _tmp681 = ((limi_translation_3_0 * new_f_linear_3_2) >> 11);
  int32_t f_angular_cross_3_1 = ((_tmp680 - (_tmp681 << 8)) >> 8);
  int32_t _tmp682 = ((limi_translation_3_0 * new_f_linear_3_1) >> 12);
  int32_t _tmp683 = ((limi_translation_3_1 * new_f_linear_3_0) >> 3);
  int32_t f_angular_cross_3_2 = (((_tmp682 << 8) - _tmp683) >> 8);
  int32_t new_f_angular_3_0 = (((new_f_angular_temp_3_0 << 3) + f_angular_cross_3_0) >> 3);
  int32_t new_f_angular_3_1 = (((new_f_angular_temp_3_1 << 3) + f_angular_cross_3_1) >> 3);
  int32_t new_f_angular_3_2 = (((new_f_angular_temp_3_2 << 3) + f_angular_cross_3_2) >> 3);
  int32_t r_202_new_f_3_0 = new_f_linear_3_0;
  int32_t r_202_new_f_3_1 = new_f_linear_3_1;
  int32_t r_202_new_f_3_2 = new_f_linear_3_2;
  int32_t r_202_new_f_3_3 = new_f_angular_3_0;
  int32_t r_202_new_f_3_4 = new_f_angular_3_1;
  int32_t r_202_new_f_3_5 = new_f_angular_3_2;
  int32_t new_data_f_parent_3_0 = ((f_rnea_firstpass2_0 + (r_202_new_f_3_0 << 6)) >> 6);
  int32_t new_data_f_parent_3_1 = ((f_rnea_firstpass2_1 + (r_202_new_f_3_1 << 5)) >> 5);
  int32_t new_data_f_parent_3_2 = ((f_rnea_firstpass2_2 + (r_202_new_f_3_2 << 6)) >> 6);
  int32_t new_data_f_parent_3_3 = ((f_rnea_firstpass2_3 + (r_202_new_f_3_3 << 8)) >> 8);
  int32_t new_data_f_parent_3_4 = ((f_rnea_firstpass2_4 + (r_202_new_f_3_4 << 8)) >> 8);
  int32_t new_data_f_parent_3_5 = ((f_rnea_firstpass2_5 + (r_202_new_f_3_5 << 8)) >> 8);
  int32_t data_tau_temp_2 = new_data_f_parent_3_5;
  int32_t f_linear_2_0 = new_data_f_parent_3_0;
  int32_t f_linear_2_1 = new_data_f_parent_3_1;
  int32_t f_linear_2_2 = new_data_f_parent_3_2;
  int32_t f_angular_2_0 = new_data_f_parent_3_3;
  int32_t f_angular_2_1 = new_data_f_parent_3_4;
  int32_t f_angular_2_2 = new_data_f_parent_3_5;
  int32_t _tmp684 = ((limi_rotation_2_0_0 * f_linear_2_0) >> 14);
  int32_t _tmp685 = ((limi_rotation_2_0_1 * f_linear_2_1) >> 14);
  int32_t _tmp686 = (((_tmp684 << 1) + _tmp685) >> 2);
  int32_t _tmp687 = ((limi_rotation_2_0_2 * f_linear_2_2) >> 3);
  int32_t new_f_linear_2_0 = (((_tmp686 << 13) + _tmp687) >> 13);
  int32_t _tmp688 = ((limi_rotation_2_1_0 * f_linear_2_0) >> 3);
  int32_t _tmp689 = ((limi_rotation_2_1_1 * f_linear_2_1) >> 4);
  int32_t _tmp690 = (_tmp688 + _tmp689);
  int32_t _tmp691 = ((limi_rotation_2_1_2 * f_linear_2_2) >> 14);
  int32_t new_f_linear_2_1 = ((_tmp690 + (_tmp691 << 12)) >> 12);
  int32_t _tmp692 = ((limi_rotation_2_2_0 * f_linear_2_0) >> 14);
  int32_t _tmp693 = ((limi_rotation_2_2_1 * f_linear_2_1) >> 14);
  int32_t _tmp694 = (((_tmp692 << 1) + _tmp693) >> 2);
  int32_t _tmp695 = ((limi_rotation_2_2_2 * f_linear_2_2) >> 3);
  int32_t new_f_linear_2_2 = (((_tmp694 << 13) + _tmp695) >> 13);
  int32_t _tmp696 = ((limi_rotation_2_0_0 * f_angular_2_0) >> 14);
  int32_t _tmp697 = ((limi_rotation_2_0_1 * f_angular_2_1) >> 14);
  int32_t _tmp698 = ((_tmp696 + _tmp697) >> 1);
  int32_t _tmp699 = ((limi_rotation_2_0_2 * f_angular_2_2) >> 4);
  int32_t new_f_angular_temp_2_0 = (((_tmp698 << 12) + _tmp699) >> 12);
  int32_t _tmp700 = ((limi_rotation_2_1_0 * f_angular_2_0) >> 4);
  int32_t _tmp701 = ((limi_rotation_2_1_1 * f_angular_2_1) >> 4);
  int32_t _tmp702 = (_tmp700 + _tmp701);
  int32_t _tmp703 = ((limi_rotation_2_1_2 * f_angular_2_2) >> 14);
  int32_t new_f_angular_temp_2_1 = ((_tmp702 + (_tmp703 << 11)) >> 11);
  int32_t _tmp704 = ((limi_rotation_2_2_0 * f_angular_2_0) >> 14);
  int32_t _tmp705 = ((limi_rotation_2_2_1 * f_angular_2_1) >> 14);
  int32_t _tmp706 = ((_tmp704 + _tmp705) >> 1);
  int32_t _tmp707 = ((limi_rotation_2_2_2 * f_angular_2_2) >> 4);
  int32_t new_f_angular_temp_2_2 = (((_tmp706 << 12) + _tmp707) >> 12);
  int32_t _tmp708 = ((limi_translation_2_0 * new_f_linear_2_1) >> 3);
  int32_t _tmp709 = ((limi_translation_2_1 * new_f_linear_2_0) >> 13);
  int32_t f_angular_cross_2_0 = ((_tmp708 - (_tmp709 << 11)) >> 11);
  int32_t _tmp710 = ((limi_translation_2_2 * new_f_linear_2_0) >> 2);
  int32_t _tmp711 = ((limi_translation_2_0 * new_f_linear_2_2) >> 2);
  int32_t f_angular_cross_2_1 = (_tmp710 - _tmp711);
  int32_t _tmp712 = ((limi_translation_2_0 * new_f_linear_2_1) >> 3);
  int32_t _tmp713 = ((limi_translation_2_1 * new_f_linear_2_0) >> 13);
  int32_t f_angular_cross_2_2 = ((_tmp712 - (_tmp713 << 11)) >> 11);
  int32_t new_f_angular_2_0 = (((new_f_angular_temp_2_0 << 1) + f_angular_cross_2_0) >> 2);
  int32_t new_f_angular_2_1 = (((new_f_angular_temp_2_1 << 11) + f_angular_cross_2_1) >> 11);
  int32_t new_f_angular_2_2 = (((new_f_angular_temp_2_2 << 1) + f_angular_cross_2_2) >> 2);
  int32_t r_203_new_f_2_0 = new_f_linear_2_0;
  int32_t r_203_new_f_2_1 = new_f_linear_2_1;
  int32_t r_203_new_f_2_2 = new_f_linear_2_2;
  int32_t r_203_new_f_2_3 = new_f_angular_2_0;
  int32_t r_203_new_f_2_4 = new_f_angular_2_1;
  int32_t r_203_new_f_2_5 = new_f_angular_2_2;
  int32_t new_data_f_parent_2_0 = ((f_rnea_firstpass1_0 + (r_203_new_f_2_0 << 10)) >> 10);
  int32_t new_data_f_parent_2_1 = ((f_rnea_firstpass1_1 + (r_203_new_f_2_1 << 9)) >> 9);
  int32_t new_data_f_parent_2_2 = ((f_rnea_firstpass1_2 + (r_203_new_f_2_2 << 13)) >> 13);
  int32_t new_data_f_parent_2_3 = ((f_rnea_firstpass1_3 + (r_203_new_f_2_3 << 13)) >> 13);
  int32_t new_data_f_parent_2_4 = ((f_rnea_firstpass1_4 + (r_203_new_f_2_4 << 11)) >> 11);
  int32_t new_data_f_parent_2_5 = ((f_rnea_firstpass1_5 + (r_203_new_f_2_5 << 13)) >> 13);
  int32_t data_tau_temp_1 = new_data_f_parent_2_5;
  int32_t f_linear_1_0 = new_data_f_parent_2_0;
  int32_t f_linear_1_1 = new_data_f_parent_2_1;
  int32_t f_linear_1_2 = new_data_f_parent_2_2;
  int32_t f_angular_1_0 = new_data_f_parent_2_3;
  int32_t f_angular_1_1 = new_data_f_parent_2_4;
  int32_t f_angular_1_2 = new_data_f_parent_2_5;
  int32_t _tmp714 = ((limi_rotation_1_0_0 * f_linear_1_0) >> 14);
  int32_t _tmp715 = ((limi_rotation_1_0_1 * f_linear_1_1) >> 14);
  int32_t _tmp716 = (((_tmp714 << 1) + _tmp715) >> 1);
  int32_t _tmp717 = ((limi_rotation_1_0_2 * f_linear_1_2) >> 2);
  int32_t new_f_linear_1_0 = (((_tmp716 << 13) + _tmp717) >> 13);
  int32_t _tmp718 = ((limi_rotation_1_1_0 * f_linear_1_0) >> 2);
  int32_t _tmp719 = ((limi_rotation_1_1_1 * f_linear_1_1) >> 3);
  int32_t _tmp720 = (_tmp718 + _tmp719);
  int32_t _tmp721 = ((limi_rotation_1_1_2 * f_linear_1_2) >> 14);
  int32_t new_f_linear_1_1 = ((_tmp720 + (_tmp721 << 13)) >> 13);
  int32_t _tmp722 = ((limi_rotation_1_2_0 * f_linear_1_0) >> 14);
  int32_t _tmp723 = ((limi_rotation_1_2_1 * f_linear_1_1) >> 14);
  int32_t _tmp724 = (((_tmp722 << 1) + _tmp723) >> 1);
  int32_t _tmp725 = ((limi_rotation_1_2_2 * f_linear_1_2) >> 2);
  int32_t new_f_linear_1_2 = (((_tmp724 << 13) + _tmp725) >> 13);
  int32_t _tmp726 = ((limi_rotation_1_0_0 * f_angular_1_0) >> 14);
  int32_t _tmp727 = ((limi_rotation_1_0_1 * f_angular_1_1) >> 14);
  int32_t _tmp728 = (((_tmp726 << 2) + _tmp727) >> 2);
  int32_t _tmp729 = ((limi_rotation_1_0_2 * f_angular_1_2) >> 2);
  int32_t new_f_angular_temp_1_0 = (((_tmp728 << 13) + _tmp729) >> 13);
  int32_t _tmp730 = ((limi_rotation_1_1_0 * f_angular_1_0) >> 2);
  int32_t _tmp731 = ((limi_rotation_1_1_1 * f_angular_1_1) >> 4);
  int32_t _tmp732 = (_tmp730 + _tmp731);
  int32_t _tmp733 = ((limi_rotation_1_1_2 * f_angular_1_2) >> 14);
  int32_t new_f_angular_temp_1_1 = ((_tmp732 + (_tmp733 << 13)) >> 13);
  int32_t _tmp734 = ((limi_rotation_1_2_0 * f_angular_1_0) >> 14);
  int32_t _tmp735 = ((limi_rotation_1_2_1 * f_angular_1_1) >> 14);
  int32_t _tmp736 = (((_tmp734 << 2) + _tmp735) >> 2);
  int32_t _tmp737 = ((limi_rotation_1_2_2 * f_angular_1_2) >> 2);
  int32_t new_f_angular_temp_1_2 = (((_tmp736 << 13) + _tmp737) >> 13);
  int32_t _tmp738 = ((limi_translation_1_0 * new_f_linear_1_1) >> 2);
  int32_t _tmp739 = ((limi_translation_1_1 * new_f_linear_1_0) >> 2);
  int32_t f_angular_cross_1_0 = (_tmp738 - _tmp739);
  int32_t _tmp740 = ((limi_translation_1_2 * new_f_linear_1_0) >> 2);
  int32_t _tmp741 = ((limi_translation_1_0 * new_f_linear_1_2) >> 2);
  int32_t f_angular_cross_1_1 = (_tmp740 - _tmp741);
  int32_t _tmp742 = ((limi_translation_1_0 * new_f_linear_1_1) >> 2);
  int32_t _tmp743 = ((limi_translation_1_1 * new_f_linear_1_0) >> 2);
  int32_t f_angular_cross_1_2 = (_tmp742 - _tmp743);
  int32_t new_f_angular_1_0 = (((new_f_angular_temp_1_0 << 13) + f_angular_cross_1_0) >> 13);
  int32_t new_f_angular_1_1 = (((new_f_angular_temp_1_1 << 13) + f_angular_cross_1_1) >> 13);
  int32_t new_f_angular_1_2 = (((new_f_angular_temp_1_2 << 13) + f_angular_cross_1_2) >> 13);
  int32_t r_204_new_f_1_0 = new_f_linear_1_0;
  int32_t r_204_new_f_1_1 = new_f_linear_1_1;
  int32_t r_204_new_f_1_2 = new_f_linear_1_2;
  int32_t r_204_new_f_1_3 = new_f_angular_1_0;
  int32_t r_204_new_f_1_4 = new_f_angular_1_1;
  int32_t r_204_new_f_1_5 = new_f_angular_1_2;
  int32_t new_data_f_parent_1_0 = ((f_rnea_firstpass0_0 + (r_204_new_f_1_0 << 13)) >> 13);
  int32_t new_data_f_parent_1_1 = ((f_rnea_firstpass0_1 + (r_204_new_f_1_1 << 13)) >> 13);
  int32_t new_data_f_parent_1_2 = ((f_rnea_firstpass0_2 + (r_204_new_f_1_2 << 7)) >> 7);
  int32_t new_data_f_parent_1_3 = ((f_rnea_firstpass0_3 + (r_204_new_f_1_3 << 13)) >> 13);
  int32_t new_data_f_parent_1_4 = ((f_rnea_firstpass0_4 + (r_204_new_f_1_4 << 13)) >> 13);
  int32_t new_data_f_parent_1_5 = ((f_rnea_firstpass0_5 + (r_204_new_f_1_5 << 13)) >> 13);
  int32_t data_tau_temp_0 = new_data_f_parent_1_5;
  int32_t data_tau_0 = data_tau_temp_0;
  int32_t data_tau_1 = data_tau_temp_1;
  int32_t data_tau_2 = data_tau_temp_2;
  int32_t data_tau_3 = data_tau_temp_3;
  int32_t data_tau_4 = data_tau_temp_4;
  int32_t data_tau_5 = data_tau_temp_5;


  printf("data_tau_0: %f\n", (double)data_tau_0 / pow(2, 2));
  printf("data_tau_1: %f\n", (double)data_tau_1 / pow(2, 2));
  printf("data_tau_2: %f\n", (double)data_tau_2 / pow(2, 4));
  printf("data_tau_3: %f\n", (double)data_tau_3 / pow(2, 4));
  printf("data_tau_4: %f\n", (double)data_tau_4 / pow(2, 6));
  printf("data_tau_5: %f\n", (double)data_tau_5 / pow(2, 7));
  return data_tau_5;
} // [-178.18239642865956, 178.18239642865956] +/- 1.0812885031573387

int main(){
    // give some random values
    // q =   1.97125 -0.372364   1.64045 -0.674883   2.38533  0.727269
    // v =  -0.329554   0.536459  -0.444451    0.10794 -0.0452059   0.257742
    // a = -0.270431 0.0268018  0.904459   0.83239  0.271423  0.434594 
    std::vector<double> q = {1.97125, -0.372364, 1.64045, -0.674883, 2.38533, 0.727269};
    std::vector<double> v = {-0.329554, 0.536459, -0.444451, 0.10794, -0.0452059, 0.257742};
    std::vector<double> a = {-0.270431, 0.0268018, 0.904459, 0.83239, 0.271423, 0.434594};
    std::vector<double> cos_qpos = {cos(q[0]), cos(q[1]), cos(q[2]), cos(q[3]), cos(q[4]), cos(q[5])};
    std::vector<double> sin_qpos = {sin(q[0]), sin(q[1]), sin(q[2]), sin(q[3]), sin(q[4]), sin(q[5])};

    // ap_fixed<32,2> qcos_0, ap_fixed<32,2> qcos_1, ap_fixed<32,2> qcos_2, ap_fixed<32,2> qcos_3, ap_fixed<32,2> qcos_4, ap_fixed<32,2> qcos_5, 
    // ap_fixed<32,2> qsin_0, ap_fixed<32,2> qsin_1, ap_fixed<32,2> qsin_2, ap_fixed<32,2> qsin_3, ap_fixed<32,2> qsin_4, ap_fixed<32,2> qsin_5, 
    // ap_fixed<32,4> v_0, ap_fixed<32,4> v_1, ap_fixed<32,4> v_2, ap_fixed<32,4> v_3, ap_fixed<32,4> v_4, ap_fixed<32,4> v_5, 
    // ap_fixed<32,4> a_0, ap_fixed<32,4> a_1, ap_fixed<32,4> a_2, ap_fixed<32,4> a_3, ap_fixed<32,4> a_4, ap_fixed<32,4> a_5)
    // for ap_fixed<x,y>, every number should be multiplied by 2^(x-y)

    for(int i = 0; i < cos_qpos.size(); i++){
      cos_qpos[i] = cos_qpos[i] * pow(2, 14);
      sin_qpos[i] = sin_qpos[i] * pow(2, 14);
      v[i] = v[i] * pow(2, 14);
      a[i] = a[i] * pow(2, 14);
    }


    rnea(
        cos_qpos[0], cos_qpos[1], cos_qpos[2], cos_qpos[3], cos_qpos[4], cos_qpos[5],
        sin_qpos[0], sin_qpos[1], sin_qpos[2], sin_qpos[3], sin_qpos[4], sin_qpos[5],
        v[0], v[1], v[2], v[3], v[4], v[5],
        a[0], a[1], a[2], a[3], a[4], a[5]
    );
}